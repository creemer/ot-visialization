define(["api/SplunkVisualizationBase","api/SplunkVisualizationUtils","splunkjs/mvc/utils"], function(__WEBPACK_EXTERNAL_MODULE_121__, __WEBPACK_EXTERNAL_MODULE_122__, __WEBPACK_EXTERNAL_MODULE_123__) { return /******/ (function(modules) { // webpackBootstrap
    /******/ 	// The module cache
    /******/ 	var installedModules = {};
    
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
    
    /******/ 		// Check if module is in cache
    /******/ 		if(installedModules[moduleId])
    /******/ 			return installedModules[moduleId].exports;
    
    /******/ 		// Create a new module (and put it into the cache)
    /******/ 		var module = installedModules[moduleId] = {
    /******/ 			exports: {},
    /******/ 			id: moduleId,
    /******/ 			loaded: false
    /******/ 		};
    
    /******/ 		// Execute the module function
    /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    
    /******/ 		// Flag the module as loaded
    /******/ 		module.loaded = true;
    
    /******/ 		// Return the exports of the module
    /******/ 		return module.exports;
    /******/ 	}
    
    
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/ 	__webpack_require__.m = modules;
    
    /******/ 	// expose the module cache
    /******/ 	__webpack_require__.c = installedModules;
    
    /******/ 	// __webpack_public_path__
    /******/ 	__webpack_require__.p = "";
    
    /******/ 	// Load entry module and return exports
    /******/ 	return __webpack_require__(0);
    /******/ })
    /************************************************************************/
    /******/ ([
    /* 0 */
    /***/ (function(module, exports, __webpack_require__) {
    
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
         * Visualization source
         */
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
                    __webpack_require__(2),
                    __webpack_require__(124),
                    __webpack_require__(3),
                    __webpack_require__(121),
                    __webpack_require__(122),
                    __webpack_require__(123),
                    __webpack_require__(1),
                    __webpack_require__(125),
                    __webpack_require__(126),
                    __webpack_require__(127),
                    __webpack_require__(128),
                    __webpack_require__(130),
                    __webpack_require__(129)
                    // Add required assets to this list
                ], __WEBPACK_AMD_DEFINE_RESULT__ = function(
                    $,
                    _,
                    moment,
                    SplunkVisualizationBase,
                    vizUtils,
                    utils
                ) {
            // Extend from SplunkVisualizationBase
            return SplunkVisualizationBase.extend({
          
                getProperty: function getProperty(name) {
                    var config = this._config;
                    var propertyValue = config[this.getPropertyNamespaceInfo().propertyNamespace + name];
                    return vizUtils.escapeHtml(propertyValue);
                },
                initialize: function initialize() {
                    SplunkVisualizationBase.prototype.initialize.apply(this, arguments);
                    this.$el = $(this.el);
    
                    this.uniqueId = 'ot-chart-' + Math.ceil(Math.random() * 100000000);
                    this.$el.append('<div id="' + this.uniqueId + '"></div>');
                    // Initialization logic goes here
                },
    
                // Optionally implement to format data returned from search.
                // The returned object will be passed to updateView as 'data'
                formatData: function (data) {
                    var _this = this;
                    let needDownsample = this.getProperty('needDownsample') === 'true';

                    console.log('Begin date formatting');
                    console.log('formatData data: ', data);

                    if (data.rows.length < 1) {
                        return false;
                    }

                    var series = [];
                    var rows = data.rows;

                    if(needDownsample) {
                        if (Array.isArray(rows[0]) && rows[0].length == 2) {
                            // Data is array of arrays with two values
                            rows = this.downSample(rows, 150);
                            return rows.forEach( row => {
                                return {
                                    date: row[0],
                                    value: row[1],
                                }
                            })
                        } else {
                            for(let i = 0, len = rows.length; i < len; i++) {
                                let row = rows[i];

                                if (row.length > 2) {
                                    while(row.length > 2) {
                                        row.pop();    
                                    }
                                };

                                if(row[1] == null) { 
                                    row[1] = '0' 
                                };

                                if(isNaN(row[0] * 1)) { 
                                    row[0] = new Date(row[0]).getTime(); 
                                };

                            } // end for

                            var dowsampled = this.downSample(rows, 100);
                            console.log('Downsampled', dowsampled);

                            dowsampled.map( item => {
                                series.push({
                                    date: moment(item[0]).format('DD-MM-YYYY'),
                                    value: item[1],
                                })
                            })
                            console.log('Series', series);
                            return series;
                        }
                    } // end if   
                   
                    data.rows.map( (row) => { 
                        series.push({
                            date: moment(row[0]).format('DD-MM-YYYY'),
                            value: row[1],
                        })
                    });

                    return series;
                },
                // drilldownToTimeRangeAndCategory: function(earliestTime, latestTime, categoryName, categoryValue, browserEvent) {
                //     var data = {};
                //     data[categoryName] = categoryValue;
                    
                //     var earliest = this.startDate.clone().add(earliestTime, 'seconds').format();
                //     var latest = this.startDate.clone().add(latestTime, 'seconds').format();
    
                //     var obj4Drilldown = {
                //         action: SplunkVisualizationBase.FIELD_VALUE_DRILLDOWN,
                //         data: data,
                //         earliest: earliest,
                //         latest: latest
                //     };
    
                //     this.drilldown(obj4Drilldown, browserEvent, function(err, res) {
                //         console.log('Callback for drilldown: ', err, res);
                //     });
                // },
    
                // Implement updateView to render a visualization.
                //  'data' will be the data object returned from formatData or from the search
                //  'config' will be the configuration property object
                updateView: function(data, config) {
                    console.log('UpdatView data: ', data);
                    const id = '#' + this.uniqueId;

                    var containerHeight = this.$el.closest('.viz-controller').height();
                    this.$el.find(id).css({
                        height: containerHeight - 30 + 'px'
                    });

                    var chart = AmCharts.makeChart(this.uniqueId, {
                        "type": "serial",
                        "theme": "light",
                        "marginRight": 80,
                        "autoMarginOffset": 20,
                        "marginTop": 7,
                        "dataProvider": data,
                        "valueAxes": [{
                            "axisAlpha": 0.2,
                            "dashLength": 1,
                            "position": "left"
                        }],
                        "mouseWheelZoomEnabled": true,
                        "graphs": [{
                            "id": "g1",
                            "balloonText": "[[value]]",
                            "bullet": "round",
                            "bulletBorderAlpha": 1,
                            "bulletColor": "#FFFFFF",
                            "hideBulletsCount": 50,
                            "title": "red line",
                            "valueField": "value",
                            "useLineColorForBulletBorder": true,
                            "lineThickness": 2.5,
                            "balloon":{
                                "drop":true
                            }
                        }],
                        "chartScrollbar": {
                            "autoGridCount": true,
                            "graph": "g1",
                            "scrollbarHeight": 40
                        },
                        "chartCursor": {
                           "limitToGraph":"g1"
                        },
                        "categoryField": "date",
                        "categoryAxis": {
                            "parseDates": false,
                            "axisColor": "#DADADA",
                            "dashLength": 1,
                            "minorGridEnabled": false
                        },
                        "export": {
                            "enabled": true
                        }
                    }); // end of chart

                    chart.addListener("rendered", () => {
                        chart.zoomToIndexes(chart.dataProvider.length - 40, chart.dataProvider.length - 1);
                    });

                    // var chart = AmCharts.makeChart(this.uniqueId, {
                    //     "type": "serial",
                    //     "categoryField": "date",
                    //     "dataDateFormat": "YYYY-MM-DD",
                    //     "mouseWheelZoomEnabled": true,
                    //     "graphs": [{
                    //         "id": "g1",
                    //         "balloonText": "[[value]]",
                    //         "bullet": "round",
                    //         "bulletBorderAlpha": 1,
                    //         "bulletColor": "#FFFFFF",
                    //         "hideBulletsCount": 50,
                    //         "title": "red line",
                    //         "valueField": "value",
                    //         "useLineColorForBulletBorder": true,
                    //         "balloon":{
                    //             "drop":true
                    //         }
                    //     }],
                    //     "chartScrollbar": {
                    //         "autoGridCount": true,
                    //         "graph": "g1",
                    //         "scrollbarHeight": 40
                    //     },
                    //     "categoryAxis": {
                    //         "parseDates": false,
                    //         "axisColor": "#DADADA",
                    //         "dashLength": 1,
                    //         "minorGridEnabled": true
                    //     },
                    //     "dataProvider": data,
                    //     "export": {
                    //         "enabled": true
                    //     }
                    // });                
                      
                    $(id).css('position', 'relative');
                    var button = document.createElement('div');
                    button.setAttribute('id', 'btn-full-screen-gantt');
                    button.innerHTML = '&#128269;';
    
                    $(id).append(button);
    
                    button.addEventListener('click', (event) => { this.fullScreen(event, 'Gantt-'); })
    
                }, // End UpdateView
    
                // Search data params
                getInitialDataParams: function() {
                    return ({
                        outputMode: SplunkVisualizationBase.ROW_MAJOR_OUTPUT_MODE,
                        count: 10000
                    });
                },
                
                fullScreen: function(event, idLooksLike) {
                    if(document.mozFullScreen || document.webkitIsFullScreen || window.innerHeight == screen.height) {
                        if (document.cancelFullScreen) {
                            document.cancelFullScreen();
                            return;
                        } else if (document.mozCancelFullScreen) {
                            document.mozCancelFullScreen();
                            return;
                        } else if (document.webkitCancelFullScreen) {
                            document.webkitCancelFullScreen();
                            return;
                        }
                    };
    
                    var elem = document.getElementById(this.uniqViewNum);
        
                    if (elem.requestFullscreen) {
                        elem.requestFullscreen();
                    } else if (elem.mozRequestFullScreen) {
                        elem.mozRequestFullScreen();
                    } else if (elem.webkitRequestFullscreen) {
                        elem.webkitRequestFullscreen();
                    } else if (elem.msRequestFullscreen) {
                        elem.msRequestFullscreen();
                    }
                },

                downSample: function(data, threshold) {
                    
                    var data_length = data.length;
                    if (threshold >= data_length || threshold === 0) {
                        return data; // Nothing to do
                    }
                
                    var sampled = [],
                        sampled_index = 0;
                
                    // Bucket size. Leave room for start and end data points
                    var every = (data_length - 2) / (threshold - 2);
                
                    var a = 0,  // Initially a is the first point in the triangle
                        max_area_point,
                        max_area,
                        area,
                        next_a;
                
                    sampled[ sampled_index++ ] = data[ a ]; // Always add the first point
                
                    for (var i = 0; i < threshold - 2; i++) {
                
                        // Calculate point average for next bucket (containing c)
                        var avg_x = 0,
                            avg_y = 0,
                            avg_range_start  = Math.floor( ( i + 1 ) * every ) + 1,
                            avg_range_end    = Math.floor( ( i + 2 ) * every ) + 1;
                        avg_range_end = avg_range_end < data_length ? avg_range_end : data_length;
                
                        var avg_range_length = avg_range_end - avg_range_start;
                
                        for ( ; avg_range_start<avg_range_end; avg_range_start++ ) {
                        avg_x += data[ avg_range_start ][ 0 ] * 1; // * 1 enforces Number (value may be Date)
                        avg_y += data[ avg_range_start ][ 1 ] * 1;
                        }
                        avg_x /= avg_range_length;
                        avg_y /= avg_range_length;
                
                        // Get the range for this bucket
                        var range_offs = Math.floor( (i + 0) * every ) + 1,
                            range_to   = Math.floor( (i + 1) * every ) + 1;
                
                        // Point a
                        var point_a_x = data[ a ][ 0 ] * 1, // enforce Number (value may be Date)
                            point_a_y = data[ a ][ 1 ] * 1;
                
                        max_area = area = -1;
                
                        for ( ; range_offs < range_to; range_offs++ ) {
                            // Calculate triangle area over three buckets
                            
                            area = Math.abs( ( point_a_x - avg_x ) * ( data[ range_offs ][1] - point_a_y ) -
                                        ( point_a_x - data[ range_offs ][0] ) * ( avg_y - point_a_y )
                                    ) * 0.5;
                            if ( area > max_area ) {
                                max_area = area;
                                max_area_point = data[ range_offs ];
                                next_a = range_offs; // Next a is this b
                            }
                        }
                
                        sampled[ sampled_index++ ] = max_area_point; // Pick this point from the bucket
                        a = next_a; // This a is the next a (chosen b)
                    }
                
                    sampled[ sampled_index++ ] = data[ data_length - 1 ]; // Always add last
                
                    return sampled;
                },
    
                // Override to respond to re-sizing events
                reflow: function() {}
            });
        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    
    /***/ }),
    /* 1 */
    /***/ (function(module, exports) {
    
        (function() {
            var d;
            window.AmCharts ? d = window.AmCharts : (d = {}, window.AmCharts = d, d.themes = {}, d.maps = {}, d.inheriting = {}, d.charts = [], d.onReadyArray = [], d.useUTC = !1, d.updateRate = 60, d.uid = 0, d.lang = {}, d.translations = {}, d.mapTranslations = {}, d.windows = {}, d.initHandlers = [], d.amString = "am", d.pmString = "pm");
            d.Class = function(a) {
                var b = function() {
                    arguments[0] !== d.inheriting && (this.events = {}, this.construct.apply(this, arguments))
                };
                a.inherits ? (b.prototype = new a.inherits(d.inheriting), b.base = a.inherits.prototype, delete a.inherits) :
                    (b.prototype.createEvents = function() {
                        for (var a = 0; a < arguments.length; a++) this.events[arguments[a]] = []
                    }, b.prototype.listenTo = function(a, b, c) {
                        this.removeListener(a, b, c);
                        a.events[b].push({
                            handler: c,
                            scope: this
                        })
                    }, b.prototype.addListener = function(a, b, c) {
                        this.removeListener(this, a, b);
                        a && this.events[a] && this.events[a].push({
                            handler: b,
                            scope: c
                        })
                    }, b.prototype.removeListener = function(a, b, c) {
                        if (a && a.events && (a = a.events[b]))
                            for (b = a.length - 1; 0 <= b; b--) a[b].handler === c && a.splice(b, 1)
                    }, b.prototype.fire = function(a) {
                        for (var b =
                                this.events[a.type], c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.handler.call(d.scope, a)
                        }
                    });
                for (var c in a) b.prototype[c] = a[c];
                return b
            };
            d.addChart = function(a) {
                window.requestAnimationFrame ? d.animationRequested || (d.animationRequested = !0, window.requestAnimationFrame(d.update)) : d.updateInt || (d.updateInt = setInterval(function() {
                    d.update()
                }, Math.round(1E3 / d.updateRate)));
                d.charts.push(a)
            };
            d.removeChart = function(a) {
                for (var b = d.charts, c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);
                0 === b.length && (d.requestAnimation && (window.cancelAnimationFrame(d.requestAnimation),
                    d.animationRequested = !1), d.updateInt && (clearInterval(d.updateInt), d.updateInt = NaN))
            };
            d.isModern = !0;
            d.getIEVersion = function() {
                var a = 0,
                    b, c;
                "Microsoft Internet Explorer" == navigator.appName && (b = navigator.userAgent, c = /MSIE ([0-9]{1,}[.0-9]{0,})/, null !== c.exec(b) && (a = parseFloat(RegExp.$1)));
                return a
            };
            d.applyLang = function(a, b) {
                var c = d.translations;
                b.dayNames = d.extend({}, d.dayNames);
                b.shortDayNames = d.extend({}, d.shortDayNames);
                b.monthNames = d.extend({}, d.monthNames);
                b.shortMonthNames = d.extend({}, d.shortMonthNames);
                b.amString = "am";
                b.pmString = "pm";
                c && (c = c[a]) && (d.lang = c, b.langObj = c, c.monthNames && (b.dayNames = d.extend({}, c.dayNames), b.shortDayNames = d.extend({}, c.shortDayNames), b.monthNames = d.extend({}, c.monthNames), b.shortMonthNames = d.extend({}, c.shortMonthNames)), c.am && (b.amString = c.am), c.pm && (b.pmString = c.pm));
                d.amString = b.amString;
                d.pmString = b.pmString
            };
            d.IEversion = d.getIEVersion();
            9 > d.IEversion && 0 < d.IEversion && (d.isModern = !1, d.isIE = !0);
            d.dx = 0;
            d.dy = 0;
            if (document.addEventListener || window.opera) d.isNN = !0, d.isIE = !1, d.dx = .5, d.dy = .5;
            document.attachEvent && (d.isNN = !1, d.isIE = !0, d.isModern || (d.dx = 0, d.dy = 0));
            window.chrome && (d.chrome = !0);
            d.handleMouseUp = function(a) {
                for (var b = d.charts, c = 0; c < b.length; c++) {
                    var e = b[c];
                    e && e.handleReleaseOutside && e.handleReleaseOutside(a)
                }
            };
            d.handleMouseMove = function(a) {
                for (var b = d.charts, c = 0; c < b.length; c++) {
                    var e = b[c];
                    e && e.handleMouseMove && e.handleMouseMove(a)
                }
            };
            d.handleWheel = function(a) {
                for (var b = d.charts, c = 0; c < b.length; c++) {
                    var e = b[c];
                    if (e && e.mouseIsOver) {
                        (e.mouseWheelScrollEnabled ||
                            e.mouseWheelZoomEnabled) && e.handleWheel && e.handleWheel(a);
                        break
                    }
                }
            };
            d.resetMouseOver = function() {
                for (var a = d.charts, b = 0; b < a.length; b++) {
                    var c = a[b];
                    c && (c.mouseIsOver = !1)
                }
            };
            d.ready = function(a) {
                d.onReadyArray.push(a)
            };
            d.handleLoad = function() {
                d.isReady = !0;
                for (var a = d.onReadyArray, b = 0; b < a.length; b++) {
                    var c = a[b];
                    isNaN(d.processDelay) ? c() : setTimeout(c, d.processDelay * b)
                }
            };
            d.addInitHandler = function(a, b) {
                d.initHandlers.push({
                    method: a,
                    types: b
                })
            };
            d.callInitHandler = function(a) {
                var b = d.initHandlers;
                if (d.initHandlers)
                    for (var c =
                            0; c < b.length; c++) {
                        var e = b[c];
                        e.types ? d.isInArray(e.types, a.type) && e.method(a) : e.method(a)
                    }
            };
            d.getUniqueId = function() {
                d.uid++;
                return "AmChartsEl-" + d.uid
            };
            d.isNN && (document.addEventListener("mousemove", d.handleMouseMove), document.addEventListener("mouseup", d.handleMouseUp, !0), window.addEventListener("load", d.handleLoad, !0));
            d.isIE && (document.attachEvent("onmousemove", d.handleMouseMove), document.attachEvent("onmouseup", d.handleMouseUp), window.attachEvent("onload", d.handleLoad));
            d.addWheelListeners = function() {
                d.wheelIsListened ||
                    (d.isNN && (window.addEventListener("DOMMouseScroll", d.handleWheel, !0), document.addEventListener("mousewheel", d.handleWheel, !0)), d.isIE && document.attachEvent("onmousewheel", d.handleWheel));
                d.wheelIsListened = !0
            };
            d.clear = function() {
                var a = d.charts;
                if (a)
                    for (var b = a.length - 1; 0 <= b; b--) a[b].clear();
                d.updateInt && clearInterval(d.updateInt);
                d.requestAnimation && window.cancelAnimationFrame(d.requestAnimation);
                d.charts = [];
                d.isNN && (document.removeEventListener("mousemove", d.handleMouseMove, !0), document.removeEventListener("mouseup",
                    d.handleMouseUp, !0), window.removeEventListener("load", d.handleLoad, !0), window.removeEventListener("DOMMouseScroll", d.handleWheel, !0), document.removeEventListener("mousewheel", d.handleWheel, !0));
                d.isIE && (document.detachEvent("onmousemove", d.handleMouseMove), document.detachEvent("onmouseup", d.handleMouseUp), window.detachEvent("onload", d.handleLoad))
            };
            d.makeChart = function(a, b, c) {
                var e = b.type,
                    h = b.theme;
                d.isString(h) && (h = d.themes[h], b.theme = h);
                var f;
                switch (e) {
                    case "serial":
                        f = new d.AmSerialChart(h);
                        break;
                    case "xy":
                        f = new d.AmXYChart(h);
                        break;
                    case "pie":
                        f = new d.AmPieChart(h);
                        break;
                    case "radar":
                        f = new d.AmRadarChart(h);
                        break;
                    case "gauge":
                        f = new d.AmAngularGauge(h);
                        break;
                    case "funnel":
                        f = new d.AmFunnelChart(h);
                        break;
                    case "map":
                        f = new d.AmMap(h);
                        break;
                    case "stock":
                        f = new d.AmStockChart(h);
                        break;
                    case "gantt":
                        f = new d.AmGanttChart(h)
                }
                d.extend(f, b);
                d.isReady ? isNaN(c) ? f.write(a) : setTimeout(function() {
                    d.realWrite(f, a)
                }, c) : d.ready(function() {
                    isNaN(c) ? f.write(a) : setTimeout(function() {
                        d.realWrite(f, a)
                    }, c)
                });
                return f
            };
            d.realWrite = function(a, b) {
                a.write(b)
            };
            d.updateCount = 0;
            d.validateAt = Math.round(d.updateRate / 10);
            d.update = function() {
                var a = d.charts;
                d.updateCount++;
                var b = !1;
                d.updateCount == d.validateAt && (b = !0, d.updateCount = 0);
                if (a)
                    for (var c = a.length - 1; 0 <= c; c--) a[c].update && a[c].update(), b && (a[c].autoResize ? a[c].validateSize && a[c].validateSize() : a[c].premeasure && a[c].premeasure());
                window.requestAnimationFrame && (d.requestAnimation = window.requestAnimationFrame(d.update))
            };
            "complete" == document.readyState && d.handleLoad()
        })();
        (function() {
            var d = window.AmCharts;
            d.toBoolean = function(a, b) {
                if (void 0 === a) return b;
                switch (String(a).toLowerCase()) {
                    case "true":
                    case "yes":
                    case "1":
                        return !0;
                    case "false":
                    case "no":
                    case "0":
                    case null:
                        return !1;
                    default:
                        return !!a
                }
            };
            d.removeFromArray = function(a, b) {
                var c;
                if (void 0 !== b && void 0 !== a)
                    for (c = a.length - 1; 0 <= c; c--) a[c] == b && a.splice(c, 1)
            };
            d.getPath = function() {
                var a = document.getElementsByTagName("script");
                if (a)
                    for (var b = 0; b < a.length; b++) {
                        var c = a[b].src;
                        if (-1 !== c.search(/\/(amcharts|ammap)\.js/)) return c.replace(/\/(amcharts|ammap)\.js.*/,
                            "/")
                    }
            };
            d.normalizeUrl = function(a) {
                return "" !== a && -1 === a.search(/\/$/) ? a + "/" : a
            };
            d.isAbsolute = function(a) {
                return 0 === a.search(/^http[s]?:|^\//)
            };
            d.isInArray = function(a, b) {
                for (var c = 0; c < a.length; c++)
                    if (a[c] == b) return !0;
                return !1
            };
            d.getDecimals = function(a) {
                var b = 0;
                isNaN(a) || (a = String(a), -1 != a.indexOf("e-") ? b = Number(a.split("-")[1]) : -1 != a.indexOf(".") && (b = a.split(".")[1].length));
                return b
            };
            d.wordwrap = function(a, b, c, e) {
                var h, f, g, k;
                a += "";
                if (1 > b) return a;
                h = -1;
                for (a = (k = a.split(/\r\n|\n|\r/)).length; ++h < a; k[h] +=
                    g) {
                    g = k[h];
                    for (k[h] = ""; g.length > b; k[h] += d.trim(g.slice(0, f)) + ((g = g.slice(f)).length ? c : "")) f = 2 == e || (f = g.slice(0, b + 1).match(/\S*(\s)?$/))[1] ? b : f.input.length - f[0].length || 1 == e && b || f.input.length + (f = g.slice(b).match(/^\S*/))[0].length;
                    g = d.trim(g)
                }
                return k.join(c)
            };
            d.trim = function(a) {
                return a.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
            };
            d.wrappedText = function(a, b, c, e, h, f, g, k) {
                var l = d.text(a, b, c, e, h, f, g);
                if (l) {
                    var m = l.getBBox();
                    if (m.width > k) {
                        var p = "\n";
                        d.isModern || (p = "<br>");
                        k = Math.floor(k / (m.width /
                            b.length));
                        2 < k && (k -= 2);
                        b = d.wordwrap(b, k, p, !0);
                        l.remove();
                        l = d.text(a, b, c, e, h, f, g)
                    }
                }
                return l
            };
            d.getStyle = function(a, b) {
                var c = "";
                if (document.defaultView && document.defaultView.getComputedStyle) try {
                    c = document.defaultView.getComputedStyle(a, "").getPropertyValue(b)
                } catch (e) {} else a.currentStyle && (b = b.replace(/\-(\w)/g, function(a, b) {
                    return b.toUpperCase()
                }), c = a.currentStyle[b]);
                return c
            };
            d.removePx = function(a) {
                if (void 0 !== a) return Number(a.substring(0, a.length - 2))
            };
            d.getURL = function(a, b) {
                if (a)
                    if ("_self" !=
                        b && b)
                        if ("_top" == b && window.top) window.top.location.href = a;
                        else if ("_parent" == b && window.parent) window.parent.location.href = a;
                else if ("_blank" == b) window.open(a);
                else {
                    var c = document.getElementsByName(b)[0];
                    c ? c.src = a : (c = d.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : d.windows[b] = window.open(a) : d.windows[b] = window.open(a)
                } else window.location.href = a
            };
            d.ifArray = function(a) {
                return a && "object" == typeof a && 0 < a.length ? !0 : !1
            };
            d.callMethod = function(a, b) {
                var c;
                for (c = 0; c < b.length; c++) {
                    var e = b[c];
                    if (e) {
                        if (e[a]) e[a]();
                        var d = e.length;
                        if (0 < d) {
                            var f;
                            for (f = 0; f < d; f++) {
                                var g = e[f];
                                if (g && g[a]) g[a]()
                            }
                        }
                    }
                }
            };
            d.toNumber = function(a) {
                return "number" == typeof a ? a : Number(String(a).replace(/[^0-9\-.]+/g, ""))
            };
            d.toColor = function(a) {
                if ("" !== a && void 0 !== a)
                    if (-1 != a.indexOf(",")) {
                        a = a.split(",");
                        var b;
                        for (b = 0; b < a.length; b++) {
                            var c = a[b].substring(a[b].length - 6, a[b].length);
                            a[b] = "#" + c
                        }
                    } else a = a.substring(a.length - 6, a.length), a = "#" + a;
                return a
            };
            d.toCoordinate = function(a, b, c) {
                var e;
                void 0 !== a && (a = String(a), c && c < b && (b = c), e = Number(a), -1 != a.indexOf("!") &&
                    (e = b - Number(a.substr(1))), -1 != a.indexOf("%") && (e = b * Number(a.substr(0, a.length - 1)) / 100));
                return e
            };
            d.fitToBounds = function(a, b, c) {
                a < b && (a = b);
                a > c && (a = c);
                return a
            };
            d.isDefined = function(a) {
                return void 0 === a ? !1 : !0
            };
            d.stripNumbers = function(a) {
                return a.replace(/[0-9]+/g, "")
            };
            d.roundTo = function(a, b) {
                if (0 > b) return a;
                var c = Math.pow(10, b);
                return Math.round(a * c) / c
            };
            d.toFixed = function(a, b) {
                var c = String(Math.round(a * Math.pow(10, b)));
                if (0 < b) {
                    var e = c.length;
                    if (e < b) {
                        var d;
                        for (d = 0; d < b - e; d++) c = "0" + c
                    }
                    e = c.substring(0,
                        c.length - b);
                    "" === e && (e = 0);
                    return e + "." + c.substring(c.length - b, c.length)
                }
                return String(c)
            };
            d.formatDuration = function(a, b, c, e, h, f) {
                var g = d.intervals,
                    k = f.decimalSeparator;
                if (a >= g[b].contains) {
                    var l = a - Math.floor(a / g[b].contains) * g[b].contains;
                    "ss" == b ? (l = d.formatNumber(l, f), 1 == l.split(k)[0].length && (l = "0" + l)) : l = d.roundTo(l, f.precision);
                    ("mm" == b || "hh" == b) && 10 > l && (l = "0" + l);
                    c = l + "" + e[b] + "" + c;
                    a = Math.floor(a / g[b].contains);
                    b = g[b].nextInterval;
                    return d.formatDuration(a, b, c, e, h, f)
                }
                "ss" == b && (a = d.formatNumber(a,
                    f), 1 == a.split(k)[0].length && (a = "0" + a));
                ("mm" == b || "hh" == b) && 10 > a && (a = "0" + a);
                c = a + "" + e[b] + "" + c;
                if (g[h].count > g[b].count)
                    for (a = g[b].count; a < g[h].count; a++) b = g[b].nextInterval, "ss" == b || "mm" == b || "hh" == b ? c = "00" + e[b] + "" + c : "DD" == b && (c = "0" + e[b] + "" + c);
                ":" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1));
                return c
            };
            d.formatNumber = function(a, b, c, e, h) {
                a = d.roundTo(a, b.precision);
                isNaN(c) && (c = b.precision);
                var f = b.decimalSeparator;
                b = b.thousandsSeparator;
                var g;
                g = 0 > a ? "-" : "";
                a = Math.abs(a);
                var k = String(a),
                    l = !1; - 1 !=
                    k.indexOf("e") && (l = !0);
                0 <= c && !l && (k = d.toFixed(a, c));
                var m = "";
                if (l) m = k;
                else {
                    var k = k.split("."),
                        l = String(k[0]),
                        p;
                    for (p = l.length; 0 <= p; p -= 3) m = p != l.length ? 0 !== p ? l.substring(p - 3, p) + b + m : l.substring(p - 3, p) + m : l.substring(p - 3, p);
                    void 0 !== k[1] && (m = m + f + k[1]);
                    void 0 !== c && 0 < c && "0" != m && (m = d.addZeroes(m, f, c))
                }
                m = g + m;
                "" === g && !0 === e && 0 !== a && (m = "+" + m);
                !0 === h && (m += "%");
                return m
            };
            d.addZeroes = function(a, b, c) {
                a = a.split(b);
                void 0 === a[1] && 0 < c && (a[1] = "0");
                return a[1].length < c ? (a[1] += "0", d.addZeroes(a[0] + b + a[1], b, c)) : void 0 !==
                    a[1] ? a[0] + b + a[1] : a[0]
            };
            d.scientificToNormal = function(a) {
                var b;
                a = String(a).split("e");
                var c;
                if ("-" == a[1].substr(0, 1)) {
                    b = "0.";
                    for (c = 0; c < Math.abs(Number(a[1])) - 1; c++) b += "0";
                    b += a[0].split(".").join("")
                } else {
                    var e = 0;
                    b = a[0].split(".");
                    b[1] && (e = b[1].length);
                    b = a[0].split(".").join("");
                    for (c = 0; c < Math.abs(Number(a[1])) - e; c++) b += "0"
                }
                return b
            };
            d.toScientific = function(a, b) {
                if (0 === a) return "0";
                var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E),
                    e = String(e).split(".").join(b);
                return String(e) + "e" + c
            };
            d.randomColor =
                function() {
                    return "#" + ("00000" + (16777216 * Math.random() << 0).toString(16)).substr(-6)
                };
            d.hitTest = function(a, b, c) {
                var e = !1,
                    h = a.x,
                    f = a.x + a.width,
                    g = a.y,
                    k = a.y + a.height,
                    l = d.isInRectangle;
                e || (e = l(h, g, b));
                e || (e = l(h, k, b));
                e || (e = l(f, g, b));
                e || (e = l(f, k, b));
                e || !0 === c || (e = d.hitTest(b, a, !0));
                return e
            };
            d.isInRectangle = function(a, b, c) {
                return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1
            };
            d.isPercents = function(a) {
                if (-1 != String(a).indexOf("%")) return !0
            };
            d.formatValue = function(a, b, c, e, h, f, g, k) {
                if (b) {
                    void 0 ===
                        h && (h = "");
                    var l;
                    for (l = 0; l < c.length; l++) {
                        var m = c[l],
                            p = b[m];
                        void 0 !== p && (p = f ? d.addPrefix(p, k, g, e) : d.formatNumber(p, e), a = a.replace(new RegExp("\\[\\[" + h + "" + m + "\\]\\]", "g"), p))
                    }
                }
                return a
            };
            d.formatDataContextValue = function(a, b) {
                if (a) {
                    var c = a.match(/\[\[.*?\]\]/g),
                        e;
                    for (e = 0; e < c.length; e++) {
                        var d = c[e],
                            d = d.substr(2, d.length - 4);
                        void 0 !== b[d] && (a = a.replace(new RegExp("\\[\\[" + d + "\\]\\]", "g"), b[d]))
                    }
                }
                return a
            };
            d.massReplace = function(a, b) {
                for (var c in b)
                    if (b.hasOwnProperty(c)) {
                        var e = b[c];
                        void 0 === e && (e = "");
                        a =
                            a.replace(c, e)
                    }
                return a
            };
            d.cleanFromEmpty = function(a) {
                return a.replace(/\[\[[^\]]*\]\]/g, "")
            };
            d.addPrefix = function(a, b, c, e, h) {
                var f = d.formatNumber(a, e),
                    g = "",
                    k, l, m;
                if (0 === a) return "0";
                0 > a && (g = "-");
                a = Math.abs(a);
                if (1 < a)
                    for (k = b.length - 1; - 1 < k; k--) {
                        if (a >= b[k].number && (l = a / b[k].number, m = Number(e.precision), 1 > m && (m = 1), c = d.roundTo(l, m), m = d.formatNumber(c, {
                                precision: -1,
                                decimalSeparator: e.decimalSeparator,
                                thousandsSeparator: e.thousandsSeparator
                            }), !h || l == c)) {
                            f = g + "" + m + "" + b[k].prefix;
                            break
                        }
                    } else
                        for (k = 0; k < c.length; k++)
                            if (a <=
                                c[k].number) {
                                l = a / c[k].number;
                                m = Math.abs(Math.floor(Math.log(l) * Math.LOG10E));
                                l = d.roundTo(l, m);
                                f = g + "" + l + "" + c[k].prefix;
                                break
                            }
                return f
            };
            d.remove = function(a) {
                a && a.remove()
            };
            d.getEffect = function(a) {
                ">" == a && (a = "easeOutSine");
                "<" == a && (a = "easeInSine");
                "elastic" == a && (a = "easeOutElastic");
                return a
            };
            d.getObjById = function(a, b) {
                var c, e;
                for (e = 0; e < a.length; e++) {
                    var d = a[e];
                    if (d.id == b) {
                        c = d;
                        break
                    }
                }
                return c
            };
            d.applyTheme = function(a, b, c) {
                b || (b = d.theme);
                try {
                    b = JSON.parse(JSON.stringify(b))
                } catch (e) {}
                b && b[c] && d.extend(a,
                    b[c])
            };
            d.isString = function(a) {
                return "string" == typeof a ? !0 : !1
            };
            d.extend = function(a, b, c) {
                var e;
                a || (a = {});
                for (e in b) c ? a.hasOwnProperty(e) || (a[e] = b[e]) : a[e] = b[e];
                return a
            };
            d.copyProperties = function(a, b) {
                for (var c in a) a.hasOwnProperty(c) && "events" != c && void 0 !== a[c] && "function" != typeof a[c] && "cname" != c && (b[c] = a[c])
            };
            d.processObject = function(a, b, c, e) {
                if (!1 === a instanceof b && (a = e ? d.extend(new b(c), a) : d.extend(a, new b(c), !0), a.listeners))
                    for (var h in a.listeners) b = a.listeners[h], a.addListener(b.event, b.method);
                return a
            };
            d.fixNewLines = function(a) {
                var b = RegExp("\\n", "g");
                a && (a = a.replace(b, "<br />"));
                return a
            };
            d.fixBrakes = function(a) {
                if (d.isModern) {
                    var b = RegExp("<br>", "g");
                    a && (a = a.replace(b, "\n"))
                } else a = d.fixNewLines(a);
                return a
            };
            d.deleteObject = function(a, b) {
                if (a) {
                    if (void 0 === b || null === b) b = 20;
                    if (0 !== b)
                        if ("[object Array]" === Object.prototype.toString.call(a))
                            for (var c = 0; c < a.length; c++) d.deleteObject(a[c], b - 1), a[c] = null;
                        else if (a && !a.tagName) try {
                        for (c in a.theme = null, a) a[c] && ("object" == typeof a[c] && d.deleteObject(a[c],
                            b - 1), "function" != typeof a[c] && (a[c] = null))
                    } catch (e) {}
                }
            };
            d.bounce = function(a, b, c, e, d) {
                return (b /= d) < 1 / 2.75 ? 7.5625 * e * b * b + c : b < 2 / 2.75 ? e * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? e * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : e * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c
            };
            d.easeInOutQuad = function(a, b, c, e, d) {
                b /= d / 2;
                if (1 > b) return e / 2 * b * b + c;
                b--;
                return -e / 2 * (b * (b - 2) - 1) + c
            };
            d.easeInSine = function(a, b, c, e, d) {
                return -e * Math.cos(b / d * (Math.PI / 2)) + e + c
            };
            d.easeOutSine = function(a, b, c, e, d) {
                return e * Math.sin(b / d * (Math.PI / 2)) + c
            };
            d.easeOutElastic =
                function(a, b, c, e, d) {
                    a = 1.70158;
                    var f = 0,
                        g = e;
                    if (0 === b) return c;
                    if (1 == (b /= d)) return c + e;
                    f || (f = .3 * d);
                    g < Math.abs(e) ? (g = e, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(e / g);
                    return g * Math.pow(2, -10 * b) * Math.sin(2 * (b * d - a) * Math.PI / f) + e + c
                };
            d.fixStepE = function(a) {
                a = a.toExponential(0).split("e");
                var b = Number(a[1]);
                9 == Number(a[0]) && b++;
                return d.generateNumber(1, b)
            };
            d.generateNumber = function(a, b) {
                var c = "",
                    e;
                e = 0 > b ? Math.abs(b) - 1 : Math.abs(b);
                var d;
                for (d = 0; d < e; d++) c += "0";
                return 0 > b ? Number("0." + c + String(a)) : Number(String(a) + c)
            };
            d.setCN =
                function(a, b, c, e) {
                    if (a.addClassNames && b && (b = b.node) && c) {
                        var d = b.getAttribute("class");
                        a = a.classNamePrefix + "-";
                        e && (a = "");
                        d ? b.setAttribute("class", d + " " + a + c) : b.setAttribute("class", a + c)
                    }
                };
            d.removeCN = function(a, b, c) {
                b && (b = b.node) && c && (b = b.classList) && b.remove(a.classNamePrefix + "-" + c)
            };
            d.parseDefs = function(a, b) {
                for (var c in a) {
                    var e = typeof a[c];
                    if (0 < a[c].length && "object" == e)
                        for (var h = 0; h < a[c].length; h++) e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c][h], e);
                    else "object" == e ? (e =
                        document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c], e)) : b.setAttribute(c, a[c])
                }
            }
        })();
        (function() {
            var d = window.AmCharts;
            d.AxisBase = d.Class({
                construct: function(a) {
                    this.createEvents("clickItem", "rollOverItem", "rollOutItem", "rollOverGuide", "rollOutGuide", "clickGuide");
                    this.titleDY = this.y = this.x = this.dy = this.dx = 0;
                    this.axisThickness = 1;
                    this.axisColor = "#000000";
                    this.axisAlpha = 1;
                    this.gridCount = this.tickLength = 5;
                    this.gridAlpha = .15;
                    this.gridThickness = 1;
                    this.gridColor = "#000000";
                    this.dashLength = 0;
                    this.labelFrequency = 1;
                    this.showLastLabel = this.showFirstLabel = !0;
                    this.fillColor = "#FFFFFF";
                    this.fillAlpha =
                        0;
                    this.labelsEnabled = !0;
                    this.labelRotation = 0;
                    this.autoGridCount = !0;
                    this.offset = 0;
                    this.guides = [];
                    this.visible = !0;
                    this.counter = 0;
                    this.guides = [];
                    this.ignoreAxisWidth = this.inside = !1;
                    this.minHorizontalGap = 75;
                    this.minVerticalGap = 35;
                    this.titleBold = !0;
                    this.minorGridEnabled = !1;
                    this.minorGridAlpha = .07;
                    this.autoWrap = !1;
                    this.titleAlign = "middle";
                    this.labelOffset = 0;
                    this.bcn = "axis-";
                    this.centerLabels = !1;
                    this.firstDayOfWeek = 1;
                    this.centerLabelOnFullPeriod = this.markPeriodChange = this.boldPeriodBeginning = !0;
                    this.periods =
                        [{
                            period: "fff",
                            count: 1
                        }, {
                            period: "fff",
                            count: 5
                        }, {
                            period: "fff",
                            count: 10
                        }, {
                            period: "fff",
                            count: 50
                        }, {
                            period: "fff",
                            count: 100
                        }, {
                            period: "fff",
                            count: 500
                        }, {
                            period: "ss",
                            count: 1
                        }, {
                            period: "ss",
                            count: 5
                        }, {
                            period: "ss",
                            count: 10
                        }, {
                            period: "ss",
                            count: 30
                        }, {
                            period: "mm",
                            count: 1
                        }, {
                            period: "mm",
                            count: 5
                        }, {
                            period: "mm",
                            count: 10
                        }, {
                            period: "mm",
                            count: 30
                        }, {
                            period: "hh",
                            count: 1
                        }, {
                            period: "hh",
                            count: 3
                        }, {
                            period: "hh",
                            count: 6
                        }, {
                            period: "hh",
                            count: 12
                        }, {
                            period: "DD",
                            count: 1
                        }, {
                            period: "DD",
                            count: 2
                        }, {
                            period: "DD",
                            count: 3
                        }, {
                            period: "DD",
                            count: 4
                        }, {
                            period: "DD",
                            count: 5
                        }, {
                            period: "WW",
                            count: 1
                        }, {
                            period: "MM",
                            count: 1
                        }, {
                            period: "MM",
                            count: 2
                        }, {
                            period: "MM",
                            count: 3
                        }, {
                            period: "MM",
                            count: 6
                        }, {
                            period: "YYYY",
                            count: 1
                        }, {
                            period: "YYYY",
                            count: 2
                        }, {
                            period: "YYYY",
                            count: 5
                        }, {
                            period: "YYYY",
                            count: 10
                        }, {
                            period: "YYYY",
                            count: 50
                        }, {
                            period: "YYYY",
                            count: 100
                        }];
                    this.dateFormats = [{
                        period: "fff",
                        format: "NN:SS.QQQ"
                    }, {
                        period: "ss",
                        format: "JJ:NN:SS"
                    }, {
                        period: "mm",
                        format: "JJ:NN"
                    }, {
                        period: "hh",
                        format: "JJ:NN"
                    }, {
                        period: "DD",
                        format: "MMM DD"
                    }, {
                        period: "WW",
                        format: "MMM DD"
                    }, {
                        period: "MM",
                        format: "MMM"
                    }, {
                        period: "YYYY",
                        format: "YYYY"
                    }];
                    this.nextPeriod = {
                        fff: "ss",
                        ss: "mm",
                        mm: "hh",
                        hh: "DD",
                        DD: "MM",
                        MM: "YYYY"
                    };
                    d.applyTheme(this, a, "AxisBase")
                },
                zoom: function(a, b) {
                    this.start = a;
                    this.end = b;
                    this.dataChanged = !0;
                    this.draw()
                },
                fixAxisPosition: function() {
                    var a = this.position;
                    "H" == this.orientation ? ("left" == a && (a = "bottom"), "right" == a && (a = "top")) : ("bottom" == a && (a = "left"), "top" == a && (a = "right"));
                    this.position = a
                },
                init: function() {
                    this.createBalloon()
                },
                draw: function() {
                    var a = this.chart;
                    this.prevBY = this.prevBX = NaN;
                    this.allLabels =
                        [];
                    this.counter = 0;
                    this.destroy();
                    this.fixAxisPosition();
                    this.setBalloonBounds();
                    this.labels = [];
                    var b = a.container,
                        c = b.set();
                    a.gridSet.push(c);
                    this.set = c;
                    b = b.set();
                    a.axesLabelsSet.push(b);
                    this.labelsSet = b;
                    this.axisLine = new this.axisRenderer(this);
                    this.autoGridCount ? ("V" == this.orientation ? (a = this.height / this.minVerticalGap, 3 > a && (a = 3)) : a = this.width / this.minHorizontalGap, this.gridCountR = Math.max(a, 1)) : this.gridCountR = this.gridCount;
                    this.axisWidth = this.axisLine.axisWidth;
                    this.addTitle()
                },
                setOrientation: function(a) {
                    this.orientation =
                        a ? "H" : "V"
                },
                addTitle: function() {
                    var a = this.title;
                    this.titleLabel = null;
                    if (a) {
                        var b = this.chart,
                            c = this.titleColor;
                        void 0 === c && (c = b.color);
                        var e = this.titleFontSize;
                        isNaN(e) && (e = b.fontSize + 1);
                        a = d.text(b.container, a, c, b.fontFamily, e, this.titleAlign, this.titleBold);
                        d.setCN(b, a, this.bcn + "title");
                        this.titleLabel = a
                    }
                },
                positionTitle: function() {
                    var a = this.titleLabel;
                    if (a) {
                        var b, c, e = this.labelsSet,
                            h = {};
                        0 < e.length() ? h = e.getBBox() : (h.x = 0, h.y = 0, h.width = this.width, h.height = this.height, d.VML && (h.y += this.y, h.x += this.x));
                        e.push(a);
                        var e = h.x,
                            f = h.y;
                        d.VML && (f -= this.y, e -= this.x);
                        var g = h.width,
                            h = h.height,
                            k = this.width,
                            l = this.height,
                            m = 0,
                            p = a.getBBox().height / 2,
                            q = this.inside,
                            n = this.titleAlign;
                        switch (this.position) {
                            case "top":
                                b = "left" == n ? -1 : "right" == n ? k : k / 2;
                                c = f - 10 - p;
                                break;
                            case "bottom":
                                b = "left" == n ? -1 : "right" == n ? k : k / 2;
                                c = f + h + 10 + p;
                                break;
                            case "left":
                                b = e - 10 - p;
                                q && (b -= 5);
                                m = -90;
                                c = ("left" == n ? l + 1 : "right" == n ? -1 : l / 2) + this.titleDY;
                                break;
                            case "right":
                                b = e + g + 10 + p, q && (b += 7), c = ("left" == n ? l + 2 : "right" == n ? -2 : l / 2) + this.titleDY, m = -90
                        }
                        this.marginsChanged ?
                            (a.translate(b, c), this.tx = b, this.ty = c) : a.translate(this.tx, this.ty);
                        this.marginsChanged = !1;
                        isNaN(this.titleRotation) || (m = this.titleRotation);
                        0 !== m && a.rotate(m)
                    }
                },
                pushAxisItem: function(a, b) {
                    var c = this,
                        e = a.graphics();
                    0 < e.length() && (b ? c.labelsSet.push(e) : c.set.push(e));
                    if (e = a.getLabel()) c.labelsSet.push(e), e.click(function(b) {
                        c.handleMouse(b, a, "clickItem")
                    }).touchend(function(b) {
                        c.handleMouse(b, a, "clickItem")
                    }).mouseover(function(b) {
                        c.handleMouse(b, a, "rollOverItem")
                    }).mouseout(function(b) {
                        c.handleMouse(b,
                            a, "rollOutItem")
                    })
                },
                handleMouse: function(a, b, c) {
                    this.fire({
                        type: c,
                        value: b.value,
                        serialDataItem: b.serialDataItem,
                        axis: this,
                        target: b.label,
                        chart: this.chart,
                        event: a
                    })
                },
                addGuide: function(a) {
                    for (var b = this.guides, c = !1, e = b.length, h = 0; h < b.length; h++) b[h] == a && (c = !0, e = h);
                    a = d.processObject(a, d.Guide, this.theme);
                    a.id || (a.id = "guideAuto" + e + "_" + (new Date).getTime());
                    c || b.push(a)
                },
                removeGuide: function(a) {
                    var b = this.guides,
                        c;
                    for (c = 0; c < b.length; c++) b[c] == a && b.splice(c, 1)
                },
                handleGuideOver: function(a) {
                    clearTimeout(this.chart.hoverInt);
                    var b = a.graphics.getBBox(),
                        c = this.x + b.x + b.width / 2,
                        b = this.y + b.y + b.height / 2,
                        e = a.fillColor;
                    void 0 === e && (e = a.lineColor);
                    this.chart.showBalloon(a.balloonText, e, !0, c, b);
                    this.fire({
                        type: "rollOverGuide",
                        guide: a,
                        chart: this.chart
                    })
                },
                handleGuideOut: function(a) {
                    this.chart.hideBalloon();
                    this.fire({
                        type: "rollOutGuide",
                        guide: a,
                        chart: this.chart
                    })
                },
                handleGuideClick: function(a) {
                    this.chart.hideBalloon();
                    this.fire({
                        type: "clickGuide",
                        guide: a,
                        chart: this.chart
                    })
                },
                addEventListeners: function(a, b) {
                    var c = this;
                    a.mouseover(function() {
                        c.handleGuideOver(b)
                    });
                    a.mouseup(function() {
                        c.handleGuideClick(b)
                    });
                    a.touchstart(function() {
                        c.handleGuideOver(b)
                    });
                    a.mouseout(function() {
                        c.handleGuideOut(b)
                    })
                },
                getBBox: function() {
                    var a;
                    this.labelsSet && (a = this.labelsSet.getBBox());
                    a ? d.VML || (a = {
                        x: a.x + this.x,
                        y: a.y + this.y,
                        width: a.width,
                        height: a.height
                    }) : a = {
                        x: 0,
                        y: 0,
                        width: 0,
                        height: 0
                    };
                    return a
                },
                destroy: function() {
                    d.remove(this.set);
                    d.remove(this.labelsSet);
                    var a = this.axisLine;
                    a && d.remove(a.axisSet);
                    d.remove(this.grid0)
                },
                chooseMinorFrequency: function(a) {
                    for (var b = 10; 0 < b; b--)
                        if (a /
                            b == Math.round(a / b)) return a / b
                },
                parseDatesDraw: function() {
                    var a, b = this.chart,
                        c = this.showFirstLabel,
                        e = this.showLastLabel,
                        h, f = "",
                        g = d.extractPeriod(this.minPeriod),
                        k = d.getPeriodDuration(g.period, g.count),
                        l, m, p, q, n, t = this.firstDayOfWeek,
                        r = this.boldPeriodBeginning;
                    a = this.minorGridEnabled;
                    var w, z = this.gridAlpha,
                        x, u = this.choosePeriod(0),
                        A = u.period,
                        u = u.count,
                        y = d.getPeriodDuration(A, u);
                    y < k && (A = g.period, u = g.count, y = k);
                    g = A;
                    "WW" == g && (g = "DD");
                    this.stepWidth = this.getStepWidth(this.timeDifference);
                    var B = Math.ceil(this.timeDifference /
                            y) + 5,
                        D = l = d.resetDateToMin(new Date(this.startTime - y), A, u, t).getTime();
                    if (g == A && 1 == u && this.centerLabelOnFullPeriod || this.autoWrap || this.centerLabels) p = y * this.stepWidth, this.autoWrap && !this.centerLabels && (p = -p);
                    this.cellWidth = k * this.stepWidth;
                    q = Math.round(l / y);
                    k = -1;
                    q / 2 == Math.round(q / 2) && (k = -2, l -= y);
                    q = this.firstTime;
                    var C = 0,
                        I = 0;
                    a && 1 < u && (w = this.chooseMinorFrequency(u), x = d.getPeriodDuration(A, w), "DD" == A && (x += d.getPeriodDuration("hh")), "fff" == A && (x = 1));
                    if (0 < this.gridCountR)
                        for (B - 5 - k > this.autoRotateCount &&
                            !isNaN(this.autoRotateAngle) && (this.labelRotationR = this.autoRotateAngle), a = k; a <= B; a++) {
                            n = q + y * (a + Math.floor((D - q) / y)) - C;
                            "DD" == A && (n += 36E5);
                            n = d.resetDateToMin(new Date(n), A, u, t).getTime();
                            "MM" == A && (h = (n - l) / y, 1.5 <= (n - l) / y && (n = n - (h - 1) * y + d.getPeriodDuration("DD", 3), n = d.resetDateToMin(new Date(n), A, 1).getTime(), C += y));
                            h = (n - this.startTime) * this.stepWidth;
                            if ("radar" == b.type) {
                                if (h = this.axisWidth - h, 0 > h || h > this.axisWidth) continue
                            } else this.rotate ? "date" == this.type && "middle" == this.gridPosition && (I = -y * this.stepWidth /
                                2) : "date" == this.type && (h = this.axisWidth - h);
                            f = !1;
                            this.nextPeriod[g] && (f = this.checkPeriodChange(this.nextPeriod[g], 1, n, l, g));
                            l = !1;
                            f && this.markPeriodChange ? (f = this.dateFormatsObject[this.nextPeriod[g]], this.twoLineMode && (f = this.dateFormatsObject[g] + "\n" + f, f = d.fixBrakes(f)), l = !0) : f = this.dateFormatsObject[g];
                            r || (l = !1);
                            this.currentDateFormat = f;
                            f = d.formatDate(new Date(n), f, b);
                            if (a == k && !c || a == B && !e) f = " ";
                            this.labelFunction && (f = this.labelFunction(f, new Date(n), this, A, u, m).toString());
                            this.boldLabels && (l = !0);
                            m = new this.axisItemRenderer(this, h, f, !1, p, I, !1, l);
                            this.pushAxisItem(m);
                            m = l = n;
                            if (!isNaN(w))
                                for (h = 1; h < u; h += w) this.gridAlpha = this.minorGridAlpha, f = n + x * h, f = d.resetDateToMin(new Date(f), A, w, t).getTime(), f = new this.axisItemRenderer(this, (f - this.startTime) * this.stepWidth, void 0, void 0, void 0, void 0, void 0, void 0, void 0, !0), this.pushAxisItem(f);
                            this.gridAlpha = z
                        }
                },
                choosePeriod: function(a) {
                    var b = d.getPeriodDuration(this.periods[a].period, this.periods[a].count),
                        c = this.periods;
                    return this.timeDifference < b && 0 <
                        a ? c[a - 1] : Math.ceil(this.timeDifference / b) <= this.gridCountR ? c[a] : a + 1 < c.length ? this.choosePeriod(a + 1) : c[a]
                },
                getStepWidth: function(a) {
                    var b;
                    this.startOnAxis ? (b = this.axisWidth / (a - 1), 1 == a && (b = this.axisWidth)) : b = this.axisWidth / a;
                    return b
                },
                timeZoom: function(a, b) {
                    this.startTime = a;
                    this.endTime = b
                },
                minDuration: function() {
                    var a = d.extractPeriod(this.minPeriod);
                    return d.getPeriodDuration(a.period, a.count)
                },
                checkPeriodChange: function(a, b, c, e, h) {
                    c = new Date(c);
                    var f = new Date(e),
                        g = this.firstDayOfWeek;
                    e = b;
                    "DD" == a &&
                        (b = 1);
                    c = d.resetDateToMin(c, a, b, g).getTime();
                    b = d.resetDateToMin(f, a, b, g).getTime();
                    return "DD" == a && "hh" != h && c - b < d.getPeriodDuration(a, e) - d.getPeriodDuration("hh", 1) ? !1 : c != b ? !0 : !1
                },
                generateDFObject: function() {
                    this.dateFormatsObject = {};
                    var a;
                    for (a = 0; a < this.dateFormats.length; a++) {
                        var b = this.dateFormats[a];
                        this.dateFormatsObject[b.period] = b.format
                    }
                },
                hideBalloon: function() {
                    this.balloon && this.balloon.hide && this.balloon.hide();
                    this.prevBY = this.prevBX = NaN
                },
                formatBalloonText: function(a) {
                    return a
                },
                showBalloon: function(a,
                    b, c, e) {
                    var d = this.offset;
                    switch (this.position) {
                        case "bottom":
                            b = this.height + d;
                            break;
                        case "top":
                            b = -d;
                            break;
                        case "left":
                            a = -d;
                            break;
                        case "right":
                            a = this.width + d
                    }
                    c || (c = this.currentDateFormat);
                    if ("V" == this.orientation) {
                        if (0 > b || b > this.height) return;
                        if (isNaN(b)) {
                            this.hideBalloon();
                            return
                        }
                        b = this.adjustBalloonCoordinate(b, e);
                        e = this.coordinateToValue(b)
                    } else {
                        if (0 > a || a > this.width) return;
                        if (isNaN(a)) {
                            this.hideBalloon();
                            return
                        }
                        a = this.adjustBalloonCoordinate(a, e);
                        e = this.coordinateToValue(a)
                    }
                    var f;
                    if (d = this.chart.chartCursor) f =
                        d.index;
                    if (this.balloon && void 0 !== e && this.balloon.enabled) {
                        if (this.balloonTextFunction) {
                            if ("date" == this.type || !0 === this.parseDates) e = new Date(e);
                            e = this.balloonTextFunction(e)
                        } else this.balloonText ? e = this.formatBalloonText(this.balloonText, f, c) : isNaN(e) || (e = this.formatValue(e, c));
                        if (a != this.prevBX || b != this.prevBY) this.balloon.setPosition(a, b), this.prevBX = a, this.prevBY = b, e && this.balloon.showBalloon(e)
                    }
                },
                adjustBalloonCoordinate: function(a) {
                    return a
                },
                createBalloon: function() {
                    var a = this.chart,
                        b = a.chartCursor;
                    b && (b = b.cursorPosition, "mouse" != b && (this.stickBalloonToCategory = !0), "start" == b && (this.stickBalloonToStart = !0), "ValueAxis" == this.cname && (this.stickBalloonToCategory = !1));
                    this.balloon && (this.balloon.destroy && this.balloon.destroy(), d.extend(this.balloon, a.balloon, !0))
                },
                setBalloonBounds: function() {
                    var a = this.balloon;
                    if (a) {
                        var b = this.chart;
                        a.cornerRadius = 0;
                        a.shadowAlpha = 0;
                        a.borderThickness = 1;
                        a.borderAlpha = 1;
                        a.adjustBorderColor = !1;
                        a.showBullet = !1;
                        this.balloon = a;
                        a.chart = b;
                        a.mainSet = b.plotBalloonsSet;
                        a.pointerWidth =
                            this.tickLength;
                        if (this.parseDates || "date" == this.type) a.pointerWidth = 0;
                        a.className = this.id;
                        b = "V";
                        "V" == this.orientation && (b = "H");
                        this.stickBalloonToCategory || (a.animationDuration = 0);
                        var c, e, d, f, g = this.inside,
                            k = this.width,
                            l = this.height;
                        switch (this.position) {
                            case "bottom":
                                c = 0;
                                e = k;
                                g ? (d = 0, f = l) : (d = l, f = l + 1E3);
                                break;
                            case "top":
                                c = 0;
                                e = k;
                                g ? (d = 0, f = l) : (d = -1E3, f = 0);
                                break;
                            case "left":
                                d = 0;
                                f = l;
                                g ? (c = 0, e = k) : (c = -1E3, e = 0);
                                break;
                            case "right":
                                d = 0, f = l, g ? (c = 0, e = k) : (c = k, e = k + 1E3)
                        }
                        a.drop || (a.pointerOrientation = b);
                        a.setBounds(c,
                            d, e, f)
                    }
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.ValueAxis = d.Class({
                inherits: d.AxisBase,
                construct: function(a) {
                    this.cname = "ValueAxis";
                    this.createEvents("axisChanged", "logarithmicAxisFailed", "axisZoomed", "axisIntZoomed");
                    d.ValueAxis.base.construct.call(this, a);
                    this.dataChanged = !0;
                    this.stackType = "none";
                    this.position = "left";
                    this.unitPosition = "right";
                    this.includeAllValues = this.recalculateToPercents = this.includeHidden = this.includeGuidesInMinMax = this.integersOnly = !1;
                    this.durationUnits = {
                        DD: "d. ",
                        hh: ":",
                        mm: ":",
                        ss: ""
                    };
                    this.scrollbar = !1;
                    this.baseValue = 0;
                    this.radarCategoriesEnabled = !0;
                    this.axisFrequency = 1;
                    this.gridType = "polygons";
                    this.useScientificNotation = !1;
                    this.axisTitleOffset = 10;
                    this.pointPosition = "axis";
                    this.minMaxMultiplier = 1;
                    this.logGridLimit = 2;
                    this.totalTextOffset = this.treatZeroAs = 0;
                    this.minPeriod = "ss";
                    this.relativeStart = 0;
                    this.relativeEnd = 1;
                    d.applyTheme(this, a, this.cname)
                },
                updateData: function() {
                    0 >= this.gridCountR && (this.gridCountR = 1);
                    this.totals = [];
                    this.data = this.chart.chartData;
                    var a = this.chart;
                    "xy" != a.type &&
                        (this.stackGraphs("smoothedLine"), this.stackGraphs("line"), this.stackGraphs("column"), this.stackGraphs("step"));
                    this.recalculateToPercents && this.recalculate();
                    this.synchronizationMultiplier && this.synchronizeWith ? (d.isString(this.synchronizeWith) && (this.synchronizeWith = a.getValueAxisById(this.synchronizeWith)), this.synchronizeWith && (this.synchronizeWithAxis(this.synchronizeWith), this.foundGraphs = !0)) : (this.foundGraphs = !1, this.getMinMax(), 0 === this.start && this.end == this.data.length - 1 && isNaN(this.minZoom) &&
                        isNaN(this.maxZoom) && (this.fullMin = this.min, this.fullMax = this.max, "date" != this.type && this.strictMinMax && (isNaN(this.minimum) || (this.fullMin = this.minimum), isNaN(this.maximum) || (this.fullMax = this.maximum)), this.logarithmic && (this.fullMin = this.logMin, 0 === this.fullMin && (this.fullMin = this.treatZeroAs)), "date" == this.type && (this.minimumDate || (this.fullMin = this.minRR), this.maximumDate || (this.fullMax = this.maxRR), this.strictMinMax && (this.minimumDate && (this.fullMin = this.minimumDate.getTime()), this.maximumDate &&
                            (this.fullMax = this.maximumDate.getTime())))))
                },
                draw: function() {
                    d.ValueAxis.base.draw.call(this);
                    var a = this.chart,
                        b = this.set;
                    this.labelRotationR = this.labelRotation;
                    d.setCN(a, this.set, "value-axis value-axis-" + this.id);
                    d.setCN(a, this.labelsSet, "value-axis value-axis-" + this.id);
                    d.setCN(a, this.axisLine.axisSet, "value-axis value-axis-" + this.id);
                    var c = this.type;
                    "duration" == c && (this.duration = "ss");
                    !0 === this.dataChanged && (this.updateData(), this.dataChanged = !1);
                    "date" == c && (this.logarithmic = !1, this.min = this.minRR,
                        this.max = this.maxRR, this.reversed = !1, this.getDateMinMax());
                    if (this.logarithmic) {
                        var e = this.treatZeroAs,
                            h = this.getExtremes(0, this.data.length - 1).min;
                        !isNaN(this.minimum) && this.minimum < h && (h = this.minimum);
                        this.logMin = h;
                        this.minReal < h && (this.minReal = h);
                        isNaN(this.minReal) && (this.minReal = h);
                        0 < e && 0 === h && (this.minReal = h = e);
                        if (0 >= h || 0 >= this.minimum) {
                            this.fire({
                                type: "logarithmicAxisFailed",
                                chart: a
                            });
                            return
                        }
                    }
                    this.grid0 = null;
                    var f, g, k = a.dx,
                        l = a.dy,
                        e = !1,
                        h = this.logarithmic;
                    if (isNaN(this.min) || isNaN(this.max) ||
                        !this.foundGraphs || Infinity == this.min || -Infinity == this.max) e = !0;
                    else {
                        "date" == this.type && this.min == this.max && (this.max += this.minDuration(), this.min -= this.minDuration());
                        var m = this.labelFrequency,
                            p = this.showFirstLabel,
                            q = this.showLastLabel,
                            n = 1,
                            t = 0;
                        this.minCalc = this.min;
                        this.maxCalc = this.max;
                        if (this.strictMinMax && (isNaN(this.minimum) || (this.min = this.minimum), isNaN(this.maximum) || (this.max = this.maximum), this.min == this.max)) return;
                        isNaN(this.minZoom) || (this.minReal = this.min = this.minZoom);
                        isNaN(this.maxZoom) ||
                            (this.max = this.maxZoom);
                        if (this.logarithmic) {
                            g = this.fullMin;
                            var r = this.fullMax;
                            isNaN(this.minimum) || (g = this.minimum);
                            isNaN(this.maximum) || (r = this.maximum);
                            var r = Math.log(r) * Math.LOG10E - Math.log(g) * Math.LOG10E,
                                w = Math.log(this.max) / Math.LN10 - Math.log(g) * Math.LOG10E;
                            this.relativeStart = d.roundTo((Math.log(this.minReal) / Math.LN10 - Math.log(g) * Math.LOG10E) / r, 5);
                            this.relativeEnd = d.roundTo(w / r, 5)
                        } else this.relativeStart = d.roundTo(d.fitToBounds((this.min - this.fullMin) / (this.fullMax - this.fullMin), 0, 1), 5), this.relativeEnd =
                            d.roundTo(d.fitToBounds((this.max - this.fullMin) / (this.fullMax - this.fullMin), 0, 1), 5);
                        var r = Math.round((this.maxCalc - this.minCalc) / this.step) + 1,
                            z;
                        !0 === h ? (z = Math.log(this.max) * Math.LOG10E - Math.log(this.minReal) * Math.LOG10E, this.stepWidth = this.axisWidth / z, z > this.logGridLimit && (r = Math.ceil(Math.log(this.max) * Math.LOG10E) + 1, t = Math.round(Math.log(this.minReal) * Math.LOG10E), r > this.gridCountR && (n = Math.ceil(r / this.gridCountR)))) : this.stepWidth = this.axisWidth / (this.max - this.min);
                        var x = 0;
                        1 > this.step && -1 < this.step &&
                            (x = d.getDecimals(this.step));
                        this.integersOnly && (x = 0);
                        x > this.maxDecCount && (x = this.maxDecCount);
                        w = this.precision;
                        isNaN(w) || (x = w);
                        isNaN(this.maxZoom) && (this.max = d.roundTo(this.max, this.maxDecCount), this.min = d.roundTo(this.min, this.maxDecCount));
                        g = {};
                        g.precision = x;
                        g.decimalSeparator = a.nf.decimalSeparator;
                        g.thousandsSeparator = a.nf.thousandsSeparator;
                        this.numberFormatter = g;
                        var u;
                        this.exponential = !1;
                        for (g = t; g < r; g += n) {
                            var A = d.roundTo(this.step * g + this.min, x); - 1 != String(A).indexOf("e") && (this.exponential = !0)
                        }
                        this.duration && (this.maxInterval = d.getMaxInterval(this.max, this.duration));
                        var x = this.step,
                            y, A = this.minorGridAlpha;
                        this.minorGridEnabled && (y = this.getMinorGridStep(x, this.stepWidth * x));
                        if (this.autoGridCount || 0 !== this.gridCount)
                            if ("date" == c) this.generateDFObject(), this.timeDifference = this.max - this.min, this.maxTime = this.lastTime = this.max, this.startTime = this.firstTime = this.min, this.parseDatesDraw();
                            else
                                for (r >= this.autoRotateCount && !isNaN(this.autoRotateAngle) && (this.labelRotationR = this.autoRotateAngle),
                                    c = this.minCalc, h && (r++, c = this.maxCalc - r * x), this.gridCountReal = r, g = this.startCount = t; g < r; g += n)
                                    if (t = x * g + c, t = d.roundTo(t, this.maxDecCount + 1), !this.integersOnly || Math.round(t) == t)
                                        if (isNaN(w) || Number(d.toFixed(t, w)) == t) {
                                            if (!0 === h)
                                                if (z > this.logGridLimit) t = Math.pow(10, g);
                                                else if (0 >= t && (t = c + x * g + x / 2, 0 >= t)) continue;
                                            u = this.formatValue(t, !1, g);
                                            Math.round(g / m) != g / m && (u = void 0);
                                            if (0 === g && !p || g == r - 1 && !q) u = " ";
                                            f = this.getCoordinate(t);
                                            var B;
                                            this.rotate && this.autoWrap && (B = this.stepWidth * x - 10);
                                            u = new this.axisItemRenderer(this,
                                                f, u, void 0, B, void 0, void 0, this.boldLabels);
                                            this.pushAxisItem(u);
                                            if (t == this.baseValue && "radar" != a.type) {
                                                var D, C, I = this.width,
                                                    H = this.height;
                                                "H" == this.orientation ? 0 <= f && f <= I + 1 && (D = [f, f, f + k], C = [H, 0, l]) : 0 <= f && f <= H + 1 && (D = [0, I, I + k], C = [f, f, f + l]);
                                                D && (f = d.fitToBounds(2 * this.gridAlpha, 0, 1), isNaN(this.zeroGridAlpha) || (f = this.zeroGridAlpha), f = d.line(a.container, D, C, this.gridColor, f, 1, this.dashLength), f.translate(this.x, this.y), this.grid0 = f, a.axesSet.push(f), f.toBack(), d.setCN(a, f, this.bcn + "zero-grid-" + this.id),
                                                    d.setCN(a, f, this.bcn + "zero-grid"))
                                            }
                                            if (!isNaN(y) && 0 < A && g < r - 1) {
                                                f = x / y;
                                                h && (y = x * (g + n) + this.minCalc, y = d.roundTo(y, this.maxDecCount + 1), z > this.logGridLimit && (y = Math.pow(10, g + n)), f = 9, y = (y - t) / f);
                                                I = this.gridAlpha;
                                                this.gridAlpha = this.minorGridAlpha;
                                                for (H = 1; H < f; H++) {
                                                    var Q = this.getCoordinate(t + y * H),
                                                        Q = new this.axisItemRenderer(this, Q, "", !1, 0, 0, !1, !1, 0, !0);
                                                    this.pushAxisItem(Q)
                                                }
                                                this.gridAlpha = I
                                            }
                                        }
                        z = this.guides;
                        B = z.length;
                        if (0 < B) {
                            D = this.fillAlpha;
                            for (g = this.fillAlpha = 0; g < B; g++) C = z[g], k = NaN, y = C.above, isNaN(C.toValue) ||
                                (k = this.getCoordinate(C.toValue), u = new this.axisItemRenderer(this, k, "", !0, NaN, NaN, C), this.pushAxisItem(u, y)), l = NaN, isNaN(C.value) || (l = this.getCoordinate(C.value), u = new this.axisItemRenderer(this, l, C.label, !0, NaN, (k - l) / 2, C), this.pushAxisItem(u, y)), isNaN(k) && (l -= 3, k = l + 3), u && (m = u.label) && this.addEventListeners(m, C), isNaN(k - l) || 0 > l && 0 > k || (k = new this.guideFillRenderer(this, l, k, C), this.pushAxisItem(k, y), y = k.graphics(), C.graphics = y, this.addEventListeners(y, C));
                            this.fillAlpha = D
                        }
                        u = this.baseValue;
                        this.min >
                            this.baseValue && this.max > this.baseValue && (u = this.min);
                        this.min < this.baseValue && this.max < this.baseValue && (u = this.max);
                        h && u < this.minReal && (u = this.minReal);
                        this.baseCoord = this.getCoordinate(u, !0);
                        u = {
                            type: "axisChanged",
                            target: this,
                            chart: a
                        };
                        u.min = h ? this.minReal : this.min;
                        u.max = this.max;
                        this.fire(u);
                        this.axisCreated = !0
                    }
                    h = this.axisLine.set;
                    u = this.labelsSet;
                    b.translate(this.x, this.y);
                    u.translate(this.x, this.y);
                    this.positionTitle();
                    "radar" != a.type && h.toFront();
                    !this.visible || e ? (b.hide(), h.hide(), u.hide()) :
                        (b.show(), h.show(), u.show());
                    this.axisY = this.y;
                    this.axisX = this.x
                },
                getDateMinMax: function() {
                    this.minimumDate && (this.minimumDate instanceof Date || (this.minimumDate = d.getDate(this.minimumDate, this.chart.dataDateFormat, "fff")), this.min = this.minimumDate.getTime());
                    this.maximumDate && (this.maximumDate instanceof Date || (this.maximumDate = d.getDate(this.maximumDate, this.chart.dataDateFormat, "fff")), this.max = this.maximumDate.getTime())
                },
                formatValue: function(a, b, c) {
                    var e = this.exponential,
                        h = this.logarithmic,
                        f =
                        this.numberFormatter,
                        g = this.chart;
                    if (f) return !0 === this.logarithmic && (e = -1 != String(a).indexOf("e") ? !0 : !1), this.useScientificNotation && (e = !0), this.usePrefixes && (e = !1), e ? (c = -1 == String(a).indexOf("e") ? a.toExponential(15) : String(a), e = c.split("e"), c = Number(e[0]), e = Number(e[1]), c = d.roundTo(c, 14), b || isNaN(this.precision) || (c = d.roundTo(c, this.precision)), 10 == c && (c = 1, e += 1), c = c + "e" + e, 0 === a && (c = "0"), 1 == a && (c = "1")) : (h && (e = String(a).split("."), e[1] ? (f.precision = e[1].length, 0 > c && (f.precision = Math.abs(c)), b && 1 < a &&
                            (f.precision = 0), b || isNaN(this.precision) || (f.precision = this.precision)) : f.precision = -1), c = this.usePrefixes ? d.addPrefix(a, g.prefixesOfBigNumbers, g.prefixesOfSmallNumbers, f, !b) : d.formatNumber(a, f, f.precision)), this.duration && (b && (f.precision = 0), c = d.formatDuration(a, this.duration, "", this.durationUnits, this.maxInterval, f)), "date" == this.type && (c = d.formatDate(new Date(a), this.currentDateFormat, g)), this.recalculateToPercents ? c += "%" : (b = this.unit) && (c = "left" == this.unitPosition ? b + c : c + b), this.labelFunction &&
                        (c = "date" == this.type ? this.labelFunction(c, new Date(a), this).toString() : this.labelFunction(a, c, this).toString()), c
                },
                getMinorGridStep: function(a, b) {
                    var c = [5, 4, 2];
                    60 > b && c.shift();
                    for (var e = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E), d = 0; d < c.length; d++) {
                        var f = a / c[d],
                            g = Math.floor(Math.log(Math.abs(f)) * Math.LOG10E);
                        if (!(1 < Math.abs(e - g)))
                            if (1 > a) {
                                if (g = Math.pow(10, -g) * f, g == Math.round(g)) return f
                            } else if (f == Math.round(f)) return f
                    }
                },
                stackGraphs: function(a) {
                    var b = this.stackType;
                    "stacked" == b && (b = "regular");
                    "line" == b && (b = "none");
                    "100% stacked" == b && (b = "100%");
                    this.stackType = b;
                    var c = [],
                        e = [],
                        h = [],
                        f = [],
                        g, k = this.chart.graphs,
                        l, m, p, q, n, t = this.baseValue,
                        r = !1;
                    if ("line" == a || "step" == a || "smoothedLine" == a) r = !0;
                    if (r && ("regular" == b || "100%" == b))
                        for (q = 0; q < k.length; q++) p = k[q], p.stackGraph = null, p.hidden || (m = p.type, p.chart == this.chart && p.valueAxis == this && a == m && p.stackable && (l && (p.stackGraph = l), l = p));
                    p = this.start - 10;
                    l = this.end + 10;
                    q = this.data.length - 1;
                    p = d.fitToBounds(p, 0, q);
                    l = d.fitToBounds(l, 0, q);
                    for (n = p; n <= l; n++) {
                        var w =
                            0;
                        for (q = 0; q < k.length; q++)
                            if (p = k[q], p.hidden) p.newStack && (h[n] = NaN, e[n] = NaN);
                            else if (m = p.type, p.chart == this.chart && p.valueAxis == this && a == m && p.stackable)
                            if (m = this.data[n].axes[this.id].graphs[p.id], g = m.values.value, isNaN(g)) p.newStack && (h[n] = NaN, e[n] = NaN);
                            else {
                                var z = d.getDecimals(g);
                                w < z && (w = z);
                                isNaN(f[n]) ? f[n] = Math.abs(g) : f[n] += Math.abs(g);
                                f[n] = d.roundTo(f[n], w);
                                z = p.fillToGraph;
                                r && z && (z = this.data[n].axes[this.id].graphs[z.id]) && (m.values.open = z.values.value);
                                "regular" == b && (r && (isNaN(c[n]) ? (c[n] = g, m.values.close =
                                    g, m.values.open = this.baseValue) : (isNaN(g) ? m.values.close = c[n] : m.values.close = g + c[n], m.values.open = c[n], c[n] = m.values.close)), "column" == a && (p.newStack && (h[n] = NaN, e[n] = NaN), m.values.close = g, 0 > g ? (m.values.close = g, isNaN(e[n]) ? m.values.open = t : (m.values.close += e[n], m.values.open = e[n]), e[n] = m.values.close) : (m.values.close = g, isNaN(h[n]) ? m.values.open = t : (m.values.close += h[n], m.values.open = h[n]), h[n] = m.values.close)))
                            }
                    }
                    for (n = this.start; n <= this.end; n++)
                        for (q = 0; q < k.length; q++)(p = k[q], p.hidden) ? p.newStack && (h[n] =
                            NaN, e[n] = NaN) : (m = p.type, p.chart == this.chart && p.valueAxis == this && a == m && p.stackable && (m = this.data[n].axes[this.id].graphs[p.id], g = m.values.value, isNaN(g) || (c = g / f[n] * 100, m.values.percents = c, m.values.total = f[n], p.newStack && (h[n] = NaN, e[n] = NaN), "100%" == b && (isNaN(e[n]) && (e[n] = 0), isNaN(h[n]) && (h[n] = 0), 0 > c ? (m.values.close = d.fitToBounds(c + e[n], -100, 100), m.values.open = e[n], e[n] = m.values.close) : (m.values.close = d.fitToBounds(c + h[n], -100, 100), m.values.open = h[n], h[n] = m.values.close)))))
                },
                recalculate: function() {
                    var a =
                        this.chart,
                        b = a.graphs,
                        c;
                    for (c = 0; c < b.length; c++) {
                        var e = b[c];
                        if (e.valueAxis == this) {
                            var h = "value";
                            if ("candlestick" == e.type || "ohlc" == e.type) h = "open";
                            var f, g, k = this.end + 2,
                                k = d.fitToBounds(this.end + 1, 0, this.data.length - 1),
                                l = this.start;
                            0 < l && l--;
                            var m;
                            g = this.start;
                            e.compareFromStart && (g = 0);
                            if (!isNaN(a.startTime) && (m = a.categoryAxis)) {
                                var p = m.minDuration(),
                                    p = new Date(a.startTime + p / 2),
                                    q = d.resetDateToMin(new Date(a.startTime), m.minPeriod).getTime();
                                d.resetDateToMin(new Date(p), m.minPeriod).getTime() > q && g++
                            }
                            if (m =
                                a.recalculateFromDate) m = d.getDate(m, a.dataDateFormat, "fff"), g = a.getClosestIndex(a.chartData, "time", m.getTime(), !0, 0, a.chartData.length), k = a.chartData.length - 1;
                            for (m = g; m <= k && (g = this.data[m].axes[this.id].graphs[e.id], f = g.values[h], e.recalculateValue && (f = g.dataContext[e.valueField + e.recalculateValue]), isNaN(f)); m++);
                            this.recBaseValue = f;
                            for (h = l; h <= k; h++) {
                                g = this.data[h].axes[this.id].graphs[e.id];
                                g.percents = {};
                                var l = g.values,
                                    n;
                                for (n in l) g.percents[n] = "percents" != n ? l[n] / f * 100 - 100 : l[n]
                            }
                        }
                    }
                },
                getMinMax: function() {
                    var a = !1,
                        b = this.chart,
                        c = b.graphs,
                        e;
                    for (e = 0; e < c.length; e++) {
                        var h = c[e].type;
                        ("line" == h || "step" == h || "smoothedLine" == h) && this.expandMinMax && (a = !0)
                    }
                    a && (0 < this.start && this.start--, this.end < this.data.length - 1 && this.end++);
                    "serial" == b.type && (!0 !== b.categoryAxis.parseDates || a || this.end < this.data.length - 1 && this.end++);
                    this.includeAllValues && (this.start = 0, this.end = this.data.length - 1);
                    a = this.minMaxMultiplier;
                    b = this.getExtremes(this.start, this.end);
                    this.min = b.min;
                    this.max = b.max;
                    this.minRR = this.min;
                    this.maxRR = this.max;
                    a = (this.max - this.min) * (a - 1);
                    this.min -= a;
                    this.max += a;
                    a = this.guides.length;
                    if (this.includeGuidesInMinMax && 0 < a)
                        for (b = 0; b < a; b++) c = this.guides[b], c.toValue < this.min && (this.min = c.toValue), c.value < this.min && (this.min = c.value), c.toValue > this.max && (this.max = c.toValue), c.value > this.max && (this.max = c.value);
                    isNaN(this.minimum) || (this.min = this.minimum);
                    isNaN(this.maximum) || (this.max = this.maximum);
                    "date" == this.type && this.getDateMinMax();
                    this.min > this.max && (a = this.max, this.max = this.min, this.min = a);
                    isNaN(this.minZoom) ||
                        (this.min = this.minZoom);
                    isNaN(this.maxZoom) || (this.max = this.maxZoom);
                    this.minCalc = this.min;
                    this.maxCalc = this.max;
                    this.minReal = this.min;
                    this.maxReal = this.max;
                    0 === this.min && 0 === this.max && (this.max = 9);
                    this.min > this.max && (this.min = this.max - 1);
                    a = this.min;
                    b = this.max;
                    c = this.max - this.min;
                    e = 0 === c ? Math.pow(10, Math.floor(Math.log(Math.abs(this.max)) * Math.LOG10E)) / 10 : Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;
                    isNaN(this.maximum) && (this.max = Math.ceil(this.max / e) * e + e);
                    isNaN(this.minimum) && (this.min =
                        Math.floor(this.min / e) * e - e);
                    0 > this.min && 0 <= a && (this.min = 0);
                    0 < this.max && 0 >= b && (this.max = 0);
                    "100%" == this.stackType && (this.min = 0 > this.min ? -100 : 0, this.max = 0 > this.max ? 0 : 100);
                    c = this.max - this.min;
                    e = Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;
                    this.step = Math.ceil(c / this.gridCountR / e) * e;
                    c = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E));
                    c = d.fixStepE(c);
                    e = Math.ceil(this.step / c);
                    5 < e && (e = 10);
                    5 >= e && 2 < e && (e = 5);
                    this.step = Math.ceil(this.step / (c * e)) * c * e;
                    isNaN(this.setStep) || (this.step =
                        this.setStep);
                    1 > c ? (this.maxDecCount = Math.abs(Math.log(Math.abs(c)) * Math.LOG10E), this.maxDecCount = Math.round(this.maxDecCount), this.step = d.roundTo(this.step, this.maxDecCount + 1)) : this.maxDecCount = 0;
                    this.min = this.step * Math.floor(this.min / this.step);
                    this.max = this.step * Math.ceil(this.max / this.step);
                    0 > this.min && 0 <= a && (this.min = 0);
                    0 < this.max && 0 >= b && (this.max = 0);
                    1 < this.minReal && 1 < this.max - this.minReal && (this.minReal = Math.floor(this.minReal));
                    c = Math.pow(10, Math.floor(Math.log(Math.abs(this.minReal)) * Math.LOG10E));
                    0 === this.min && (this.minReal = c);
                    0 === this.min && 1 < this.minReal && (this.minReal = 1);
                    0 < this.min && 0 < this.minReal - this.step && (this.minReal = this.min + this.step < this.minReal ? this.min + this.step : this.min);
                    this.logarithmic && (2 < Math.log(b) * Math.LOG10E - Math.log(a) * Math.LOG10E ? (this.minReal = this.min = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)), this.maxReal = this.max = Math.pow(10, Math.ceil(Math.log(Math.abs(b)) * Math.LOG10E))) : (a = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)) / 10, Math.pow(10, Math.floor(Math.log(Math.abs(this.min)) *
                        Math.LOG10E)) / 10 < a && (this.minReal = this.min = 10 * a)))
                },
                getExtremes: function(a, b) {
                    var c, e, d;
                    for (d = a; d <= b; d++) {
                        var f = this.data[d].axes[this.id].graphs,
                            g;
                        for (g in f)
                            if (f.hasOwnProperty(g)) {
                                var k = this.chart.graphsById[g];
                                if (k.includeInMinMax && (!k.hidden || this.includeHidden)) {
                                    isNaN(c) && (c = Infinity);
                                    isNaN(e) && (e = -Infinity);
                                    this.foundGraphs = !0;
                                    k = f[g].values;
                                    this.recalculateToPercents && (k = f[g].percents);
                                    var l;
                                    if (this.minMaxField) l = k[this.minMaxField], l < c && (c = l), l > e && (e = l);
                                    else
                                        for (var m in k) k.hasOwnProperty(m) &&
                                            "percents" != m && "total" != m && "error" != m && (l = k[m], l < c && (c = l), l > e && (e = l))
                                }
                            }
                    }
                    return {
                        min: c,
                        max: e
                    }
                },
                zoomOut: function(a) {
                    this.maxZoom = this.minZoom = NaN;
                    this.zoomToRelativeValues(0, 1, a)
                },
                zoomToRelativeValues: function(a, b, c) {
                    if (this.reversed) {
                        var e = a;
                        a = 1 - b;
                        b = 1 - e
                    }
                    var d = this.fullMax,
                        e = this.fullMin,
                        f = e + (d - e) * a,
                        g = e + (d - e) * b;
                    0 <= this.minimum && 0 > f && (f = 0);
                    this.logarithmic && (isNaN(this.minimum) || (e = this.minimum), isNaN(this.maximum) || (d = this.maximum), d = Math.log(d) * Math.LOG10E - Math.log(e) * Math.LOG10E, f = Math.pow(10, d * a +
                        Math.log(e) * Math.LOG10E), g = Math.pow(10, d * b + Math.log(e) * Math.LOG10E));
                    return this.zoomToValues(f, g, c)
                },
                zoomToValues: function(a, b, c) {
                    if (b < a) {
                        var e = b;
                        b = a;
                        a = e
                    }
                    var h = this.fullMax,
                        e = this.fullMin;
                    this.relativeStart = d.roundTo((a - e) / (h - e), 9);
                    this.relativeEnd = d.roundTo((b - e) / (h - e), 9);
                    if (this.logarithmic) {
                        isNaN(this.minimum) || (e = this.minimum);
                        isNaN(this.maximum) || (h = this.maximum);
                        var h = Math.log(h) * Math.LOG10E - Math.log(e) * Math.LOG10E,
                            f = Math.log(b) / Math.LN10 - Math.log(e) * Math.LOG10E;
                        this.relativeStart = d.roundTo((Math.log(a) /
                            Math.LN10 - Math.log(e) * Math.LOG10E) / h, 9);
                        this.relativeEnd = d.roundTo(f / h, 9)
                    }
                    if (this.minZoom != a || this.maxZoom != b) return this.minZoom = a, this.maxZoom = b, e = {
                            type: "axisZoomed"
                        }, e.chart = this.chart, e.valueAxis = this, e.startValue = a, e.endValue = b, e.relativeStart = this.relativeStart, e.relativeEnd = this.relativeEnd, this.prevStartValue == a && this.prevEndValue == b || this.fire(e), this.prevStartValue = a, this.prevEndValue = b, c || (a = {}, d.copyProperties(e, a), a.type = "axisIntZoomed", this.fire(a)), 0 === this.relativeStart && 1 == this.relativeEnd &&
                        (this.maxZoom = this.minZoom = NaN), !0
                },
                coordinateToValue: function(a) {
                    if (isNaN(a)) return NaN;
                    var b = this.axisWidth,
                        c = this.stepWidth,
                        e = this.reversed,
                        d = this.rotate,
                        f = this.min,
                        g = this.minReal;
                    return !0 === this.logarithmic ? Math.pow(10, (d ? !0 === e ? (b - a) / c : a / c : !0 === e ? a / c : (b - a) / c) + Math.log(g) * Math.LOG10E) : !0 === e ? d ? f - (a - b) / c : a / c + f : d ? a / c + f : f - (a - b) / c
                },
                getCoordinate: function(a, b) {
                    if (isNaN(a)) return NaN;
                    var c = this.rotate,
                        e = this.reversed,
                        d = this.axisWidth,
                        f = this.stepWidth,
                        g = this.min,
                        k = this.minReal;
                    !0 === this.logarithmic ?
                        (0 === a && (a = this.treatZeroAs), g = Math.log(a) * Math.LOG10E - Math.log(k) * Math.LOG10E, c = c ? !0 === e ? d - f * g : f * g : !0 === e ? f * g : d - f * g) : c = !0 === e ? c ? d - f * (a - g) : f * (a - g) : c ? f * (a - g) : d - f * (a - g);
                    1E7 < Math.abs(c) && (c = c / Math.abs(c) * 1E7);
                    b || (c = Math.round(c));
                    return c
                },
                synchronizeWithAxis: function(a) {
                    this.synchronizeWith = a;
                    this.listenTo(this.synchronizeWith, "axisChanged", this.handleSynchronization)
                },
                handleSynchronization: function() {
                    if (this.synchronizeWith) {
                        d.isString(this.synchronizeWith) && (this.synchronizeWith = this.chart.getValueAxisById(this.synchronizeWith));
                        var a = this.synchronizeWith,
                            b = a.min,
                            c = a.max,
                            a = a.step,
                            e = this.synchronizationMultiplier;
                        e && (this.min = b * e, this.max = c * e, this.step = a * e, b = Math.abs(Math.log(Math.abs(Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E)))) * Math.LOG10E), this.maxDecCount = b = Math.round(b), this.draw())
                    }
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.RecAxis = d.Class({
                construct: function(a) {
                    var b = a.chart,
                        c = a.axisThickness,
                        e = a.axisColor,
                        h = a.axisAlpha,
                        f = a.offset,
                        g = a.dx,
                        k = a.dy,
                        l = a.x,
                        m = a.y,
                        p = a.height,
                        q = a.width,
                        n = b.container;
                    "H" == a.orientation ? (e = d.line(n, [0, q], [0, 0], e, h, c), this.axisWidth = a.width, "bottom" == a.position ? (k = c / 2 + f + p + m - 1, c = l) : (k = -c / 2 - f + m + k, c = g + l)) : (this.axisWidth = a.height, "right" == a.position ? (e = d.line(n, [0, 0, -g], [0, p, p - k], e, h, c), k = m + k, c = c / 2 + f + g + q + l - 1) : (e = d.line(n, [0, 0], [0, p], e, h, c), k = m, c = -c / 2 - f + l));
                    e.translate(c,
                        k);
                    c = b.container.set();
                    c.push(e);
                    b.axesSet.push(c);
                    d.setCN(b, e, a.bcn + "line");
                    this.axisSet = c;
                    this.set = e
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.RecItem = d.Class({
                construct: function(a, b, c, e, h, f, g, k, l, m, p, q) {
                    b = Math.round(b);
                    var n = a.chart;
                    this.value = c;
                    void 0 == c && (c = "");
                    l || (l = 0);
                    void 0 == e && (e = !0);
                    var t = n.fontFamily,
                        r = a.fontSize;
                    void 0 == r && (r = n.fontSize);
                    var w = a.color;
                    void 0 == w && (w = n.color);
                    void 0 !== p && (w = p);
                    var z = a.chart.container,
                        x = z.set();
                    this.set = x;
                    var u = a.axisThickness,
                        A = a.axisColor,
                        y = a.axisAlpha,
                        B = a.tickLength,
                        D = a.gridAlpha,
                        C = a.gridThickness,
                        I = a.gridColor,
                        H = a.dashLength,
                        Q = a.fillColor,
                        M = a.fillAlpha,
                        P = a.labelsEnabled;
                    p = a.labelRotationR;
                    var ia = a.counter,
                        J = a.inside,
                        aa = a.labelOffset,
                        ma = a.dx,
                        na = a.dy,
                        Pa = a.orientation,
                        Z = a.position,
                        da = a.previousCoord,
                        X = a.height,
                        xa = a.width,
                        ea = a.offset,
                        fa, Ba;
                    g ? (void 0 !== g.id && (q = n.classNamePrefix + "-guide-" + g.id), P = !0, isNaN(g.tickLength) || (B = g.tickLength), void 0 != g.lineColor && (I = g.lineColor), void 0 != g.color && (w = g.color), isNaN(g.lineAlpha) || (D = g.lineAlpha), isNaN(g.dashLength) || (H = g.dashLength), isNaN(g.lineThickness) || (C = g.lineThickness), !0 === g.inside && (J = !0, 0 < ea && (ea = 0)), isNaN(g.labelRotation) ||
                        (p = g.labelRotation), isNaN(g.fontSize) || (r = g.fontSize), g.position && (Z = g.position), void 0 !== g.boldLabel && (k = g.boldLabel), isNaN(g.labelOffset) || (aa = g.labelOffset)) : "" === c && (B = 0);
                    m && !isNaN(a.minorTickLength) && (B = a.minorTickLength);
                    var ga = "start";
                    0 < h && (ga = "middle");
                    a.centerLabels && (ga = "middle");
                    var V = p * Math.PI / 180,
                        Y, Da, G = 0,
                        v = 0,
                        oa = 0,
                        ha = Y = 0,
                        Qa = 0;
                    "V" == Pa && (p = 0);
                    var ca;
                    P && "" !== c && (ca = a.autoWrap && 0 === p ? d.wrappedText(z, c, w, t, r, ga, k, Math.abs(h), 0) : d.text(z, c, w, t, r, ga, k), ga = ca.getBBox(), ha = ga.width, Qa = ga.height);
                    if ("H" == Pa) {
                        if (0 <= b && b <= xa + 1 && (0 < B && 0 < y && b + l <= xa + 1 && (fa = d.line(z, [b + l, b + l], [0, B], A, y, C), x.push(fa)), 0 < D && (Ba = d.line(z, [b, b + ma, b + ma], [X, X + na, na], I, D, C, H), x.push(Ba))), v = 0, G = b, g && 90 == p && J && (G -= r), !1 === e ? (ga = "start", v = "bottom" == Z ? J ? v + B : v - B : J ? v - B : v + B, G += 3, 0 < h && (G += h / 2 - 3, ga = "middle"), 0 < p && (ga = "middle")) : ga = "middle", 1 == ia && 0 < M && !g && !m && da < xa && (e = d.fitToBounds(b, 0, xa), da = d.fitToBounds(da, 0, xa), Y = e - da, 0 < Y && (Da = d.rect(z, Y, a.height, Q, M), Da.translate(e - Y + ma, na), x.push(Da))), "bottom" == Z ? (v += X + r / 2 + ea, J ? (0 < p ? (v =
                                X - ha / 2 * Math.sin(V) - B - 3, a.centerRotatedLabels || (G += ha / 2 * Math.cos(V) - 4 + 2)) : 0 > p ? (v = X + ha * Math.sin(V) - B - 3 + 2, G += -ha * Math.cos(V) - Qa * Math.sin(V) - 4) : v -= B + r + 3 + 3, v -= aa) : (0 < p ? (v = X + ha / 2 * Math.sin(V) + B + 3, a.centerRotatedLabels || (G -= ha / 2 * Math.cos(V))) : 0 > p ? (v = X + B + 3 - ha / 2 * Math.sin(V) + 2, G += ha / 2 * Math.cos(V)) : v += B + u + 3 + 3, v += aa)) : (v += na + r / 2 - ea, G += ma, J ? (0 < p ? (v = ha / 2 * Math.sin(V) + B + 3, a.centerRotatedLabels || (G -= ha / 2 * Math.cos(V))) : v += B + 3, v += aa) : (0 < p ? (v = -(ha / 2) * Math.sin(V) - B - 6, a.centerRotatedLabels || (G += ha / 2 * Math.cos(V))) : v -= B +
                                r + 3 + u + 3, v -= aa)), "bottom" == Z ? Y = (J ? X - B - 1 : X + u - 1) + ea : (oa = ma, Y = (J ? na : na - B - u + 1) - ea), f && (G += f), r = G, 0 < p && (r += ha / 2 * Math.cos(V)), ca && (f = 0, J && (f = ha / 2 * Math.cos(V)), r + f > xa + 2 || 0 > r)) ca.remove(), ca = null
                    } else {
                        0 <= b && b <= X + 1 && (0 < B && 0 < y && b + l <= X + 1 && (fa = d.line(z, [0, B + 1], [b + l, b + l], A, y, C), x.push(fa)), 0 < D && (Ba = d.line(z, [0, ma, xa + ma], [b, b + na, b + na], I, D, C, H), x.push(Ba)));
                        ga = "end";
                        if (!0 === J && "left" == Z || !1 === J && "right" == Z) ga = "start";
                        v = b - Qa / 2 + 2;
                        1 == ia && 0 < M && !g && !m && (e = d.fitToBounds(b, 0, X), da = d.fitToBounds(da, 0, X), V = e - da, Da = d.polygon(z, [0, a.width, a.width, 0], [0, 0, V, V], Q, M), Da.translate(ma, e - V + na), x.push(Da));
                        v += r / 2;
                        "right" == Z ? (G += ma + xa + ea, v += na, J ? (f || (v -= r / 2 + 3), G = G - (B + 4) - aa) : (G += B + 4 + u, v -= 2, G += aa)) : J ? (G += B + 4 - ea, f || (v -= r / 2 + 3), g && (G += ma, v += na), G += aa) : (G += -B - u - 4 - 2 - ea, v -= 2, G -= aa);
                        fa && ("right" == Z ? (oa += ma + ea + xa - 1, Y += na, oa = J ? oa - u : oa + u) : (oa -= ea, J || (oa -= B + u)));
                        f && (v += f);
                        J = -3;
                        "right" == Z && (J += na);
                        ca && (v > X + 1 || v < J - r / 10) && (ca.remove(), ca = null)
                    }
                    fa && (fa.translate(oa, Y), d.setCN(n, fa, a.bcn + "tick"), d.setCN(n, fa, q, !0), g && d.setCN(n, fa, "guide"));
                    !1 ===
                        a.visible && (fa && fa.remove(), ca && (ca.remove(), ca = null));
                    ca && (ca.attr({
                        "text-anchor": ga
                    }), ca.translate(G, v, NaN, !0), 0 !== p && ca.rotate(-p, a.chart.backgroundColor), a.allLabels.push(ca), this.label = ca, d.setCN(n, ca, a.bcn + "label"), d.setCN(n, ca, q, !0), g && d.setCN(n, ca, "guide"));
                    Ba && (d.setCN(n, Ba, a.bcn + "grid"), d.setCN(n, Ba, q, !0), g && d.setCN(n, Ba, "guide"));
                    Da && (d.setCN(n, Da, a.bcn + "fill"), d.setCN(n, Da, q, !0));
                    m ? Ba && d.setCN(n, Ba, a.bcn + "grid-minor") : (a.counter = 0 === ia ? 1 : 0, a.previousCoord = b);
                    0 === this.set.node.childNodes.length &&
                        this.set.remove()
                },
                graphics: function() {
                    return this.set
                },
                getLabel: function() {
                    return this.label
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.RecFill = d.Class({
                construct: function(a, b, c, e) {
                    var h = a.dx,
                        f = a.dy,
                        g = a.orientation,
                        k = 0;
                    if (c < b) {
                        var l = b;
                        b = c;
                        c = l
                    }
                    var m = e.fillAlpha;
                    isNaN(m) && (m = 0);
                    var l = a.chart.container,
                        p = e.fillColor;
                    "V" == g ? (b = d.fitToBounds(b, 0, a.height), c = d.fitToBounds(c, 0, a.height)) : (b = d.fitToBounds(b, 0, a.width), c = d.fitToBounds(c, 0, a.width));
                    c -= b;
                    isNaN(c) && (c = 4, k = 2, m = 0);
                    0 > c && "object" == typeof p && (p = p.join(",").split(",").reverse());
                    "V" == g ? (g = d.rect(l, a.width, c, p, m), g.translate(h, b - k + f)) : (g = d.rect(l,
                        c, a.height, p, m), g.translate(b - k + h, f));
                    d.setCN(a.chart, g, "guide-fill");
                    e.id && d.setCN(a.chart, g, "guide-fill-" + e.id);
                    this.set = l.set([g])
                },
                graphics: function() {
                    return this.set
                },
                getLabel: function() {}
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.AmChart = d.Class({
                construct: function(a) {
                    this.svgIcons = this.tapToActivate = !0;
                    this.theme = a;
                    this.classNamePrefix = "amcharts";
                    this.addClassNames = !1;
                    this.version = "3.21.2";
                    d.addChart(this);
                    this.createEvents("buildStarted", "dataUpdated", "init", "rendered", "drawn", "failed", "resized", "animationFinished");
                    this.height = this.width = "100%";
                    this.dataChanged = !0;
                    this.chartCreated = !1;
                    this.previousWidth = this.previousHeight = 0;
                    this.backgroundColor = "#FFFFFF";
                    this.borderAlpha = this.backgroundAlpha =
                        0;
                    this.color = this.borderColor = "#000000";
                    this.fontFamily = "Verdana";
                    this.fontSize = 11;
                    this.usePrefixes = !1;
                    this.autoResize = !0;
                    this.autoDisplay = !1;
                    this.addCodeCredits = this.accessible = !0;
                    this.touchStartTime = this.touchClickDuration = 0;
                    this.precision = -1;
                    this.percentPrecision = 2;
                    this.decimalSeparator = ".";
                    this.thousandsSeparator = ",";
                    this.labels = [];
                    this.allLabels = [];
                    this.titles = [];
                    this.marginRight = this.marginLeft = this.autoMarginOffset = 0;
                    this.timeOuts = [];
                    this.creditsPosition = "top-left";
                    var b = document.createElement("div"),
                        c = b.style;
                    c.overflow = "hidden";
                    c.position = "relative";
                    c.textAlign = "left";
                    this.chartDiv = b;
                    b = document.createElement("div");
                    c = b.style;
                    c.overflow = "hidden";
                    c.position = "relative";
                    c.textAlign = "left";
                    this.legendDiv = b;
                    this.titleHeight = 0;
                    this.hideBalloonTime = 150;
                    this.handDrawScatter = 2;
                    this.cssScale = this.handDrawThickness = 1;
                    this.cssAngle = 0;
                    this.prefixesOfBigNumbers = [{
                        number: 1E3,
                        prefix: "k"
                    }, {
                        number: 1E6,
                        prefix: "M"
                    }, {
                        number: 1E9,
                        prefix: "G"
                    }, {
                        number: 1E12,
                        prefix: "T"
                    }, {
                        number: 1E15,
                        prefix: "P"
                    }, {
                        number: 1E18,
                        prefix: "E"
                    }, {
                        number: 1E21,
                        prefix: "Z"
                    }, {
                        number: 1E24,
                        prefix: "Y"
                    }];
                    this.prefixesOfSmallNumbers = [{
                        number: 1E-24,
                        prefix: "y"
                    }, {
                        number: 1E-21,
                        prefix: "z"
                    }, {
                        number: 1E-18,
                        prefix: "a"
                    }, {
                        number: 1E-15,
                        prefix: "f"
                    }, {
                        number: 1E-12,
                        prefix: "p"
                    }, {
                        number: 1E-9,
                        prefix: "n"
                    }, {
                        number: 1E-6,
                        prefix: "\u03bc"
                    }, {
                        number: .001,
                        prefix: "m"
                    }];
                    this.panEventsEnabled = !0;
                    this.product = "amcharts";
                    this.animations = [];
                    this.balloon = new d.AmBalloon(this.theme);
                    this.balloon.chart = this;
                    this.processTimeout = 0;
                    this.processCount = 1E3;
                    this.animatable = [];
                    this.langObj = {};
                    d.applyTheme(this, a, "AmChart")
                },
                drawChart: function() {
                    0 < this.realWidth && 0 < this.realHeight && (this.drawBackground(), this.redrawLabels(), this.drawTitles(), this.brr(), this.renderFix(), this.chartDiv && (this.boundingRect = this.chartDiv.getBoundingClientRect()))
                },
                makeAccessible: function(a, b, c) {
                    this.accessible && a && (c && a.setAttr("role", c), a.setAttr("aria-label", b))
                },
                drawBackground: function() {
                    d.remove(this.background);
                    var a = this.container,
                        b = this.backgroundColor,
                        c = this.backgroundAlpha,
                        e = this.set;
                    d.isModern || 0 !==
                        c || (c = .001);
                    var h = this.updateWidth();
                    this.realWidth = h;
                    var f = this.updateHeight();
                    this.realHeight = f;
                    b = d.polygon(a, [0, h - 1, h - 1, 0], [0, 0, f - 1, f - 1], b, c, 1, this.borderColor, this.borderAlpha);
                    d.setCN(this, b, "bg");
                    this.background = b;
                    e.push(b);
                    if (b = this.backgroundImage) a = a.image(b, 0, 0, h, f), d.setCN(this, b, "bg-image"), this.bgImg = a, e.push(a)
                },
                drawTitles: function(a) {
                    var b = this.titles;
                    this.titleHeight = 0;
                    if (d.ifArray(b)) {
                        var c = 20,
                            e;
                        for (e = 0; e < b.length; e++) {
                            var h = b[e],
                                h = d.processObject(h, d.Title, this.theme);
                            if (!1 !== h.enabled) {
                                var f =
                                    h.color;
                                void 0 === f && (f = this.color);
                                var g = h.size;
                                isNaN(g) && (g = this.fontSize + 2);
                                isNaN(h.alpha);
                                var k = this.marginLeft,
                                    l = !0;
                                void 0 !== h.bold && (l = h.bold);
                                f = d.wrappedText(this.container, h.text, f, this.fontFamily, g, "middle", l, this.realWidth - 35 - this.marginRight - k);
                                f.translate(k + (this.realWidth - this.marginRight - k) / 2, c);
                                f.node.style.pointerEvents = "none";
                                h.sprite = f;
                                void 0 !== h.tabIndex && f.setAttr("tabindex", h.tabIndex);
                                d.setCN(this, f, "title");
                                h.id && d.setCN(this, f, "title-" + h.id);
                                f.attr({
                                    opacity: h.alpha
                                });
                                c += f.getBBox().height +
                                    5;
                                a ? f.remove() : this.freeLabelsSet.push(f)
                            }
                        }
                        this.titleHeight = c - 10
                    }
                },
                write: function(a) {
                    var b = this;
                    if (b.listeners)
                        for (var c = 0; c < b.listeners.length; c++) {
                            var e = b.listeners[c];
                            b.addListener(e.event, e.method)
                        }
                    b.fire({
                        type: "buildStarted",
                        chart: b
                    });
                    b.afterWriteTO && clearTimeout(b.afterWriteTO);
                    0 < b.processTimeout ? b.afterWriteTO = setTimeout(function() {
                        b.afterWrite.call(b, a)
                    }, b.processTimeout) : b.afterWrite(a)
                },
                afterWrite: function(a) {
                    var b;
                    if (b = "object" != typeof a ? document.getElementById(a) : a) {
                        for (; b.firstChild;) b.removeChild(b.firstChild);
                        this.div = b;
                        b.style.overflow = "hidden";
                        b.style.textAlign = "left";
                        a = this.chartDiv;
                        var c = this.legendDiv,
                            e = this.legend,
                            h = c.style,
                            f = a.style;
                        this.measure();
                        this.previousHeight = this.divRealHeight;
                        this.previousWidth = this.divRealWidth;
                        var g, k = document.createElement("div");
                        g = k.style;
                        g.position = "relative";
                        this.containerDiv = k;
                        k.className = this.classNamePrefix + "-main-div";
                        a.className = this.classNamePrefix + "-chart-div";
                        b.appendChild(k);
                        (b = this.exportConfig) && d.AmExport && !this.AmExport && (this.AmExport = new d.AmExport(this,
                            b));
                        this.amExport && d.AmExport && (this.AmExport = d.extend(this.amExport, new d.AmExport(this), !0));
                        this.AmExport && this.AmExport.init && this.AmExport.init();
                        if (e) {
                            e = this.addLegend(e, e.divId);
                            if (e.enabled) switch (h.left = null, h.top = null, h.right = null, f.left = null, f.right = null, f.top = null, h.position = "relative", f.position = "relative", g.width = "100%", g.height = "100%", e.position) {
                                case "bottom":
                                    k.appendChild(a);
                                    k.appendChild(c);
                                    break;
                                case "top":
                                    k.appendChild(c);
                                    k.appendChild(a);
                                    break;
                                case "absolute":
                                    h.position = "absolute";
                                    f.position = "absolute";
                                    void 0 !== e.left && (h.left = e.left + "px");
                                    void 0 !== e.right && (h.right = e.right + "px");
                                    void 0 !== e.top && (h.top = e.top + "px");
                                    void 0 !== e.bottom && (h.bottom = e.bottom + "px");
                                    e.marginLeft = 0;
                                    e.marginRight = 0;
                                    k.appendChild(a);
                                    k.appendChild(c);
                                    break;
                                case "right":
                                    h.position = "relative";
                                    f.position = "absolute";
                                    k.appendChild(a);
                                    k.appendChild(c);
                                    break;
                                case "left":
                                    h.position = "absolute";
                                    f.position = "relative";
                                    k.appendChild(a);
                                    k.appendChild(c);
                                    break;
                                case "outside":
                                    k.appendChild(a)
                            } else k.appendChild(a);
                            this.prevLegendPosition =
                                e.position
                        } else k.appendChild(a);
                        this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);
                        (this.mouseWheelScrollEnabled || this.mouseWheelZoomEnabled) && d.addWheelListeners();
                        this.initChart()
                    }
                },
                createLabelsSet: function() {
                    d.remove(this.labelsSet);
                    this.labelsSet = this.container.set();
                    this.freeLabelsSet.push(this.labelsSet)
                },
                initChart: function() {
                    this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme);
                    window.AmCharts_path && (this.path = window.AmCharts_path);
                    void 0 === this.path && (this.path =
                        d.getPath());
                    void 0 === this.path && (this.path = "amcharts/");
                    this.path = d.normalizeUrl(this.path);
                    void 0 === this.pathToImages && (this.pathToImages = Splunk.util.make_full_url('/static/app/ot_visualizations/visualizations/ot_gantt//')); // this.path + "images/");
                    this.initHC || (d.callInitHandler(this), this.initHC = !0);
                    d.applyLang(this.language, this);
                    var a = this.numberFormatter;
                    a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator));
                    (a = this.percentFormatter) &&
                    !isNaN(a.precision) && (this.percentPrecision = a.precision);
                    this.nf = {
                        precision: this.precision,
                        thousandsSeparator: this.thousandsSeparator,
                        decimalSeparator: this.decimalSeparator
                    };
                    this.pf = {
                        precision: this.percentPrecision,
                        thousandsSeparator: this.thousandsSeparator,
                        decimalSeparator: this.decimalSeparator
                    };
                    this.destroy();
                    (a = this.container) ? (a.container.innerHTML = "", a.width = this.realWidth, a.height = this.realHeight, a.addDefs(this), this.chartDiv.appendChild(a.container)) : a = new d.AmDraw(this.chartDiv, this.realWidth,
                        this.realHeight, this);
                    this.container = a;
                    this.extension = ".png";
                    this.svgIcons && d.SVG && (this.extension = ".svg");
                    this.checkDisplay();
                    this.checkTransform(this.div);
                    a.chart = this;
                    d.VML || d.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, d.remove(this.set), this.set = a.set(), d.remove(this.gridSet), this.gridSet = a.set(), d.remove(this.cursorLineSet), this.cursorLineSet = a.set(), d.remove(this.graphsBehindSet), this.graphsBehindSet = a.set(), d.remove(this.bulletBehindSet),
                        this.bulletBehindSet = a.set(), d.remove(this.columnSet), this.columnSet = a.set(), d.remove(this.graphsSet), this.graphsSet = a.set(), d.remove(this.trendLinesSet), this.trendLinesSet = a.set(), d.remove(this.axesSet), this.axesSet = a.set(), d.remove(this.cursorSet), this.cursorSet = a.set(), d.remove(this.scrollbarsSet), this.scrollbarsSet = a.set(), d.remove(this.bulletSet), this.bulletSet = a.set(), d.remove(this.freeLabelsSet), this.freeLabelsSet = a.set(), d.remove(this.axesLabelsSet), this.axesLabelsSet = a.set(), d.remove(this.balloonsSet),
                        this.balloonsSet = a.set(), d.remove(this.plotBalloonsSet), this.plotBalloonsSet = a.set(), d.remove(this.zoomButtonSet), this.zoomButtonSet = a.set(), d.remove(this.zbSet), this.zbSet = null, d.remove(this.linkSet), this.linkSet = a.set()) : this.fire({
                        type: "failed",
                        chart: this
                    })
                },
                premeasure: function() {
                    var a = this.div;
                    if (a) {
                        try {
                            this.boundingRect = this.chartDiv.getBoundingClientRect()
                        } catch (e) {}
                        var b = a.offsetWidth,
                            c = a.offsetHeight;
                        a.clientHeight && (b = a.clientWidth, c = a.clientHeight);
                        if (b != this.mw || c != this.mh) this.mw = b, this.mh =
                            c, this.measure()
                    }
                },
                measure: function() {
                    var a = this.div;
                    if (a) {
                        var b = this.chartDiv,
                            c = a.offsetWidth,
                            e = a.offsetHeight,
                            h = this.container;
                        a.clientHeight && (c = a.clientWidth, e = a.clientHeight);
                        var e = Math.round(e),
                            c = Math.round(c),
                            a = Math.round(d.toCoordinate(this.width, c)),
                            f = Math.round(d.toCoordinate(this.height, e));
                        (c != this.previousWidth || e != this.previousHeight) && 0 < a && 0 < f && (b.style.width = a + "px", b.style.height = f + "px", b.style.padding = 0, h && h.setSize(a, f), this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme));
                        this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, f);
                        this.updateWidth();
                        this.balloon.chart = this;
                        this.realWidth = a;
                        this.realHeight = f;
                        this.divRealWidth = c;
                        this.divRealHeight = e
                    }
                },
                checkDisplay: function() {
                    if (this.autoDisplay && this.container) {
                        var a = d.rect(this.container, 10, 10),
                            b = a.getBBox();
                        0 === b.width && 0 === b.height && (this.divRealHeight = this.divRealWidth = this.realHeight = this.realWidth = 0, this.previousWidth = this.previousHeight = NaN);
                        a.remove()
                    }
                },
                checkTransform: function(a) {
                    if (this.autoTransform &&
                        window.getComputedStyle && a) {
                        if (a.style) {
                            var b = window.getComputedStyle(a, null);
                            if (b && (b = b.getPropertyValue("-webkit-transform") || b.getPropertyValue("-moz-transform") || b.getPropertyValue("-ms-transform") || b.getPropertyValue("-o-transform") || b.getPropertyValue("transform")) && "none" !== b) {
                                var c = b.split("(")[1].split(")")[0].split(","),
                                    b = c[0],
                                    c = c[1],
                                    b = Math.sqrt(b * b + c * c);
                                isNaN(b) || (this.cssScale *= b)
                            }
                        }
                        a.parentNode && this.checkTransform(a.parentNode)
                    }
                },
                destroy: function() {
                    this.chartDiv.innerHTML = "";
                    this.clearTimeOuts();
                    this.legend && this.legend.destroy()
                },
                clearTimeOuts: function() {
                    var a = this.timeOuts;
                    if (a) {
                        var b;
                        for (b = 0; b < a.length; b++) clearTimeout(a[b])
                    }
                    this.timeOuts = []
                },
                clear: function(a) {
                    try {
                        document.removeEventListener("touchstart", this.docfn1, !0), document.removeEventListener("touchend", this.docfn2, !0)
                    } catch (b) {}
                    d.callMethod("clear", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]);
                    this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null;
                    this.clearTimeOuts();
                    this.container &&
                        (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv));
                    a || d.removeChart(this);
                    if (a = this.div)
                        for (; a.firstChild;) a.removeChild(a.firstChild);
                    this.legend && this.legend.destroy();
                    this.AmExport && this.AmExport.clear && this.AmExport.clear()
                },
                setMouseCursor: function(a) {
                    "auto" == a && d.isNN && (a = "default");
                    this.chartDiv.style.cursor = a;
                    this.legendDiv.style.cursor = a
                },
                redrawLabels: function() {
                    this.labels = [];
                    var a = this.allLabels;
                    this.createLabelsSet();
                    var b;
                    for (b = 0; b < a.length; b++) this.drawLabel(a[b])
                },
                drawLabel: function(a) {
                    var b = this;
                    if (b.container && !1 !== a.enabled) {
                        a = d.processObject(a, d.Label, b.theme);
                        var c = a.y,
                            e = a.text,
                            h = a.align,
                            f = a.size,
                            g = a.color,
                            k = a.rotation,
                            l = a.alpha,
                            m = a.bold,
                            p = d.toCoordinate(a.x, b.realWidth),
                            c = d.toCoordinate(c, b.realHeight);
                        p || (p = 0);
                        c || (c = 0);
                        void 0 === g && (g = b.color);
                        isNaN(f) && (f = b.fontSize);
                        h || (h = "start");
                        "left" == h && (h = "start");
                        "right" == h && (h = "end");
                        "center" == h && (h = "middle", k ? c = b.realHeight - c + c / 2 : p = b.realWidth / 2 - p);
                        void 0 === l && (l = 1);
                        void 0 === k && (k = 0);
                        c += f / 2;
                        e = d.text(b.container,
                            e, g, b.fontFamily, f, h, m, l);
                        e.translate(p, c);
                        void 0 !== a.tabIndex && e.setAttr("tabindex", a.tabIndex);
                        d.setCN(b, e, "label");
                        a.id && d.setCN(b, e, "label-" + a.id);
                        0 !== k && e.rotate(k);
                        a.url ? (e.setAttr("cursor", "pointer"), e.click(function() {
                            d.getURL(a.url, b.urlTarget)
                        })) : e.node.style.pointerEvents = "none";
                        b.labelsSet.push(e);
                        b.labels.push(e)
                    }
                },
                addLabel: function(a, b, c, e, d, f, g, k, l, m) {
                    a = {
                        x: a,
                        y: b,
                        text: c,
                        align: e,
                        size: d,
                        color: f,
                        alpha: k,
                        rotation: g,
                        bold: l,
                        url: m,
                        enabled: !0
                    };
                    this.container && this.drawLabel(a);
                    this.allLabels.push(a)
                },
                clearLabels: function() {
                    var a = this.labels,
                        b;
                    for (b = a.length - 1; 0 <= b; b--) a[b].remove();
                    this.labels = [];
                    this.allLabels = []
                },
                updateHeight: function() {
                    var a = this.divRealHeight,
                        b = this.legend;
                    if (b) {
                        var c = this.legendDiv.offsetHeight,
                            b = b.position;
                        if ("top" == b || "bottom" == b) {
                            a -= c;
                            if (0 > a || isNaN(a)) a = 0;
                            this.chartDiv.style.height = a + "px"
                        }
                    }
                    return a
                },
                updateWidth: function() {
                    var a = this.divRealWidth,
                        b = this.divRealHeight,
                        c = this.legend;
                    if (c) {
                        var e = this.legendDiv,
                            d = e.offsetWidth;
                        isNaN(c.width) || (d = c.width);
                        c.ieW && (d = c.ieW);
                        var f =
                            e.offsetHeight,
                            e = e.style,
                            g = this.chartDiv.style,
                            k = c.position;
                        if (("right" == k || "left" == k) && void 0 === c.divId) {
                            a -= d;
                            if (0 > a || isNaN(a)) a = 0;
                            g.width = a + "px";
                            this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, this.realHeight);
                            "left" == k ? (g.left = d + "px", e.left = "0px") : (g.left = "0px", e.left = a + "px");
                            b > f && (e.top = (b - f) / 2 + "px")
                        }
                    }
                    return a
                },
                getTitleHeight: function() {
                    this.drawTitles(!0);
                    return this.titleHeight
                },
                addTitle: function(a, b, c, e, d) {
                    isNaN(b) && (b = this.fontSize + 2);
                    a = {
                        text: a,
                        size: b,
                        color: c,
                        alpha: e,
                        bold: d,
                        enabled: !0
                    };
                    this.titles.push(a);
                    return a
                },
                handleWheel: function(a) {
                    var b = 0;
                    a || (a = window.event);
                    a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3);
                    b && this.handleWheelReal(b, a.shiftKey);
                    a.preventDefault && a.preventDefault()
                },
                handleWheelReal: function() {},
                handleDocTouchStart: function() {
                    this.handleMouseMove();
                    this.tmx = this.mouseX;
                    this.tmy = this.mouseY;
                    this.touchStartTime = (new Date).getTime()
                },
                handleDocTouchEnd: function() {
                    -.5 < this.tmx && this.tmx < this.divRealWidth + 1 && 0 < this.tmy && this.tmy < this.divRealHeight ?
                        (this.handleMouseMove(), 4 > Math.abs(this.mouseX - this.tmx) && 4 > Math.abs(this.mouseY - this.tmy) ? (this.tapped = !0, this.panRequired && this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = "none", this.chartDiv.style.touchAction = "none")) : this.mouseIsOver || this.resetTouchStyle()) : (this.tapped = !1, this.resetTouchStyle())
                },
                resetTouchStyle: function() {
                    this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = "auto", this.chartDiv.style.touchAction = "auto")
                },
                checkTouchDuration: function(a) {
                    var b =
                        this,
                        c = (new Date).getTime();
                    if (a)
                        if (a.touches) b.isTouchEvent = !0;
                        else if (!b.isTouchEvent) return !0;
                    if (c - b.touchStartTime > b.touchClickDuration) return !0;
                    setTimeout(function() {
                        b.resetTouchDuration()
                    }, 300)
                },
                resetTouchDuration: function() {
                    this.isTouchEvent = !1
                },
                checkTouchMoved: function() {
                    if (4 < Math.abs(this.mouseX - this.tmx) || 4 < Math.abs(this.mouseY - this.tmy)) return !0
                },
                addListeners: function() {
                    var a = this,
                        b = a.chartDiv;
                    document.addEventListener ? ("ontouchstart" in document.documentElement && (b.addEventListener("touchstart",
                        function(b) {
                            a.handleTouchStart.call(a, b)
                        }, !0), b.addEventListener("touchmove", function(b) {
                        a.handleMouseMove.call(a, b)
                    }, !0), b.addEventListener("touchend", function(b) {
                        a.handleTouchEnd.call(a, b)
                    }, !0), a.docfn1 = function(b) {
                        a.handleDocTouchStart.call(a, b)
                    }, a.docfn2 = function(b) {
                        a.handleDocTouchEnd.call(a, b)
                    }, document.addEventListener("touchstart", a.docfn1, !0), document.addEventListener("touchend", a.docfn2, !0)), b.addEventListener("mousedown", function(b) {
                        a.mouseIsOver = !0;
                        a.handleMouseMove.call(a, b);
                        a.handleMouseDown.call(a,
                            b);
                        a.handleDocTouchStart.call(a, b)
                    }, !0), b.addEventListener("mouseover", function(b) {
                        a.handleMouseOver.call(a, b)
                    }, !0), b.addEventListener("mouseout", function(b) {
                        a.handleMouseOut.call(a, b)
                    }, !0), b.addEventListener("mouseup", function(b) {
                        a.handleDocTouchEnd.call(a, b)
                    }, !0)) : (b.attachEvent("onmousedown", function(b) {
                        a.handleMouseDown.call(a, b)
                    }), b.attachEvent("onmouseover", function(b) {
                        a.handleMouseOver.call(a, b)
                    }), b.attachEvent("onmouseout", function(b) {
                        a.handleMouseOut.call(a, b)
                    }))
                },
                dispDUpd: function() {
                    this.skipEvents ||
                        (this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, this.fire({
                            type: "dataUpdated",
                            chart: this
                        })), this.chartCreated || (this.chartCreated = !0, this.fire({
                            type: "init",
                            chart: this
                        })), this.chartRendered || (this.fire({
                            type: "rendered",
                            chart: this
                        }), this.chartRendered = !0), this.fire({
                            type: "drawn",
                            chart: this
                        }));
                    this.skipEvents = !1
                },
                validateSize: function() {
                    var a = this;
                    a.premeasure();
                    a.checkDisplay();
                    a.cssScale = 1;
                    a.cssAngle = 0;
                    a.checkTransform(a.div);
                    if (a.divRealWidth != a.previousWidth || a.divRealHeight != a.previousHeight) {
                        var b =
                            a.legend;
                        if (0 < a.realWidth && 0 < a.realHeight) {
                            a.sizeChanged = !0;
                            if (b) {
                                a.legendInitTO && clearTimeout(a.legendInitTO);
                                var c = setTimeout(function() {
                                    b.invalidateSize()
                                }, 10);
                                a.timeOuts.push(c);
                                a.legendInitTO = c
                            }
                            a.marginsUpdated = !1;
                            clearTimeout(a.initTO);
                            c = setTimeout(function() {
                                a.initChart()
                            }, 10);
                            a.timeOuts.push(c);
                            a.initTO = c
                        }
                        a.renderFix();
                        b && b.renderFix && b.renderFix();
                        clearTimeout(a.resizedTO);
                        a.resizedTO = setTimeout(function() {
                            a.fire({
                                type: "resized",
                                chart: a
                            })
                        }, 10);
                        a.previousHeight = a.divRealHeight;
                        a.previousWidth =
                            a.divRealWidth
                    }
                },
                invalidateSize: function() {
                    this.previousHeight = this.previousWidth = NaN;
                    this.invalidateSizeReal()
                },
                invalidateSizeReal: function() {
                    var a = this;
                    a.marginsUpdated = !1;
                    clearTimeout(a.validateTO);
                    var b = setTimeout(function() {
                        a.validateSize()
                    }, 5);
                    a.timeOuts.push(b);
                    a.validateTO = b
                },
                validateData: function(a) {
                    this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = !1, this.initChart(a))
                },
                validateNow: function(a, b) {
                    this.initTO && clearTimeout(this.initTO);
                    a && (this.dataChanged = !0, this.marginsUpdated = !1);
                    this.skipEvents = b;
                    this.chartRendered = !1;
                    var c = this.legend;
                    c && c.position != this.prevLegendPosition && (this.previousWidth = this.mw = 0, c.invalidateSize && (c.invalidateSize(), this.validateSize()));
                    this.write(this.div)
                },
                showItem: function(a) {
                    a.hidden = !1;
                    this.initChart()
                },
                hideItem: function(a) {
                    a.hidden = !0;
                    this.initChart()
                },
                hideBalloon: function() {
                    var a = this;
                    clearTimeout(a.hoverInt);
                    clearTimeout(a.balloonTO);
                    a.hoverInt = setTimeout(function() {
                        a.hideBalloonReal.call(a)
                    }, a.hideBalloonTime)
                },
                cleanChart: function() {},
                hideBalloonReal: function() {
                    var a = this.balloon;
                    a && a.hide && a.hide()
                },
                showBalloon: function(a, b, c, e, d) {
                    var f = this;
                    clearTimeout(f.balloonTO);
                    clearTimeout(f.hoverInt);
                    f.balloonTO = setTimeout(function() {
                        f.showBalloonReal.call(f, a, b, c, e, d)
                    }, 1)
                },
                showBalloonReal: function(a, b, c, e, d) {
                    this.handleMouseMove();
                    var f = this.balloon;
                    f.enabled && (f.followCursor(!1), f.changeColor(b), !c || f.fixedPosition ? (f.setPosition(e, d), isNaN(e) || isNaN(d) ? f.followCursor(!0) : f.followCursor(!1)) : f.followCursor(!0), a && f.showBalloon(a))
                },
                handleMouseOver: function() {
                    this.outTO && clearTimeout(this.outTO);
                    d.resetMouseOver();
                    this.mouseIsOver = !0
                },
                handleMouseOut: function() {
                    var a = this;
                    d.resetMouseOver();
                    a.outTO && clearTimeout(a.outTO);
                    a.outTO = setTimeout(function() {
                        a.handleMouseOutReal()
                    }, 10)
                },
                handleMouseOutReal: function() {
                    this.mouseIsOver = !1
                },
                handleMouseMove: function(a) {
                    a || (a = window.event);
                    this.mouse2Y = this.mouse2X = NaN;
                    var b, c, e, d;
                    if (a) {
                        if (a.touches) {
                            var f = a.touches.item(1);
                            f && this.panEventsEnabled && this.boundingRect && (e = f.clientX - this.boundingRect.left,
                                d = f.clientY - this.boundingRect.top);
                            a = a.touches.item(0);
                            if (!a) return
                        } else this.wasTouched = !1;
                        this.boundingRect && a.clientX && (b = a.clientX - this.boundingRect.left, c = a.clientY - this.boundingRect.top);
                        isNaN(e) ? this.mouseX = b : (this.mouseX = Math.min(b, e), this.mouse2X = Math.max(b, e));
                        isNaN(d) ? this.mouseY = c : (this.mouseY = Math.min(c, d), this.mouse2Y = Math.max(c, d));
                        this.autoTransform && (this.mouseX /= this.cssScale, this.mouseY /= this.cssScale)
                    }
                },
                handleTouchStart: function(a) {
                    this.hideBalloonReal();
                    a && (a.touches && this.tapToActivate &&
                        !this.tapped || !this.panRequired) || (this.handleMouseMove(a), this.handleMouseDown(a))
                },
                handleTouchEnd: function(a) {
                    this.wasTouched = !0;
                    this.handleMouseMove(a);
                    d.resetMouseOver();
                    this.handleReleaseOutside(a)
                },
                handleReleaseOutside: function() {
                    this.handleDocTouchEnd.call(this)
                },
                handleMouseDown: function(a) {
                    d.resetMouseOver();
                    this.mouseIsOver = !0;
                    a && a.preventDefault && (this.panEventsEnabled ? a.preventDefault() : a.touches || a.preventDefault())
                },
                addLegend: function(a, b) {
                    a = d.processObject(a, d.AmLegend, this.theme);
                    a.divId =
                        b;
                    a.ieW = 0;
                    var c;
                    c = "object" != typeof b && b ? document.getElementById(b) : b;
                    this.legend = a;
                    a.chart = this;
                    c ? (a.div = c, a.position = "outside", a.autoMargins = !1) : a.div = this.legendDiv;
                    return a
                },
                removeLegend: function() {
                    this.legend = void 0;
                    this.previousWidth = 0;
                    this.legendDiv.innerHTML = ""
                },
                handleResize: function() {
                    (d.isPercents(this.width) || d.isPercents(this.height)) && this.invalidateSizeReal();
                    this.renderFix()
                },
                renderFix: function() {
                    if (!d.VML) {
                        var a = this.container;
                        a && a.renderFix()
                    }
                },
                getSVG: function() {
                    if (d.hasSVG) return this.container
                },
                animate: function(a, b, c, e, h, f, g) {
                    a["an_" + b] && d.removeFromArray(this.animations, a["an_" + b]);
                    c = {
                        obj: a,
                        frame: 0,
                        attribute: b,
                        from: c,
                        to: e,
                        time: h,
                        effect: f,
                        suffix: g
                    };
                    a["an_" + b] = c;
                    this.animations.push(c);
                    return c
                },
                setLegendData: function(a) {
                    var b = this.legend;
                    b && b.setData(a)
                },
                stopAnim: function(a) {
                    d.removeFromArray(this.animations, a)
                },
                updateAnimations: function() {
                    var a;
                    this.container && this.container.update();
                    if (this.animations)
                        for (a = this.animations.length - 1; 0 <= a; a--) {
                            var b = this.animations[a],
                                c = d.updateRate * b.time,
                                e = b.frame + 1,
                                h = b.obj,
                                f = b.attribute;
                            if (e <= c) {
                                b.frame++;
                                var g = Number(b.from),
                                    k = Number(b.to) - g,
                                    c = d[b.effect](0, e, g, k, c);
                                0 === k ? (this.animations.splice(a, 1), h.node.style[f] = Number(b.to) + b.suffix) : h.node.style[f] = c + b.suffix
                            } else h.node.style[f] = Number(b.to) + b.suffix, h.animationFinished = !0, this.animations.splice(a, 1)
                        }
                },
                update: function() {
                    this.updateAnimations();
                    var a = this.animatable;
                    if (0 < a.length) {
                        for (var b = !0, c = a.length - 1; 0 <= c; c--) {
                            var e = a[c];
                            e && (e.animationFinished ? a.splice(c, 1) : b = !1)
                        }
                        b && (this.fire({
                            type: "animationFinished",
                            chart: this
                        }), this.animatable = [])
                    }
                },
                inIframe: function() {
                    try {
                        return window.self !== window.top
                    } catch (a) {
                        return !0
                    }
                },
                brr: function() {
                    if (!this.hideCredits) {
                        var a = "amcharts.com",
                            b = window.location.hostname.split("."),
                            c;
                        2 <= b.length && (c = b[b.length - 2] + "." + b[b.length - 1]);
                        this.amLink && (b = this.amLink.parentNode) && b.removeChild(this.amLink);
                        b = this.creditsPosition;
                        if (c != a || !0 === this.inIframe()) {
                            var a = "http://www." + a,
                                e = c = 0,
                                d = this.realWidth,
                                f = this.realHeight,
                                g = this.type;
                            if ("serial" == g || "xy" == g || "gantt" == g) c = this.marginLeftReal,
                                e = this.marginTopReal, d = c + this.plotAreaWidth, f = e + this.plotAreaHeight;
                            var g = a + "/javascript-charts/",
                                k = "JavaScript charts",
                                l = "";
                            "ammap" == this.product && (g = a + "/javascript-maps/", k = "Interactive JavaScript maps", l = "JS map by amCharts");
                            a = document.createElement("a");
                            l = document.createTextNode(l);
                            a.setAttribute("href", g);
                            a.setAttribute("title", k);
                            this.urlTarget && a.setAttribute("target", this.urlTarget);
                            a.appendChild(l);
                            this.chartDiv.appendChild(a);
                            this.amLink = a;
                            g = a.style;
                            g.position = "absolute";
                            g.textDecoration = "none";
                            g.color = this.color;
                            g.fontFamily = this.fontFamily;
                            g.fontSize = "11px";
                            g.opacity = .7;
                            g.display = "block";
                            var k = a.offsetWidth,
                                a = a.offsetHeight,
                                l = 5 + c,
                                m = e + 5;
                            "bottom-left" == b && (l = 5 + c, m = f - a - 3);
                            "bottom-right" == b && (l = d - k - 5, m = f - a - 3);
                            "top-right" == b && (l = d - k - 5, m = e + 5);
                            g.left = l + "px";
                            g.top = m + "px"
                        }
                    }
                }
            });
            d.Slice = d.Class({
                construct: function() {}
            });
            d.SerialDataItem = d.Class({
                construct: function() {}
            });
            d.GraphDataItem = d.Class({
                construct: function() {}
            });
            d.Guide = d.Class({
                construct: function(a) {
                    this.cname = "Guide";
                    d.applyTheme(this, a, this.cname)
                }
            });
            d.Title = d.Class({
                construct: function(a) {
                    this.cname = "Title";
                    d.applyTheme(this, a, this.cname)
                }
            });
            d.Label = d.Class({
                construct: function(a) {
                    this.cname = "Label";
                    d.applyTheme(this, a, this.cname)
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.AmGraph = d.Class({
                construct: function(a) {
                    this.cname = "AmGraph";
                    this.createEvents("rollOverGraphItem", "rollOutGraphItem", "clickGraphItem", "doubleClickGraphItem", "rightClickGraphItem", "clickGraph", "rollOverGraph", "rollOutGraph");
                    this.type = "line";
                    this.stackable = !0;
                    this.columnCount = 1;
                    this.columnIndex = 0;
                    this.centerCustomBullets = this.showBalloon = !0;
                    this.maxBulletSize = 50;
                    this.minBulletSize = 4;
                    this.balloonText = "[[value]]";
                    this.hidden = this.scrollbar = this.animationPlayed = !1;
                    this.pointPosition = "middle";
                    this.depthCount = 1;
                    this.includeInMinMax = !0;
                    this.negativeBase = 0;
                    this.visibleInLegend = !0;
                    this.showAllValueLabels = !1;
                    this.showBulletsAt = this.showBalloonAt = "close";
                    this.lineThickness = 1;
                    this.dashLength = 0;
                    this.connect = !0;
                    this.lineAlpha = 1;
                    this.bullet = "none";
                    this.bulletBorderThickness = 2;
                    this.bulletBorderAlpha = 0;
                    this.bulletAlpha = 1;
                    this.bulletSize = 8;
                    this.cornerRadiusTop = this.hideBulletsCount = this.bulletOffset = 0;
                    this.cursorBulletAlpha = 1;
                    this.gradientOrientation = "vertical";
                    this.dy =
                        this.dx = 0;
                    this.periodValue = "";
                    this.clustered = !0;
                    this.periodSpan = 1;
                    this.accessibleLabel = "[[title]] [[category]] [[value]]";
                    this.accessibleSkipText = "Press enter to skip [[title]]";
                    this.y = this.x = 0;
                    this.switchable = !0;
                    this.tcc = this.minDistance = 1;
                    this.labelRotation = 0;
                    this.labelAnchor = "auto";
                    this.labelOffset = 3;
                    this.bcn = "graph-";
                    this.dateFormat = "MMM DD, YYYY";
                    this.noRounding = !0;
                    d.applyTheme(this, a, this.cname)
                },
                init: function() {
                    this.createBalloon()
                },
                draw: function() {
                    var a = this.chart;
                    a.isRolledOverBullet = !1;
                    var b = a.type;
                    if (a.drawGraphs) {
                        isNaN(this.precision) || (this.numberFormatter ? this.numberFormatter.precision = this.precision : this.numberFormatter = {
                            precision: this.precision,
                            decimalSeparator: a.decimalSeparator,
                            thousandsSeparator: a.thousandsSeparator
                        });
                        var c = a.container;
                        this.container = c;
                        this.destroy();
                        var e = c.set();
                        this.set = e;
                        e.translate(this.x, this.y);
                        var h = c.set();
                        this.bulletSet = h;
                        h.translate(this.x, this.y);
                        this.behindColumns ? (a.graphsBehindSet.push(e), a.bulletBehindSet.push(h)) : (a.graphsSet.push(e), a.bulletSet.push(h));
                        var f = this.bulletAxis;
                        d.isString(f) && (this.bulletAxis = a.getValueAxisById(f));
                        c = c.set();
                        d.remove(this.columnsSet);
                        this.columnsSet = c;
                        d.setCN(a, e, "graph-" + this.type);
                        d.setCN(a, e, "graph-" + this.id);
                        d.setCN(a, h, "graph-" + this.type);
                        d.setCN(a, h, "graph-" + this.id);
                        this.columnsArray = [];
                        this.ownColumns = [];
                        this.allBullets = [];
                        this.animationArray = [];
                        h = this.labelPosition;
                        h || (f = this.valueAxis.stackType, h = "top", "column" == this.type && (a.rotate && (h = "right"), "100%" == f || "regular" == f) && (h = "middle"), this.labelPosition = h);
                        d.ifArray(this.data) && (a = !1, "xy" == b ? this.xAxis.axisCreated && this.yAxis.axisCreated && (a = !0) : this.valueAxis.axisCreated && (a = !0), !this.hidden && a && this.createGraph());
                        e.push(c)
                    }
                },
                createGraph: function() {
                    var a = this,
                        b = a.chart;
                    a.startAlpha = b.startAlpha;
                    a.seqAn = b.sequencedAnimation;
                    a.baseCoord = a.valueAxis.baseCoord;
                    void 0 === a.fillAlphas && (a.fillAlphas = 0);
                    a.bulletColorR = a.bulletColor;
                    void 0 === a.bulletColorR && (a.bulletColorR = a.lineColorR, a.bulletColorNegative = a.negativeLineColor);
                    void 0 === a.bulletAlpha && (a.bulletAlpha =
                        a.lineAlpha);
                    if ("step" == c || d.VML) a.noRounding = !1;
                    var c = b.type;
                    "gantt" == c && (c = "serial");
                    clearTimeout(a.playedTO);
                    if (!isNaN(a.valueAxis.min) && !isNaN(a.valueAxis.max)) {
                        switch (c) {
                            case "serial":
                                a.categoryAxis && (a.createSerialGraph(), "candlestick" == a.type && 1 > a.valueAxis.minMaxMultiplier && a.positiveClip(a.set));
                                break;
                            case "radar":
                                a.createRadarGraph();
                                break;
                            case "xy":
                                a.createXYGraph()
                        }
                        a.playedTO = setTimeout(function() {
                            a.setAnimationPlayed.call(a)
                        }, 500 * a.chart.startDuration)
                    }
                },
                setAnimationPlayed: function() {
                    this.animationPlayed = !0
                },
                createXYGraph: function() {
                    var a = [],
                        b = [],
                        c = this.xAxis,
                        e = this.yAxis;
                    this.pmh = e.height;
                    this.pmw = c.width;
                    this.pmy = this.pmx = 0;
                    var d;
                    for (d = this.start; d <= this.end; d++) {
                        var f = this.data[d].axes[c.id].graphs[this.id],
                            g = f.values,
                            k = g.x,
                            l = g.y,
                            g = c.getCoordinate(k, this.noRounding),
                            m = e.getCoordinate(l, this.noRounding);
                        if (!isNaN(k) && !isNaN(l) && (a.push(g), b.push(m), f.x = g, f.y = m, k = this.createBullet(f, g, m, d), l = this.labelText)) {
                            var l = this.createLabel(f, l),
                                p = 0;
                            k && (p = k.size);
                            this.positionLabel(f, g, m, l, p)
                        }
                    }
                    this.drawLineGraph(a,
                        b);
                    this.launchAnimation()
                },
                createRadarGraph: function() {
                    var a = this.valueAxis.stackType,
                        b = [],
                        c = [],
                        e = [],
                        d = [],
                        f, g, k, l, m;
                    for (m = this.start; m <= this.end; m++) {
                        var p = this.data[m].axes[this.valueAxis.id].graphs[this.id],
                            q, n;
                        "none" == a || "3d" == a ? q = p.values.value : (q = p.values.close, n = p.values.open);
                        if (isNaN(q)) this.connect || (this.drawLineGraph(b, c, e, d), b = [], c = [], e = [], d = []);
                        else {
                            var t = this.valueAxis.getCoordinate(q, this.noRounding) - this.height,
                                t = t * this.valueAxis.rMultiplier,
                                r = -360 / (this.end - this.start + 1) * m;
                            "middle" ==
                            this.valueAxis.pointPosition && (r -= 180 / (this.end - this.start + 1));
                            q = t * Math.sin(r / 180 * Math.PI);
                            t *= Math.cos(r / 180 * Math.PI);
                            b.push(q);
                            c.push(t);
                            if (!isNaN(n)) {
                                var w = this.valueAxis.getCoordinate(n, this.noRounding) - this.height,
                                    w = w * this.valueAxis.rMultiplier,
                                    z = w * Math.sin(r / 180 * Math.PI),
                                    r = w * Math.cos(r / 180 * Math.PI);
                                e.push(z);
                                d.push(r);
                                isNaN(k) && (k = z);
                                isNaN(l) && (l = r)
                            }
                            r = this.createBullet(p, q, t, m);
                            p.x = q;
                            p.y = t;
                            if (z = this.labelText) z = this.createLabel(p, z), w = 0, r && (w = r.size), this.positionLabel(p, q, t, z, w);
                            isNaN(f) && (f =
                                q);
                            isNaN(g) && (g = t)
                        }
                    }
                    b.push(f);
                    c.push(g);
                    isNaN(k) || (e.push(k), d.push(l));
                    this.drawLineGraph(b, c, e, d);
                    this.launchAnimation()
                },
                positionLabel: function(a, b, c, e, d) {
                    if (e) {
                        var f = this.chart,
                            g = this.valueAxis,
                            k = "middle",
                            l = !1,
                            m = this.labelPosition,
                            p = e.getBBox(),
                            q = this.chart.rotate,
                            n = a.isNegative,
                            t = this.fontSize;
                        void 0 === t && (t = this.chart.fontSize);
                        c -= p.height / 2 - t / 2 - 1;
                        void 0 !== a.labelIsNegative && (n = a.labelIsNegative);
                        switch (m) {
                            case "right":
                                m = q ? n ? "left" : "right" : "right";
                                break;
                            case "top":
                                m = q ? "top" : n ? "bottom" : "top";
                                break;
                            case "bottom":
                                m = q ? "bottom" : n ? "top" : "bottom";
                                break;
                            case "left":
                                m = q ? n ? "right" : "left" : "left"
                        }
                        var t = a.columnGraphics,
                            r = 0,
                            w = 0;
                        t && (r = t.x, w = t.y);
                        var z = this.labelOffset;
                        switch (m) {
                            case "right":
                                k = "start";
                                b += d / 2 + z;
                                break;
                            case "top":
                                c = g.reversed ? c + (d / 2 + p.height / 2 + z) : c - (d / 2 + p.height / 2 + z);
                                break;
                            case "bottom":
                                c = g.reversed ? c - (d / 2 + p.height / 2 + z) : c + (d / 2 + p.height / 2 + z);
                                break;
                            case "left":
                                k = "end";
                                b -= d / 2 + z;
                                break;
                            case "inside":
                                "column" == this.type && (l = !0, q ? n ? (k = "end", b = r - 3 - z) : (k = "start", b = r + 3 + z) : c = n ? w + 7 + z : w - 10 - z);
                                break;
                            case "middle":
                                "column" == this.type && (l = !0, q ? b -= (b - r) / 2 + z - 3 : c -= (c - w) / 2 + z - 3)
                        }
                        "auto" != this.labelAnchor && (k = this.labelAnchor);
                        e.attr({
                            "text-anchor": k
                        });
                        this.labelRotation && e.rotate(this.labelRotation);
                        e.translate(b, c);
                        !this.showAllValueLabels && t && l && (p = e.getBBox(), p.height > a.columnHeight || p.width > a.columnWidth) && (e.remove(), e = null);
                        if (e && "radar" != f.type)
                            if (q) {
                                if (0 > c || c > this.height) e.remove(), e = null;
                                !this.showAllValueLabels && e && (0 > b || b > this.width) && (e.remove(), e = null)
                            } else {
                                if (0 > b || b > this.width) e.remove(),
                                    e = null;
                                !this.showAllValueLabels && e && (0 > c || c > this.height) && (e.remove(), e = null)
                            }
                        e && this.allBullets.push(e);
                        return e
                    }
                },
                getGradRotation: function() {
                    var a = 270;
                    "horizontal" == this.gradientOrientation && (a = 0);
                    return this.gradientRotation = a
                },
                createSerialGraph: function() {
                    this.dashLengthSwitched = this.fillColorsSwitched = this.lineColorSwitched = void 0;
                    var a = this.chart,
                        b = this.id,
                        c = this.index,
                        e = this.data,
                        h = this.chart.container,
                        f = this.valueAxis,
                        g = this.type,
                        k = this.columnWidthReal,
                        l = this.showBulletsAt;
                    isNaN(this.columnWidth) ||
                        (k = this.columnWidth);
                    isNaN(k) && (k = .8);
                    var m = this.useNegativeColorIfDown,
                        p = this.width,
                        q = this.height,
                        n = this.y,
                        t = this.rotate,
                        r = this.columnCount,
                        w = d.toCoordinate(this.cornerRadiusTop, k / 2),
                        z = this.connect,
                        x = [],
                        u = [],
                        A, y, B, D, C = this.chart.graphs.length,
                        I, H = this.dx / this.tcc,
                        Q = this.dy / this.tcc,
                        M = f.stackType,
                        P = this.start,
                        ia = this.end,
                        J = this.scrollbar,
                        aa = "graph-column-";
                    J && (aa = "scrollbar-graph-column-");
                    var ma = this.categoryAxis,
                        na = this.baseCoord,
                        Pa = this.negativeBase,
                        Z = this.columnIndex,
                        da = this.lineThickness,
                        X = this.lineAlpha,
                        xa = this.lineColorR,
                        ea = this.dashLength,
                        fa = this.set,
                        Ba, ga = this.getGradRotation(),
                        V = this.chart.columnSpacing,
                        Y = ma.cellWidth,
                        Da = (Y * k - r) / r;
                    V > Da && (V = Da);
                    var G, v, oa, ha = q,
                        Qa = p,
                        ca = 0,
                        tb = 0,
                        ub = 0,
                        vb = 0,
                        gb = 0,
                        hb = 0,
                        wb = this.fillColorsR,
                        Ra = this.negativeFillColors,
                        Ja = this.negativeLineColor,
                        Ya = this.fillAlphas,
                        Za = this.negativeFillAlphas;
                    "object" == typeof Ya && (Ya = Ya[0]);
                    "object" == typeof Za && (Za = Za[0]);
                    var xb = this.noRounding;
                    "step" == g && (xb = !1);
                    var ib = f.getCoordinate(f.min);
                    f.logarithmic && (ib = f.getCoordinate(f.minReal));
                    this.minCoord =
                        ib;
                    this.resetBullet && (this.bullet = "none");
                    if (!(J || "line" != g && "smoothedLine" != g && "step" != g || (1 == e.length && "step" != g && "none" == this.bullet && (this.bullet = "round", this.resetBullet = !0), !Ra && void 0 == Ja || m))) {
                        var Ua = Pa;
                        Ua > f.max && (Ua = f.max);
                        Ua < f.min && (Ua = f.min);
                        f.logarithmic && (Ua = f.minReal);
                        var Ka = f.getCoordinate(Ua),
                            Mb = f.getCoordinate(f.max);
                        t ? (ha = q, Qa = Math.abs(Mb - Ka), ub = q, vb = Math.abs(ib - Ka), hb = tb = 0, f.reversed ? (ca = 0, gb = Ka) : (ca = Ka, gb = 0)) : (Qa = p, ha = Math.abs(Mb - Ka), vb = p, ub = Math.abs(ib - Ka), gb = ca = 0, f.reversed ?
                            (hb = n, tb = Ka) : hb = Ka)
                    }
                    var La = Math.round;
                    this.pmx = La(ca);
                    this.pmy = La(tb);
                    this.pmh = La(ha);
                    this.pmw = La(Qa);
                    this.nmx = La(gb);
                    this.nmy = La(hb);
                    this.nmh = La(ub);
                    this.nmw = La(vb);
                    d.isModern || (this.nmy = this.nmx = 0, this.nmh = this.height);
                    this.clustered || (r = 1);
                    k = "column" == g ? (Y * k - V * (r - 1)) / r : Y * k;
                    1 > k && (k = 1);
                    var Nb = this.fixedColumnWidth;
                    isNaN(Nb) || (k = Nb);
                    var L;
                    if ("line" == g || "step" == g || "smoothedLine" == g) {
                        if (0 < P) {
                            for (L = P - 1; - 1 < L; L--)
                                if (G = e[L], v = G.axes[f.id].graphs[b], oa = v.values.value, !isNaN(oa)) {
                                    P = L;
                                    break
                                }
                            if (this.lineColorField)
                                for (L =
                                    P; - 1 < L; L--)
                                    if (G = e[L], v = G.axes[f.id].graphs[b], v.lineColor) {
                                        this.lineColorSwitched = v.lineColor;
                                        void 0 === this.bulletColor && (this.bulletColorSwitched = this.lineColorSwitched);
                                        break
                                    }
                            if (this.fillColorsField)
                                for (L = P; - 1 < L; L--)
                                    if (G = e[L], v = G.axes[f.id].graphs[b], v.fillColors) {
                                        this.fillColorsSwitched = v.fillColors;
                                        break
                                    }
                            if (this.dashLengthField)
                                for (L = P; - 1 < L; L--)
                                    if (G = e[L], v = G.axes[f.id].graphs[b], !isNaN(v.dashLength)) {
                                        this.dashLengthSwitched = v.dashLength;
                                        break
                                    }
                        }
                        if (ia < e.length - 1)
                            for (L = ia + 1; L < e.length; L++)
                                if (G = e[L],
                                    v = G.axes[f.id].graphs[b], oa = v.values.value, !isNaN(oa)) {
                                    ia = L;
                                    break
                                }
                    }
                    ia < e.length - 1 && ia++;
                    var T = [],
                        U = [],
                        Ma = !1;
                    if ("line" == g || "step" == g || "smoothedLine" == g)
                        if (this.stackable && "regular" == M || "100%" == M || this.fillToGraph) Ma = !0;
                    var Ob = this.noStepRisers,
                        jb = -1E3,
                        kb = -1E3,
                        lb = this.minDistance,
                        Sa = !0,
                        $a = !1;
                    for (L = P; L <= ia; L++) {
                        G = e[L];
                        v = G.axes[f.id].graphs[b];
                        v.index = L;
                        var ab, Ta = NaN;
                        if (m && void 0 == this.openField)
                            for (var yb = L + 1; yb < e.length && (!e[yb] || !(ab = e[L + 1].axes[f.id].graphs[b]) || !ab.values || (Ta = ab.values.value, isNaN(Ta))); yb++);
                        var S, R, K, ba, ja = NaN,
                            E = NaN,
                            F = NaN,
                            O = NaN,
                            N = NaN,
                            qa = NaN,
                            ra = NaN,
                            sa = NaN,
                            ta = NaN,
                            ya = NaN,
                            Ea = NaN,
                            ka = NaN,
                            la = NaN,
                            W = NaN,
                            zb = NaN,
                            Ab = NaN,
                            ua = NaN,
                            va = void 0,
                            Na = wb,
                            Va = Ya,
                            Ha = xa,
                            Ca, za, Bb = this.proCandlesticks,
                            mb = this.topRadius,
                            Fa = q - 1,
                            pa = p - 1,
                            bb = this.pattern;
                        void 0 != v.pattern && (bb = v.pattern);
                        isNaN(v.alpha) || (Va = v.alpha);
                        isNaN(v.dashLength) || (ea = v.dashLength);
                        var Ia = v.values;
                        f.recalculateToPercents && (Ia = v.percents);
                        "none" == M && (Z = isNaN(v.columnIndex) ? this.columnIndex : v.columnIndex);
                        if (Ia) {
                            W = this.stackable && "none" != M && "3d" !=
                                M ? Ia.close : Ia.value;
                            if ("candlestick" == g || "ohlc" == g) W = Ia.close, Ab = Ia.low, ra = f.getCoordinate(Ab), zb = Ia.high, ta = f.getCoordinate(zb);
                            ua = Ia.open;
                            F = f.getCoordinate(W, xb);
                            isNaN(ua) || (N = f.getCoordinate(ua, xb), m && "regular" != M && "100%" != M && (Ta = ua, ua = N = NaN));
                            m && (void 0 == this.openField ? ab && (ab.isNegative = Ta < W ? !0 : !1, isNaN(Ta) && (v.isNegative = !Sa)) : v.isNegative = Ta > W ? !0 : !1);
                            if (!J) switch (this.showBalloonAt) {
                                case "close":
                                    v.y = F;
                                    break;
                                case "open":
                                    v.y = N;
                                    break;
                                case "high":
                                    v.y = ta;
                                    break;
                                case "low":
                                    v.y = ra
                            }
                            var ja = G.x[ma.id],
                                Wa = this.periodSpan - 1;
                            "step" != g || isNaN(G.cellWidth) || (Y = G.cellWidth);
                            var wa = Math.floor(Y / 2) + Math.floor(Wa * Y / 2),
                                Ga = wa,
                                nb = 0;
                            "left" == this.stepDirection && (nb = (2 * Y + Wa * Y) / 2, ja -= nb);
                            "center" == this.stepDirection && (nb = Y / 2, ja -= nb);
                            "start" == this.pointPosition && (ja -= Y / 2 + Math.floor(Wa * Y / 2), wa = 0, Ga = Math.floor(Y) + Math.floor(Wa * Y));
                            "end" == this.pointPosition && (ja += Y / 2 + Math.floor(Wa * Y / 2), wa = Math.floor(Y) + Math.floor(Wa * Y), Ga = 0);
                            if (Ob) {
                                var Cb = this.columnWidth;
                                isNaN(Cb) || (wa *= Cb, Ga *= Cb)
                            }
                            J || (v.x = ja); - 1E5 > ja && (ja = -1E5);
                            ja > p + 1E5 && (ja = p + 1E5);
                            t ? (E = F, O = N, N = F = ja, isNaN(ua) && !this.fillToGraph && (O = na), qa = ra, sa = ta) : (O = E = ja, isNaN(ua) && !this.fillToGraph && (N = na));
                            if (!Bb && W < ua || Bb && W < Ba) v.isNegative = !0, Ra && (Na = Ra), Za && (Va = Za), void 0 != Ja && (Ha = Ja);
                            $a = !1;
                            isNaN(W) || (m ? W > Ta ? (Sa && ($a = !0), Sa = !1) : (Sa || ($a = !0), Sa = !0) : v.isNegative = W < Pa ? !0 : !1, Ba = W);
                            var Pb = !1;
                            J && a.chartScrollbar.ignoreCustomColors && (Pb = !0);
                            Pb || (void 0 != v.color && (Na = v.color), v.fillColors && (Na = v.fillColors));
                            F = d.fitToBounds(F, -3E4, 3E4);
                            switch (g) {
                                case "line":
                                    if (isNaN(W)) z ||
                                        (this.drawLineGraph(x, u, T, U), x = [], u = [], T = [], U = []);
                                    else {
                                        if (Math.abs(E - jb) >= lb || Math.abs(F - kb) >= lb) x.push(E), u.push(F), jb = E, kb = F;
                                        ya = E;
                                        Ea = F;
                                        ka = E;
                                        la = F;
                                        !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N));
                                        if ($a || void 0 != v.lineColor && v.lineColor != this.lineColorSwitched || void 0 != v.fillColors && v.fillColors != this.fillColorsSwitched || !isNaN(v.dashLength)) this.drawLineGraph(x, u, T, U), x = [E], u = [F], T = [], U = [], !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N)), m ? (Sa ? (this.lineColorSwitched = xa, this.fillColorsSwitched = wb) : (this.lineColorSwitched =
                                            Ja, this.fillColorsSwitched = Ra), void 0 === this.bulletColor && (this.bulletColorSwitched = xa)) : (this.lineColorSwitched = v.lineColor, this.fillColorsSwitched = v.fillColors, void 0 === this.bulletColor && (this.bulletColorSwitched = this.lineColorSwitched)), this.dashLengthSwitched = v.dashLength;
                                        v.gap && (this.drawLineGraph(x, u, T, U), x = [], u = [], T = [], U = [])
                                    }
                                    break;
                                case "smoothedLine":
                                    if (isNaN(W)) z || (this.drawSmoothedGraph(x, u, T, U), x = [], u = [], T = [], U = []);
                                    else {
                                        if (Math.abs(E - jb) >= lb || Math.abs(F - kb) >= lb) x.push(E), u.push(F), jb = E,
                                            kb = F;
                                        ya = E;
                                        Ea = F;
                                        ka = E;
                                        la = F;
                                        !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N));
                                        void 0 == v.lineColor && void 0 == v.fillColors && isNaN(v.dashLength) || (this.drawSmoothedGraph(x, u, T, U), x = [E], u = [F], T = [], U = [], !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N)), this.lineColorSwitched = v.lineColor, this.fillColorsSwitched = v.fillColors, this.dashLengthSwitched = v.dashLength);
                                        v.gap && (this.drawSmoothedGraph(x, u, T, U), x = [], u = [], T = [], U = [])
                                    }
                                    break;
                                case "step":
                                    if (!isNaN(W)) {
                                        t ? (isNaN(A) || (x.push(A), u.push(F - wa)), u.push(F - wa), x.push(E),
                                            u.push(F + Ga), x.push(E), !Ma || isNaN(N) || isNaN(O) || (isNaN(B) || (T.push(B), U.push(N - wa)), T.push(O), U.push(N - wa), T.push(O), U.push(N + Ga))) : (isNaN(y) || (u.push(y), x.push(E - wa)), x.push(E - wa), u.push(F), x.push(E + Ga), u.push(F), !Ma || isNaN(N) || isNaN(O) || (isNaN(D) || (T.push(O - wa), U.push(D)), T.push(O - wa), U.push(N), T.push(O + Ga), U.push(N)));
                                        A = E;
                                        y = F;
                                        B = O;
                                        D = N;
                                        ya = E;
                                        Ea = F;
                                        ka = E;
                                        la = F;
                                        if ($a || void 0 != v.lineColor || void 0 != v.fillColors || !isNaN(v.dashLength)) {
                                            var Db = x[x.length - 2],
                                                dc = u[u.length - 2];
                                            x.pop();
                                            u.pop();
                                            T.pop();
                                            U.pop();
                                            this.drawLineGraph(x, u, T, U);
                                            x = [Db];
                                            u = [dc];
                                            T = [];
                                            U = [];
                                            Ma && (T = [Db, Db + wa + Ga], U = [D, D]);
                                            t ? (u.push(F + Ga), x.push(E)) : (x.push(E + Ga), u.push(F));
                                            this.lineColorSwitched = v.lineColor;
                                            this.fillColorsSwitched = v.fillColors;
                                            this.dashLengthSwitched = v.dashLength;
                                            m && (Sa ? (this.lineColorSwitched = xa, this.fillColorsSwitched = wb) : (this.lineColorSwitched = Ja, this.fillColorsSwitched = Ra))
                                        }
                                        if (Ob || v.gap) A = y = NaN, this.drawLineGraph(x, u, T, U), x = [], u = [], T = [], U = []
                                    } else if (!z) {
                                        if (1 >= this.periodSpan || 1 < this.periodSpan && E - A > wa + Ga) A = y = NaN;
                                        this.drawLineGraph(x, u, T, U);
                                        x = [];
                                        u = [];
                                        T = [];
                                        U = []
                                    }
                                    break;
                                case "column":
                                    Ca = Ha;
                                    void 0 != v.lineColor && (Ca = v.lineColor);
                                    if (!isNaN(W)) {
                                        m || (v.isNegative = W < Pa ? !0 : !1);
                                        v.isNegative && (Ra && (Na = Ra), void 0 != Ja && (Ca = Ja));
                                        var Qb = f.min,
                                            Rb = f.max,
                                            ob = ua;
                                        isNaN(ob) && (ob = Pa);
                                        if (!(W < Qb && ob < Qb || W > Rb && ob > Rb)) {
                                            var Aa;
                                            if (t) {
                                                "3d" == M ? (R = F - (r / 2 - this.depthCount + 1) * (k + V) + V / 2 + Q * Z, S = O + H * Z, Aa = Z) : (R = Math.floor(F - (r / 2 - Z) * (k + V) + V / 2), S = O, Aa = 0);
                                                K = k;
                                                ya = E;
                                                Ea = R + k / 2;
                                                ka = E;
                                                la = R + k / 2;
                                                R + K > q + Aa * Q && (K = q - R + Aa * Q);
                                                R < Aa * Q && (K += R, R = Aa * Q);
                                                ba = E - O;
                                                var ec = S;
                                                S =
                                                    d.fitToBounds(S, 0, p);
                                                ba += ec - S;
                                                ba = d.fitToBounds(ba, -S, p - S + H * Z);
                                                v.labelIsNegative = 0 > ba ? !0 : !1;
                                                0 === ba && 1 / W === 1 / -0 && (v.labelIsNegative = !0);
                                                isNaN(G.percentWidthValue) || (K = this.height * G.percentWidthValue / 100, R = ja - K / 2, Ea = R + K / 2);
                                                K = d.roundTo(K, 2);
                                                ba = d.roundTo(ba, 2);
                                                R < q && 0 < K && (va = new d.Cuboid(h, ba, K, H - a.d3x, Q - a.d3y, Na, Va, da, Ca, X, ga, w, t, ea, bb, mb, aa), v.columnWidth = Math.abs(ba), v.columnHeight = Math.abs(K))
                                            } else {
                                                "3d" == M ? (S = E - (r / 2 - this.depthCount + 1) * (k + V) + V / 2 + H * Z, R = N + Q * Z, Aa = Z) : (S = E - (r / 2 - Z) * (k + V) + V / 2, R = N, Aa = 0);
                                                K = k;
                                                ya = S + k / 2;
                                                Ea = F;
                                                ka = S + k / 2;
                                                la = F;
                                                S + K > p + Aa * H && (K = p - S + Aa * H);
                                                S < Aa * H && (K += S - Aa * H, S = Aa * H);
                                                ba = F - N;
                                                v.labelIsNegative = 0 < ba ? !0 : !1;
                                                0 === ba && 1 / W !== 1 / Math.abs(W) && (v.labelIsNegative = !0);
                                                var fc = R;
                                                R = d.fitToBounds(R, this.dy, q);
                                                ba += fc - R;
                                                ba = d.fitToBounds(ba, -R + Q * Aa, q - R);
                                                isNaN(G.percentWidthValue) || (K = this.width * G.percentWidthValue / 100, S = ja - K / 2, ya = S + K / 2);
                                                K = d.roundTo(K, 2);
                                                ba = d.roundTo(ba, 2);
                                                S < p + Z * H && 0 < K && (this.showOnAxis && (R -= Q / 2), va = new d.Cuboid(h, K, ba, H - a.d3x, Q - a.d3y, Na, Va, da, Ca, this.lineAlpha, ga, w, t, ea, bb, mb, aa), v.columnHeight =
                                                    Math.abs(ba), v.columnWidth = Math.abs(K))
                                            }
                                        }
                                        if (va) {
                                            za = va.set;
                                            d.setCN(a, va.set, "graph-" + this.type);
                                            d.setCN(a, va.set, "graph-" + this.id);
                                            v.className && d.setCN(a, va.set, v.className, !0);
                                            v.columnGraphics = za;
                                            S = d.roundTo(S, 2);
                                            R = d.roundTo(R, 2);
                                            za.translate(S, R);
                                            (v.url || this.showHandOnHover) && za.setAttr("cursor", "pointer");
                                            if (!J) {
                                                "none" == M && (I = t ? (this.end + 1 - L) * C - c : C * L + c);
                                                "3d" == M && (t ? (I = (this.end + 1 - L) * C - c - 1E3 * this.depthCount, ya += H * Z, ka += H * Z, v.y += H * Z) : (I = (C - c) * (L + 1) + 1E3 * this.depthCount, Ea += Q * Z, la += Q * Z, v.y += Q * Z));
                                                if ("regular" == M || "100%" == M) I = t ? 0 < Ia.value ? (this.end + 1 - L) * C + c : (this.end + 1 - L) * C - c : 0 < Ia.value ? C * L + c : C * L - c;
                                                this.columnsArray.push({
                                                    column: va,
                                                    depth: I
                                                });
                                                v.x = t ? R + K / 2 : S + K / 2;
                                                this.ownColumns.push(va);
                                                this.animateColumns(va, L, E, O, F, N);
                                                this.addListeners(za, v);
                                                void 0 !== this.tabIndex && za.setAttr("tabindex", this.tabIndex)
                                            }
                                            this.columnsSet.push(za)
                                        }
                                    }
                                    break;
                                case "candlestick":
                                    if (!isNaN(ua) && !isNaN(W)) {
                                        var Xa, cb;
                                        Ca = Ha;
                                        void 0 != v.lineColor && (Ca = v.lineColor);
                                        ya = E;
                                        la = Ea = F;
                                        ka = E;
                                        if (t) {
                                            "open" == l && (ka = O);
                                            "high" == l && (ka = sa);
                                            "low" == l && (ka = qa);
                                            E = d.fitToBounds(E, 0, pa);
                                            O = d.fitToBounds(O, 0, pa);
                                            qa = d.fitToBounds(qa, 0, pa);
                                            sa = d.fitToBounds(sa, 0, pa);
                                            if (0 === E && 0 === O && 0 === qa && 0 === sa) continue;
                                            if (E == pa && O == pa && qa == pa && sa == pa) continue;
                                            R = F - k / 2;
                                            S = O;
                                            K = k;
                                            R + K > q && (K = q - R);
                                            0 > R && (K += R, R = 0);
                                            if (R < q && 0 < K) {
                                                var Eb, Fb;
                                                W > ua ? (Eb = [E, sa], Fb = [O, qa]) : (Eb = [O, sa], Fb = [E, qa]);
                                                !isNaN(sa) && !isNaN(qa) && F < q && 0 < F && (Xa = d.line(h, Eb, [F, F], Ca, X, da), cb = d.line(h, Fb, [F, F], Ca, X, da));
                                                ba = E - O;
                                                va = new d.Cuboid(h, ba, K, H, Q, Na, Ya, da, Ca, X, ga, w, t, ea, bb, mb, aa)
                                            }
                                        } else {
                                            "open" == l && (la =
                                                N);
                                            "high" == l && (la = ta);
                                            "low" == l && (la = ra);
                                            F = d.fitToBounds(F, 0, Fa);
                                            N = d.fitToBounds(N, 0, Fa);
                                            ra = d.fitToBounds(ra, 0, Fa);
                                            ta = d.fitToBounds(ta, 0, Fa);
                                            if (0 === F && 0 === N && 0 === ra && 0 === ta) continue;
                                            if (F == Fa && N == Fa && ra == Fa && ta == Fa) continue;
                                            S = E - k / 2;
                                            R = N + da / 2;
                                            K = k;
                                            S + K > p && (K = p - S);
                                            0 > S && (K += S, S = 0);
                                            ba = F - N;
                                            if (S < p && 0 < K) {
                                                Bb && W >= ua && (Va = 0);
                                                var va = new d.Cuboid(h, K, ba, H, Q, Na, Va, da, Ca, X, ga, w, t, ea, bb, mb, aa),
                                                    Gb, Hb;
                                                W > ua ? (Gb = [F, ta], Hb = [N, ra]) : (Gb = [N, ta], Hb = [F, ra]);
                                                !isNaN(ta) && !isNaN(ra) && E < p && 0 < E && (Xa = d.line(h, [E, E], Gb, Ca, X, da), cb = d.line(h, [E, E], Hb, Ca, X, da), d.setCN(a, Xa, this.bcn + "line-high"), v.className && d.setCN(a, Xa, v.className, !0), d.setCN(a, cb, this.bcn + "line-low"), v.className && d.setCN(a, cb, v.className, !0))
                                            }
                                        }
                                        va && (za = va.set, v.columnGraphics = za, fa.push(za), za.translate(S, R - da / 2), (v.url || this.showHandOnHover) && za.setAttr("cursor", "pointer"), Xa && (fa.push(Xa), fa.push(cb)), J || (v.x = t ? R + K / 2 : S + K / 2, this.animateColumns(va, L, E, O, F, N), this.addListeners(za, v), void 0 !== this.tabIndex && za.setAttr("tabindex", this.tabIndex)))
                                    }
                                    break;
                                case "ohlc":
                                    if (!(isNaN(ua) ||
                                            isNaN(zb) || isNaN(Ab) || isNaN(W))) {
                                        var Sb = h.set();
                                        fa.push(Sb);
                                        W < ua && (v.isNegative = !0, void 0 != Ja && (Ha = Ja));
                                        void 0 != v.lineColor && (Ha = v.lineColor);
                                        var pb, qb, rb;
                                        if (t) {
                                            la = F;
                                            ka = E;
                                            "open" == l && (ka = O);
                                            "high" == l && (ka = sa);
                                            "low" == l && (ka = qa);
                                            qa = d.fitToBounds(qa, 0, pa);
                                            sa = d.fitToBounds(sa, 0, pa);
                                            if (0 === E && 0 === O && 0 === qa && 0 === sa) continue;
                                            if (E == pa && O == pa && qa == pa && sa == pa) continue;
                                            var Ib = F - k / 2,
                                                Ib = d.fitToBounds(Ib, 0, q),
                                                Tb = d.fitToBounds(F, 0, q),
                                                Jb = F + k / 2,
                                                Jb = d.fitToBounds(Jb, 0, q);
                                            0 <= O && O <= pa && (qb = d.line(h, [O, O], [Ib, Tb], Ha, X,
                                                da, ea));
                                            0 < F && F < q && (pb = d.line(h, [qa, sa], [F, F], Ha, X, da, ea));
                                            0 <= E && E <= pa && (rb = d.line(h, [E, E], [Tb, Jb], Ha, X, da, ea))
                                        } else {
                                            la = F;
                                            "open" == l && (la = N);
                                            "high" == l && (la = ta);
                                            "low" == l && (la = ra);
                                            var ka = E,
                                                ra = d.fitToBounds(ra, 0, Fa),
                                                ta = d.fitToBounds(ta, 0, Fa),
                                                Kb = E - k / 2,
                                                Kb = d.fitToBounds(Kb, 0, p),
                                                Ub = d.fitToBounds(E, 0, p),
                                                Lb = E + k / 2,
                                                Lb = d.fitToBounds(Lb, 0, p);
                                            0 <= N && N <= Fa && (qb = d.line(h, [Kb, Ub], [N, N], Ha, X, da, ea));
                                            0 < E && E < p && (pb = d.line(h, [E, E], [ra, ta], Ha, X, da, ea));
                                            0 <= F && F <= Fa && (rb = d.line(h, [Ub, Lb], [F, F], Ha, X, da, ea))
                                        }
                                        fa.push(qb);
                                        fa.push(pb);
                                        fa.push(rb);
                                        d.setCN(a, qb, this.bcn + "stroke-open");
                                        d.setCN(a, rb, this.bcn + "stroke-close");
                                        d.setCN(a, pb, this.bcn + "stroke");
                                        v.className && d.setCN(a, Sb, v.className, !0);
                                        ya = E;
                                        Ea = F
                                    }
                            }
                            if (!J && !isNaN(W)) {
                                var Vb = this.hideBulletsCount;
                                if (this.end - this.start <= Vb || 0 === Vb) {
                                    var Wb = this.createBullet(v, ka, la, L),
                                        Xb = this.labelText;
                                    if (Xb && !isNaN(ya) && !isNaN(ya)) {
                                        var gc = this.createLabel(v, Xb),
                                            Yb = 0;
                                        Wb && (Yb = Wb.size);
                                        this.positionLabel(v, ya, Ea, gc, Yb)
                                    }
                                    if ("regular" == M || "100%" == M) {
                                        var Zb = f.totalText;
                                        if (Zb) {
                                            var Oa = this.createLabel(v,
                                                Zb, f.totalTextColor);
                                            d.setCN(a, Oa, this.bcn + "label-total");
                                            this.allBullets.push(Oa);
                                            if (Oa) {
                                                var $b = Oa.getBBox(),
                                                    ac = $b.width,
                                                    bc = $b.height,
                                                    db, eb, sb = f.totalTextOffset,
                                                    cc = f.totals[L];
                                                cc && cc.remove();
                                                var fb = 0;
                                                "column" != g && (fb = this.bulletSize);
                                                t ? (eb = Ea, db = 0 > W ? E - ac / 2 - 2 - fb - sb : E + ac / 2 + 3 + fb + sb) : (db = ya, eb = 0 > W ? F + bc / 2 + fb + sb : F - bc / 2 - 3 - fb - sb);
                                                Oa.translate(db, eb);
                                                f.totals[L] = Oa;
                                                t ? (0 > eb || eb > q) && Oa.remove() : (0 > db || db > p) && Oa.remove()
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    this.lastDataItem = v;
                    if ("line" == g || "step" == g || "smoothedLine" == g) "smoothedLine" == g ?
                        this.drawSmoothedGraph(x, u, T, U) : this.drawLineGraph(x, u, T, U), J || this.launchAnimation();
                    this.bulletsHidden && this.hideBullets();
                    this.customBulletsHidden && this.hideCustomBullets()
                },
                animateColumns: function(a, b) {
                    var c = this,
                        e = c.chart.startDuration;
                    0 < e && !c.animationPlayed && (c.seqAn ? (a.set.hide(), c.animationArray.push(a), e = setTimeout(function() {
                        c.animate.call(c)
                    }, e / (c.end - c.start + 1) * (b - c.start) * 1E3), c.timeOuts.push(e)) : c.animate(a), c.chart.animatable.push(a))
                },
                createLabel: function(a, b, c) {
                    var e = this.chart,
                        h = a.labelColor;
                    h || (h = this.color);
                    h || (h = e.color);
                    c && (h = c);
                    c = this.fontSize;
                    void 0 === c && (this.fontSize = c = e.fontSize);
                    var f = this.labelFunction;
                    b = e.formatString(b, a);
                    b = d.cleanFromEmpty(b);
                    f && (b = f(a, b));
                    if (void 0 !== b && "" !== b) return a = d.text(this.container, b, h, e.fontFamily, c), a.node.style.pointerEvents = "none", d.setCN(e, a, this.bcn + "label"), this.bulletSet.push(a), a
                },
                positiveClip: function(a) {
                    a.clipRect(this.pmx, this.pmy, this.pmw, this.pmh)
                },
                negativeClip: function(a) {
                    a.clipRect(this.nmx, this.nmy, this.nmw, this.nmh)
                },
                drawLineGraph: function(a, b, c, e) {
                    var h = this;
                    if (1 < a.length) {
                        var f = h.noRounding,
                            g = h.set,
                            k = h.chart,
                            l = h.container,
                            m = l.set(),
                            p = l.set();
                        g.push(p);
                        g.push(m);
                        var q = h.lineAlpha,
                            n = h.lineThickness,
                            g = h.fillAlphas,
                            t = h.lineColorR,
                            r = h.negativeLineAlpha;
                        isNaN(r) && (r = q);
                        var w = h.lineColorSwitched;
                        w && (t = w);
                        var w = h.fillColorsR,
                            z = h.fillColorsSwitched;
                        z && (w = z);
                        var x = h.dashLength;
                        (z = h.dashLengthSwitched) && (x = z);
                        var z = h.negativeLineColor,
                            u = h.negativeFillColors,
                            A = h.negativeFillAlphas,
                            y = h.baseCoord;
                        0 !== h.negativeBase && (y = h.valueAxis.getCoordinate(h.negativeBase,
                            f), y > h.height && (y = h.height), 0 > y && (y = 0));
                        q = d.line(l, a, b, t, q, n, x, !1, !0, f);
                        q.node.setAttribute("stroke-linejoin", "round");
                        d.setCN(k, q, h.bcn + "stroke");
                        m.push(q);
                        m.click(function(a) {
                            h.handleGraphEvent(a, "clickGraph")
                        }).mouseover(function(a) {
                            h.handleGraphEvent(a, "rollOverGraph")
                        }).mouseout(function(a) {
                            h.handleGraphEvent(a, "rollOutGraph")
                        }).touchmove(function(a) {
                            h.chart.handleMouseMove(a)
                        }).touchend(function(a) {
                            h.chart.handleTouchEnd(a)
                        });
                        void 0 === z || h.useNegativeColorIfDown || (n = d.line(l, a, b, z, r, n, x, !1, !0, f), n.node.setAttribute("stroke-linejoin", "round"), d.setCN(k, n, h.bcn + "stroke"), d.setCN(k, n, h.bcn + "stroke-negative"), p.push(n));
                        if (0 < g || 0 < A)
                            if (n = a.join(";").split(";"), r = b.join(";").split(";"), q = k.type, "serial" == q || "radar" == q ? 0 < c.length ? (c.reverse(), e.reverse(), n = a.concat(c), r = b.concat(e)) : "radar" == q ? (r.push(0), n.push(0)) : h.rotate ? (r.push(r[r.length - 1]), n.push(y), r.push(r[0]), n.push(y), r.push(r[0]), n.push(n[0])) : (n.push(n[n.length - 1]), r.push(y), n.push(n[0]), r.push(y), n.push(a[0]), r.push(r[0])) : "xy" ==
                                q && (b = h.fillToAxis) && (d.isString(b) && (b = k.getValueAxisById(b)), "H" == b.orientation ? (y = "top" == b.position ? 0 : b.height, n.push(n[n.length - 1]), r.push(y), n.push(n[0]), r.push(y), n.push(a[0]), r.push(r[0])) : (y = "left" == b.position ? 0 : b.width, r.push(r[r.length - 1]), n.push(y), r.push(r[0]), n.push(y), r.push(r[0]), n.push(n[0]))), a = h.gradientRotation, 0 < g && (b = d.polygon(l, n, r, w, g, 1, "#000", 0, a, f), b.pattern(h.pattern, NaN, k.path), d.setCN(k, b, h.bcn + "fill"), m.push(b)), u || void 0 !== z) isNaN(A) && (A = g), u || (u = z), f = d.polygon(l, n, r,
                                u, A, 1, "#000", 0, a, f), d.setCN(k, f, h.bcn + "fill"), d.setCN(k, f, h.bcn + "fill-negative"), f.pattern(h.pattern, NaN, k.path), p.push(f), p.click(function(a) {
                                h.handleGraphEvent(a, "clickGraph")
                            }).mouseover(function(a) {
                                h.handleGraphEvent(a, "rollOverGraph")
                            }).mouseout(function(a) {
                                h.handleGraphEvent(a, "rollOutGraph")
                            }).touchmove(function(a) {
                                h.chart.handleMouseMove(a)
                            }).touchend(function(a) {
                                h.chart.handleTouchEnd(a)
                            });
                        h.applyMask(p, m)
                    }
                },
                applyMask: function(a, b) {
                    var c = a.length();
                    "serial" != this.chart.type || this.scrollbar ||
                        (this.positiveClip(b), 0 < c && this.negativeClip(a))
                },
                drawSmoothedGraph: function(a, b, c, e) {
                    if (1 < a.length) {
                        var h = this.set,
                            f = this.chart,
                            g = this.container,
                            k = g.set(),
                            l = g.set();
                        h.push(l);
                        h.push(k);
                        var m = this.lineAlpha,
                            p = this.lineThickness,
                            h = this.dashLength,
                            q = this.fillAlphas,
                            n = this.lineColorR,
                            t = this.fillColorsR,
                            r = this.negativeLineColor,
                            w = this.negativeFillColors,
                            z = this.negativeFillAlphas,
                            x = this.baseCoord,
                            u = this.lineColorSwitched;
                        u && (n = u);
                        (u = this.fillColorsSwitched) && (t = u);
                        var A = this.negativeLineAlpha;
                        isNaN(A) &&
                            (A = m);
                        u = this.getGradRotation();
                        m = new d.Bezier(g, a, b, n, m, p, t, 0, h, void 0, u);
                        d.setCN(f, m, this.bcn + "stroke");
                        k.push(m.path);
                        void 0 !== r && (p = new d.Bezier(g, a, b, r, A, p, t, 0, h, void 0, u), d.setCN(f, p, this.bcn + "stroke"), d.setCN(f, p, this.bcn + "stroke-negative"), l.push(p.path));
                        0 < q && (p = a.join(";").split(";"), m = b.join(";").split(";"), n = "", 0 < c.length ? (c.push("M"), e.push("M"), c.reverse(), e.reverse(), p = a.concat(c), m = b.concat(e)) : (this.rotate ? (n += " L" + x + "," + b[b.length - 1], n += " L" + x + "," + b[0]) : (n += " L" + a[a.length - 1] + "," +
                            x, n += " L" + a[0] + "," + x), n += " L" + a[0] + "," + b[0]), a = new d.Bezier(g, p, m, NaN, 0, 0, t, q, h, n, u), d.setCN(f, a, this.bcn + "fill"), a.path.pattern(this.pattern, NaN, f.path), k.push(a.path), w || void 0 !== r) && (z || (z = q), w || (w = r), g = new d.Bezier(g, p, m, NaN, 0, 0, w, z, h, n, u), g.path.pattern(this.pattern, NaN, f.path), d.setCN(f, g, this.bcn + "fill"), d.setCN(f, g, this.bcn + "fill-negative"), l.push(g.path));
                        this.applyMask(l, k)
                    }
                },
                launchAnimation: function() {
                    var a = this,
                        b = a.chart.startDuration;
                    if (0 < b && !a.animationPlayed) {
                        var c = a.set,
                            e = a.bulletSet;
                        d.VML || (c.attr({
                            opacity: a.startAlpha
                        }), e.attr({
                            opacity: a.startAlpha
                        }));
                        c.hide();
                        e.hide();
                        a.seqAn ? (b = setTimeout(function() {
                            a.animateGraphs.call(a)
                        }, a.index * b * 1E3), a.timeOuts.push(b)) : a.animateGraphs()
                    }
                },
                animateGraphs: function() {
                    var a = this.chart,
                        b = this.set,
                        c = this.bulletSet,
                        e = this.x,
                        d = this.y;
                    b.show();
                    c.show();
                    var f = a.startDuration,
                        g = a.startEffect;
                    b && (this.rotate ? (b.translate(-1E3, d), c.translate(-1E3, d)) : (b.translate(e, -1E3), c.translate(e, -1E3)), b.animate({
                        opacity: 1,
                        translate: e + "," + d
                    }, f, g), c.animate({
                        opacity: 1,
                        translate: e + "," + d
                    }, f, g), a.animatable.push(b))
                },
                animate: function(a) {
                    var b = this.chart,
                        c = this.animationArray;
                    !a && 0 < c.length && (a = c[0], c.shift());
                    c = d[d.getEffect(b.startEffect)];
                    b = b.startDuration;
                    a && (this.rotate ? a.animateWidth(b, c) : a.animateHeight(b, c), a.set.show())
                },
                legendKeyColor: function() {
                    var a = this.legendColor,
                        b = this.lineAlpha;
                    void 0 === a && (a = this.lineColorR, 0 === b && (b = this.fillColorsR) && (a = "object" == typeof b ? b[0] : b));
                    return a
                },
                legendKeyAlpha: function() {
                    var a = this.legendAlpha;
                    void 0 === a && (a = this.lineAlpha,
                        this.fillAlphas > a && (a = this.fillAlphas), 0 === a && (a = this.bulletAlpha), 0 === a && (a = 1));
                    return a
                },
                createBullet: function(a, b, c) {
                    if (!isNaN(b) && !isNaN(c) && ("none" != this.bullet || this.customBullet || a.bullet || a.customBullet)) {
                        var e = this.chart,
                            h = this.container,
                            f = this.bulletOffset,
                            g = this.bulletSize;
                        isNaN(a.bulletSize) || (g = a.bulletSize);
                        var k = a.values.value,
                            l = this.maxValue,
                            m = this.minValue,
                            p = this.maxBulletSize,
                            q = this.minBulletSize;
                        isNaN(l) || (isNaN(k) || (g = (k - m) / (l - m) * (p - q) + q), m == l && (g = p));
                        l = g;
                        this.bulletAxis && (g = a.values.error,
                            isNaN(g) || (k = g), g = this.bulletAxis.stepWidth * k);
                        g < this.minBulletSize && (g = this.minBulletSize);
                        this.rotate ? b = a.isNegative ? b - f : b + f : c = a.isNegative ? c + f : c - f;
                        q = this.bulletColorR;
                        a.lineColor && void 0 === this.bulletColor && (this.bulletColorSwitched = a.lineColor);
                        this.bulletColorSwitched && (q = this.bulletColorSwitched);
                        a.isNegative && void 0 !== this.bulletColorNegative && (q = this.bulletColorNegative);
                        void 0 !== a.color && (q = a.color);
                        var n;
                        "xy" == e.type && this.valueField && (n = this.pattern, a.pattern && (n = a.pattern));
                        f = this.bullet;
                        a.bullet && (f = a.bullet);
                        var k = this.bulletBorderThickness,
                            m = this.bulletBorderColorR,
                            p = this.bulletBorderAlpha,
                            t = this.bulletAlpha;
                        m || (m = q);
                        this.useLineColorForBulletBorder && (m = this.lineColorR, a.isNegative && this.negativeLineColor && (m = this.negativeLineColor), this.lineColorSwitched && (m = this.lineColorSwitched));
                        var r = a.alpha;
                        isNaN(r) || (t = r);
                        n = d.bullet(h, f, g, q, t, k, m, p, l, 0, n, e.path);
                        l = this.customBullet;
                        a.customBullet && (l = a.customBullet);
                        l && (n && n.remove(), "function" == typeof l ? (l = new l, l.chart = e, a.bulletConfig &&
                            (l.availableSpace = c, l.graph = this, l.graphDataItem = a, l.bulletY = c, a.bulletConfig.minCoord = this.minCoord - c, l.bulletConfig = a.bulletConfig), l.write(h), n && l.showBullet && l.set.push(n), a.customBulletGraphics = l.cset, n = l.set) : (n = h.set(), l = h.image(l, 0, 0, g, g), n.push(l), this.centerCustomBullets && l.translate(-g / 2, -g / 2)));
                        if (n) {
                            (a.url || this.showHandOnHover) && n.setAttr("cursor", "pointer");
                            if ("serial" == e.type || "gantt" == e.type)
                                if (-.5 > b || b > this.width || c < -g / 2 || c > this.height) n.remove(), n = null;
                            n && (this.bulletSet.push(n),
                                n.translate(b, c), this.addListeners(n, a), this.allBullets.push(n));
                            a.bx = b;
                            a.by = c;
                            d.setCN(e, n, this.bcn + "bullet");
                            a.className && d.setCN(e, n, a.className, !0)
                        }
                        if (n) {
                            n.size = g || 0;
                            if (e = this.bulletHitAreaSize) h = d.circle(h, e, "#FFFFFF", .001, 0), h.translate(b, c), a.hitBullet = h, this.bulletSet.push(h), this.addListeners(h, a);
                            a.bulletGraphics = n;
                            void 0 !== this.tabIndex && n.setAttr("tabindex", this.tabIndex)
                        } else n = {
                            size: 0
                        };
                        n.graphDataItem = a;
                        return n
                    }
                },
                showBullets: function() {
                    var a = this.allBullets,
                        b;
                    this.bulletsHidden = !1;
                    for (b =
                        0; b < a.length; b++) a[b].show()
                },
                hideBullets: function() {
                    var a = this.allBullets,
                        b;
                    this.bulletsHidden = !0;
                    for (b = 0; b < a.length; b++) a[b].hide()
                },
                showCustomBullets: function() {
                    var a = this.allBullets,
                        b;
                    this.customBulletsHidden = !1;
                    for (b = 0; b < a.length; b++) {
                        var c = a[b].graphDataItem;
                        c && c.customBulletGraphics && c.customBulletGraphics.show()
                    }
                },
                hideCustomBullets: function() {
                    var a = this.allBullets,
                        b;
                    this.customBulletsHidden = !0;
                    for (b = 0; b < a.length; b++) {
                        var c = a[b].graphDataItem;
                        c && c.customBulletGraphics && c.customBulletGraphics.hide()
                    }
                },
                addListeners: function(a, b) {
                    var c = this;
                    a.mouseover(function(a) {
                        c.handleRollOver(b, a)
                    }).mouseout(function(a) {
                        c.handleRollOut(b, a)
                    }).touchend(function(a) {
                        c.handleRollOver(b, a);
                        c.chart.panEventsEnabled && c.handleClick(b, a)
                    }).touchstart(function(a) {
                        c.handleRollOver(b, a)
                    }).click(function(a) {
                        c.handleClick(b, a)
                    }).dblclick(function(a) {
                        c.handleDoubleClick(b, a)
                    }).contextmenu(function(a) {
                        c.handleRightClick(b, a)
                    });
                    var e = c.chart;
                    if (e.accessible && c.accessibleLabel) {
                        var d = e.formatString(c.accessibleLabel, b);
                        e.makeAccessible(a,
                            d)
                    }
                },
                handleRollOver: function(a, b) {
                    this.handleGraphEvent(b, "rollOverGraph");
                    if (a) {
                        var c = this.chart;
                        a.bulletConfig && (c.isRolledOverBullet = !0);
                        var e = {
                            type: "rollOverGraphItem",
                            item: a,
                            index: a.index,
                            graph: this,
                            target: this,
                            chart: this.chart,
                            event: b
                        };
                        this.fire(e);
                        c.fire(e);
                        clearTimeout(c.hoverInt);
                        (c = c.chartCursor) && c.valueBalloonsEnabled || this.showGraphBalloon(a, "V", !0)
                    }
                },
                handleRollOut: function(a, b) {
                    var c = this.chart;
                    if (a) {
                        var e = {
                            type: "rollOutGraphItem",
                            item: a,
                            index: a.index,
                            graph: this,
                            target: this,
                            chart: this.chart,
                            event: b
                        };
                        this.fire(e);
                        c.fire(e);
                        c.isRolledOverBullet = !1
                    }
                    this.handleGraphEvent(b, "rollOutGraph");
                    (c = c.chartCursor) && c.valueBalloonsEnabled || this.hideBalloon()
                },
                handleClick: function(a, b) {
                    if (!this.chart.checkTouchMoved() && this.chart.checkTouchDuration(b)) {
                        if (a) {
                            var c = {
                                type: "clickGraphItem",
                                item: a,
                                index: a.index,
                                graph: this,
                                target: this,
                                chart: this.chart,
                                event: b
                            };
                            this.fire(c);
                            this.chart.fire(c);
                            d.getURL(a.url, this.urlTarget)
                        }
                        this.handleGraphEvent(b, "clickGraph")
                    }
                },
                handleGraphEvent: function(a, b) {
                    var c = {
                        type: b,
                        graph: this,
                        target: this,
                        chart: this.chart,
                        event: a
                    };
                    this.fire(c);
                    this.chart.fire(c)
                },
                handleRightClick: function(a, b) {
                    if (a) {
                        var c = {
                            type: "rightClickGraphItem",
                            item: a,
                            index: a.index,
                            graph: this,
                            target: this,
                            chart: this.chart,
                            event: b
                        };
                        this.fire(c);
                        this.chart.fire(c)
                    }
                },
                handleDoubleClick: function(a, b) {
                    if (a) {
                        var c = {
                            type: "doubleClickGraphItem",
                            item: a,
                            index: a.index,
                            graph: this,
                            target: this,
                            chart: this.chart,
                            event: b
                        };
                        this.fire(c);
                        this.chart.fire(c)
                    }
                },
                zoom: function(a, b) {
                    this.start = a;
                    this.end = b;
                    this.draw()
                },
                changeOpacity: function(a) {
                    var b =
                        this.set;
                    b && b.setAttr("opacity", a);
                    if (b = this.ownColumns) {
                        var c;
                        for (c = 0; c < b.length; c++) {
                            var e = b[c].set;
                            e && e.setAttr("opacity", a)
                        }
                    }(b = this.bulletSet) && b.setAttr("opacity", a)
                },
                destroy: function() {
                    d.remove(this.set);
                    d.remove(this.bulletSet);
                    var a = this.timeOuts;
                    if (a) {
                        var b;
                        for (b = 0; b < a.length; b++) clearTimeout(a[b])
                    }
                    this.timeOuts = []
                },
                createBalloon: function() {
                    var a = this.chart;
                    this.balloon ? this.balloon.destroy && this.balloon.destroy() : this.balloon = {};
                    var b = this.balloon;
                    d.extend(b, a.balloon, !0);
                    b.chart = a;
                    b.mainSet =
                        a.plotBalloonsSet;
                    b.className = this.id
                },
                hideBalloon: function() {
                    var a = this,
                        b = a.chart;
                    b.chartCursor ? b.chartCursor.valueBalloonsEnabled || b.hideBalloon() : b.hideBalloon();
                    clearTimeout(a.hoverInt);
                    a.hoverInt = setTimeout(function() {
                        a.hideBalloonReal.call(a)
                    }, b.hideBalloonTime)
                },
                hideBalloonReal: function() {
                    this.balloon && this.balloon.hide();
                    this.fixBulletSize()
                },
                fixBulletSize: function() {
                    if (d.isModern) {
                        var a = this.resizedDItem;
                        if (a) {
                            var b = a.bulletGraphics;
                            if (b && !b.doNotScale) {
                                b.translate(a.bx, a.by, 1);
                                var c = this.bulletAlpha;
                                isNaN(a.alpha) || (c = a.alpha);
                                b.setAttr("fill-opacity", c);
                                b.setAttr("stroke-opacity", this.bulletBorderAlpha)
                            }
                        }
                        this.resizedDItem = null
                    }
                },
                showGraphBalloon: function(a, b, c, e, h) {
                    if (a) {
                        var f = this.chart,
                            g = this.balloon,
                            k = 0,
                            l = 0,
                            m = f.chartCursor,
                            p = !0;
                        m ? m.valueBalloonsEnabled || (g = f.balloon, k = this.x, l = this.y, p = !1) : (g = f.balloon, k = this.x, l = this.y, p = !1);
                        clearTimeout(this.hoverInt);
                        if (f.chartCursor && (this.currentDataItem = a, "serial" == f.type && f.isRolledOverBullet && f.chartCursor.valueBalloonsEnabled)) {
                            this.hideBalloonReal();
                            return
                        }
                        this.resizeBullet(a, e, h);
                        if (g && g.enabled && this.showBalloon && !this.hidden) {
                            var m = f.formatString(this.balloonText, a, !0),
                                q = this.balloonFunction;
                            q && (m = q(a, a.graph));
                            m && (m = d.cleanFromEmpty(m));
                            m && "" !== m ? (e = f.getBalloonColor(this, a), g.drop || (g.pointerOrientation = b), b = a.x, h = a.y, f.rotate && (b = a.y, h = a.x), b += k, h += l, isNaN(b) || isNaN(h) ? this.hideBalloonReal() : (a = this.width, q = this.height, p && g.setBounds(k, l, a + k, q + l), g.changeColor(e), g.setPosition(b, h), g.fixPrevious(), g.fixedPosition && (c = !1), !c && "radar" != f.type &&
                                (b < k || b > a + k || h < l - .5 || h > q + l) ? (g.showBalloon(m), g.hide(0)) : (g.followCursor(c), g.showBalloon(m)))) : (this.hideBalloonReal(), g.hide(), this.resizeBullet(a, e, h))
                        } else this.hideBalloonReal()
                    }
                },
                resizeBullet: function(a, b, c) {
                    this.fixBulletSize();
                    if (a && d.isModern && (1 != b || !isNaN(c))) {
                        var e = a.bulletGraphics;
                        e && !e.doNotScale && (e.translate(a.bx, a.by, b), isNaN(c) || (e.setAttr("fill-opacity", c), e.setAttr("stroke-opacity", c)), this.resizedDItem = a)
                    }
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.ChartCursor = d.Class({
                construct: function(a) {
                    this.cname = "ChartCursor";
                    this.createEvents("changed", "zoomed", "onHideCursor", "onShowCursor", "draw", "selected", "moved", "panning", "zoomStarted");
                    this.enabled = !0;
                    this.cursorAlpha = 1;
                    this.selectionAlpha = .2;
                    this.cursorColor = "#CC0000";
                    this.categoryBalloonAlpha = 1;
                    this.color = "#FFFFFF";
                    this.type = "cursor";
                    this.zoomed = !1;
                    this.zoomable = !0;
                    this.pan = !1;
                    this.categoryBalloonDateFormat = "MMM DD, YYYY";
                    this.categoryBalloonText = "[[category]]";
                    this.categoryBalloonEnabled = this.valueBalloonsEnabled = !0;
                    this.rolledOver = !1;
                    this.cursorPosition = "middle";
                    this.bulletsEnabled = this.skipZoomDispatch = !1;
                    this.bulletSize = 8;
                    this.selectWithoutZooming = this.oneBalloonOnly = !1;
                    this.graphBulletSize = 1.7;
                    this.animationDuration = .3;
                    this.zooming = !1;
                    this.adjustment = 0;
                    this.avoidBalloonOverlapping = !0;
                    this.leaveCursor = !1;
                    this.leaveAfterTouch = !0;
                    this.valueZoomable = !1;
                    this.balloonPointerOrientation = "horizontal";
                    this.hLineEnabled = this.vLineEnabled = !0;
                    this.vZoomEnabled =
                        this.hZoomEnabled = !1;
                    d.applyTheme(this, a, this.cname)
                },
                draw: function() {
                    this.destroy();
                    var a = this.chart;
                    a.panRequired = !0;
                    var b = a.container;
                    this.rotate = a.rotate;
                    this.container = b;
                    this.prevLineHeight = this.prevLineWidth = NaN;
                    b = b.set();
                    b.translate(this.x, this.y);
                    this.set = b;
                    a.cursorSet.push(b);
                    this.createElements();
                    d.isString(this.limitToGraph) && (this.limitToGraph = d.getObjById(a.graphs, this.limitToGraph), this.fullWidth = !1, this.cursorPosition = "middle");
                    this.pointer = this.balloonPointerOrientation.substr(0, 1).toUpperCase();
                    this.isHidden = !1;
                    this.hideLines();
                    this.valueLineAxis || (this.valueLineAxis = a.valueAxes[0])
                },
                createElements: function() {
                    var a = this,
                        b = a.chart,
                        c = b.dx,
                        e = b.dy,
                        h = a.width,
                        f = a.height,
                        g, k, l = a.cursorAlpha,
                        m = a.valueLineAlpha;
                    a.rotate ? (g = m, k = l) : (k = m, g = l);
                    "xy" == b.type && (k = l, void 0 !== m && (k = m), g = l);
                    a.vvLine = d.line(a.container, [c, 0, 0], [e, 0, f], a.cursorColor, g, 1);
                    d.setCN(b, a.vvLine, "cursor-line");
                    d.setCN(b, a.vvLine, "cursor-line-vertical");
                    a.hhLine = d.line(a.container, [0, h, h + c], [0, 0, e], a.cursorColor, k, 1);
                    d.setCN(b, a.hhLine,
                        "cursor-line");
                    d.setCN(b, a.hhLine, "cursor-line-horizontal");
                    a.vLine = a.rotate ? a.vvLine : a.hhLine;
                    a.set.push(a.vvLine);
                    a.set.push(a.hhLine);
                    a.set.node.style.pointerEvents = "none";
                    a.fullLines = a.container.set();
                    b = b.cursorLineSet;
                    b.push(a.fullLines);
                    b.translate(a.x, a.y);
                    b.clipRect(-1, -1, h + 2, f + 2);
                    void 0 !== a.tabIndex && (b.setAttr("tabindex", a.tabIndex), b.keyup(function(b) {
                        a.handleKeys(b)
                    }).focus(function(b) {
                        a.showCursor()
                    }).blur(function(b) {
                        a.hideCursor()
                    }));
                    a.set.clipRect(0, 0, h, f)
                },
                handleKeys: function(a) {
                    var b =
                        this.prevIndex,
                        c = this.chart;
                    if (c) {
                        var e = c.chartData;
                        e && (isNaN(b) && (b = e.length - 1), 37 != a.keyCode && 40 != a.keyCode || b--, 39 != a.keyCode && 38 != a.keyCode || b++, b = d.fitToBounds(b, c.startIndex, c.endIndex), (a = this.chart.chartData[b]) && this.setPosition(a.x.categoryAxis), this.prevIndex = b)
                    }
                },
                update: function() {
                    var a = this.chart;
                    if (a) {
                        var b = a.mouseX - this.x,
                            c = a.mouseY - this.y;
                        this.mouseX = b;
                        this.mouseY = c;
                        this.mouse2X = a.mouse2X - this.x;
                        this.mouse2Y = a.mouse2Y - this.y;
                        var e;
                        if (a.chartData && 0 < a.chartData.length) {
                            this.mouseIsOver() ?
                                (this.hideGraphBalloons = !1, this.rolledOver = e = !0, this.updateDrawing(), this.vvLine && isNaN(this.fx) && (a.rotate || !this.limitToGraph) && this.vvLine.translate(b, 0), !this.hhLine || !isNaN(this.fy) || a.rotate && this.limitToGraph || this.hhLine.translate(0, c), isNaN(this.mouse2X) ? this.dispatchMovedEvent(b, c) : e = !1) : this.forceShow || this.hideCursor();
                            if (this.zooming) {
                                if (!isNaN(this.mouse2X)) {
                                    isNaN(this.mouse2X0) || this.dispatchPanEvent();
                                    return
                                }
                                if (this.pan) {
                                    this.dispatchPanEvent();
                                    return
                                }(this.hZoomEnabled || this.vZoomEnabled) &&
                                this.zooming && this.updateSelection()
                            }
                            e && this.showCursor()
                        }
                    }
                },
                updateDrawing: function() {
                    this.drawing && this.chart.setMouseCursor("crosshair");
                    if (this.drawingNow && (d.remove(this.drawingLine), 1 < Math.abs(this.drawStartX - this.mouseX) || 1 < Math.abs(this.drawStartY - this.mouseY))) {
                        var a = this.chart,
                            b = a.marginTop,
                            a = a.marginLeft;
                        this.drawingLine = d.line(this.container, [this.drawStartX + a, this.mouseX + a], [this.drawStartY + b, this.mouseY + b], this.cursorColor, 1, 1)
                    }
                },
                fixWidth: function(a) {
                    if (this.fullWidth && this.prevLineWidth !=
                        a) {
                        var b = this.vvLine,
                            c = 0;
                        b && (b.remove(), c = b.x);
                        b = this.container.set();
                        b.translate(c, 0);
                        c = d.rect(this.container, a, this.height, this.cursorColor, this.cursorAlpha, this.cursorAlpha, this.cursorColor);
                        d.setCN(this.chart, c, "cursor-fill");
                        c.translate(-a / 2 - 1, 0);
                        b.push(c);
                        this.vvLine = b;
                        this.fullLines.push(b);
                        this.prevLineWidth = a
                    }
                },
                fixHeight: function(a) {
                    if (this.fullWidth && this.prevLineHeight != a) {
                        var b = this.hhLine,
                            c = 0;
                        b && (b.remove(), c = b.y);
                        b = this.container.set();
                        b.translate(0, c);
                        c = d.rect(this.container, this.width,
                            a, this.cursorColor, this.cursorAlpha);
                        c.translate(0, -a / 2);
                        b.push(c);
                        this.fullLines.push(b);
                        this.hhLine = b;
                        this.prevLineHeight = a
                    }
                },
                fixVLine: function(a, b) {
                    if (!isNaN(a)) {
                        if (isNaN(this.prevLineX)) {
                            var c = 0,
                                e = this.mouseX;
                            if (this.limitToGraph) {
                                var d = this.chart.categoryAxis;
                                d && (this.chart.rotate || (c = "bottom" == d.position ? this.height : -this.height), e = a)
                            }
                            this.vvLine.translate(e, c)
                        } else this.prevLineX != a && this.vvLine.translate(this.prevLineX, this.prevLineY);
                        this.fx = a;
                        this.prevLineX != a && (c = this.animationDuration,
                            this.zooming && (c = 0), this.vvLine.stop(), this.vvLine.animate({
                                translate: a + "," + b
                            }, c, "easeOutSine"), this.prevLineX = a, this.prevLineY = b)
                    }
                },
                fixHLine: function(a, b) {
                    if (!isNaN(a)) {
                        if (isNaN(this.prevLineY)) {
                            var c = 0,
                                e = this.mouseY;
                            if (this.limitToGraph) {
                                var d = this.chart.categoryAxis;
                                d && (this.chart.rotate && (c = "right" == d.position ? this.width : -this.width), e = a)
                            }
                            this.hhLine.translate(c, e)
                        } else this.prevLineY != a && this.hhLine.translate(this.prevLineX, this.prevLineY);
                        this.fy = a;
                        this.prevLineY != a && (c = this.animationDuration,
                            this.zooming && (c = 0), this.hhLine.stop(), this.hhLine.animate({
                                translate: b + "," + a
                            }, c, "easeOutSine"), this.prevLineY = a, this.prevLineX = b)
                    }
                },
                hideCursor: function(a) {
                    this.forceShow = !1;
                    this.chart.wasTouched && this.leaveAfterTouch || this.isHidden || this.leaveCursor || (this.hideCursorReal(), a ? this.chart.handleCursorHide() : this.fire({
                        target: this,
                        chart: this.chart,
                        type: "onHideCursor"
                    }), this.chart.setMouseCursor("auto"))
                },
                hideCursorReal: function() {
                    this.hideLines();
                    this.isHidden = !0;
                    this.index = this.prevLineY = this.prevLineX =
                        this.mouseY0 = this.mouseX0 = this.fy = this.fx = NaN
                },
                hideLines: function() {
                    this.vvLine && this.vvLine.hide();
                    this.hhLine && this.hhLine.hide();
                    this.fullLines && this.fullLines.hide();
                    this.isHidden = !0;
                    this.chart.handleCursorHide()
                },
                showCursor: function(a) {
                    !this.drawing && this.enabled && (this.vLineEnabled && this.vvLine && this.vvLine.show(), this.hLineEnabled && this.hhLine && this.hhLine.show(), this.isHidden = !1, this.updateFullLine(), a || this.fire({
                        target: this,
                        chart: this.chart,
                        type: "onShowCursor"
                    }), this.pan && this.chart.setMouseCursor("move"))
                },
                updateFullLine: function() {
                    this.zooming && this.fullWidth && this.selection && (this.rotate ? 0 < this.selection.height && this.hhLine.hide() : 0 < this.selection.width && this.vvLine.hide())
                },
                updateSelection: function() {
                    if (!this.pan && this.enabled) {
                        var a = this.mouseX,
                            b = this.mouseY;
                        isNaN(this.fx) || (a = this.fx);
                        isNaN(this.fy) || (b = this.fy);
                        this.clearSelection();
                        var c = this.mouseX0,
                            e = this.mouseY0,
                            h = this.width,
                            f = this.height,
                            a = d.fitToBounds(a, 0, h),
                            b = d.fitToBounds(b, 0, f),
                            g;
                        a < c && (g = a, a = c, c = g);
                        b < e && (g = b, b = e, e = g);
                        this.hZoomEnabled ?
                            h = a - c : c = 0;
                        this.vZoomEnabled ? f = b - e : e = 0;
                        isNaN(this.mouse2X) && 0 < Math.abs(h) && 0 < Math.abs(f) && (a = this.chart, b = d.rect(this.container, h, f, this.cursorColor, this.selectionAlpha), d.setCN(a, b, "cursor-selection"), b.width = h, b.height = f, b.translate(c, e), this.set.push(b), this.selection = b);
                        this.updateFullLine()
                    }
                },
                mouseIsOver: function() {
                    var a = this.mouseX,
                        b = this.mouseY;
                    if (this.justReleased) return this.justReleased = !1, !0;
                    if (this.mouseIsDown) return !0;
                    if (!this.chart.mouseIsOver) return this.handleMouseOut(), !1;
                    if (0 < a &&
                        a < this.width && 0 < b && b < this.height) return !0;
                    this.handleMouseOut()
                },
                fixPosition: function() {
                    this.prevY = this.prevX = NaN
                },
                handleMouseDown: function() {
                    this.update();
                    if (this.mouseIsOver())
                        if (this.mouseIsDown = !0, this.mouseX0 = this.mouseX, this.mouseY0 = this.mouseY, this.mouse2X0 = this.mouse2X, this.mouse2Y0 = this.mouse2Y, this.drawing) this.drawStartY = this.mouseY, this.drawStartX = this.mouseX, this.drawingNow = !0;
                        else if (this.dispatchMovedEvent(this.mouseX, this.mouseY), !this.pan && isNaN(this.mouse2X0) && (isNaN(this.fx) || (this.mouseX0 =
                            this.fx), isNaN(this.fy) || (this.mouseY0 = this.fy)), this.hZoomEnabled || this.vZoomEnabled) {
                        this.zooming = !0;
                        var a = {
                            chart: this.chart,
                            target: this,
                            type: "zoomStarted"
                        };
                        a.x = this.mouseX / this.width;
                        a.y = this.mouseY / this.height;
                        this.index0 = a.index = this.index;
                        this.timestamp0 = this.timestamp;
                        this.fire(a)
                    }
                },
                registerInitialMouse: function() {},
                handleReleaseOutside: function() {
                    this.mouseIsDown = !1;
                    if (this.drawingNow) {
                        this.drawingNow = !1;
                        d.remove(this.drawingLine);
                        var a = this.drawStartX,
                            b = this.drawStartY,
                            c = this.mouseX,
                            e = this.mouseY,
                            h = this.chart;
                        (2 < Math.abs(a - c) || 2 < Math.abs(b - e)) && this.fire({
                            type: "draw",
                            target: this,
                            chart: h,
                            initialX: a,
                            initialY: b,
                            finalX: c,
                            finalY: e
                        })
                    }
                    this.zooming && (this.zooming = !1, this.selectWithoutZooming ? this.dispatchZoomEvent("selected") : (this.hZoomEnabled || this.vZoomEnabled) && this.dispatchZoomEvent("zoomed"), this.rolledOver && this.dispatchMovedEvent(this.mouseX, this.mouseY));
                    this.mouse2Y0 = this.mouse2X0 = this.mouseY0 = this.mouseX0 = NaN
                },
                dispatchZoomEvent: function(a) {
                    if (!this.pan) {
                        var b = this.selection;
                        if (b && 3 < Math.abs(b.width) &&
                            3 < Math.abs(b.height)) {
                            var c = Math.min(this.index, this.index0),
                                e = Math.max(this.index, this.index0),
                                d = c,
                                f = e,
                                g = this.chart,
                                k = g.chartData,
                                l = g.categoryAxis;
                            l && l.parseDates && !l.equalSpacing && (d = k[c] ? k[c].time : Math.min(this.timestamp0, this.timestamp), f = k[e] ? g.getEndTime(k[e].time) : Math.max(this.timestamp0, this.timestamp));
                            var b = {
                                    type: a,
                                    chart: this.chart,
                                    target: this,
                                    end: f,
                                    start: d,
                                    startIndex: c,
                                    endIndex: e,
                                    selectionHeight: b.height,
                                    selectionWidth: b.width,
                                    selectionY: b.y,
                                    selectionX: b.x
                                },
                                m;
                            this.hZoomEnabled && 4 < Math.abs(this.mouseX0 -
                                this.mouseX) && (b.startX = this.mouseX0 / this.width, b.endX = this.mouseX / this.width, m = !0);
                            this.vZoomEnabled && 4 < Math.abs(this.mouseY0 - this.mouseY) && (b.startY = 1 - this.mouseY0 / this.height, b.endY = 1 - this.mouseY / this.height, m = !0);
                            m && (this.prevY = this.prevX = NaN, this.fire(b), "selected" != a && this.clearSelection());
                            this.hideCursor()
                        }
                    }
                },
                dispatchMovedEvent: function(a, b, c, e) {
                    a = Math.round(a);
                    b = Math.round(b);
                    if (!this.isHidden && (a != this.prevX || b != this.prevY || "changed" == c)) {
                        c || (c = "moved");
                        var d = this.fx,
                            f = this.fy;
                        isNaN(d) &&
                            (d = a);
                        isNaN(f) && (f = b);
                        var g = !1;
                        this.zooming && this.pan && (g = !0);
                        g = {
                            hidden: this.isHidden,
                            type: c,
                            chart: this.chart,
                            target: this,
                            x: a,
                            y: b,
                            finalX: d,
                            finalY: f,
                            zooming: this.zooming,
                            panning: g,
                            mostCloseGraph: this.mostCloseGraph,
                            index: this.index,
                            skip: e,
                            hideBalloons: this.hideGraphBalloons
                        };
                        this.prevIndex = this.index;
                        this.rotate ? (g.position = b, g.finalPosition = f) : (g.position = a, g.finalPosition = d);
                        this.prevX = a;
                        this.prevY = b;
                        e ? this.chart.handleCursorMove(g) : (this.fire(g), "changed" == c && this.chart.fire(g))
                    }
                },
                dispatchPanEvent: function() {
                    if (this.mouseIsDown) {
                        var a =
                            d.roundTo((this.mouseX - this.mouseX0) / this.width, 3),
                            b = d.roundTo((this.mouseY - this.mouseY0) / this.height, 3),
                            c = d.roundTo((this.mouse2X - this.mouse2X0) / this.width, 3),
                            e = d.roundTo((this.mouse2Y - this.mouse2Y0) / this.height, 2),
                            h = !1;
                        0 !== Math.abs(a) && 0 !== Math.abs(b) && (h = !0);
                        if (this.prevDeltaX == a || this.prevDeltaY == b) h = !1;
                        isNaN(c) || isNaN(e) || (0 !== Math.abs(c) && 0 !== Math.abs(e) && (h = !0), this.prevDelta2X != c && this.prevDelta2Y != e) || (h = !1);
                        h && (this.hideLines(), this.fire({
                            type: "panning",
                            chart: this.chart,
                            target: this,
                            deltaX: a,
                            deltaY: b,
                            delta2X: c,
                            delta2Y: e,
                            index: this.index
                        }), this.prevDeltaX = a, this.prevDeltaY = b, this.prevDelta2X = c, this.prevDelta2Y = e)
                    }
                },
                clearSelection: function() {
                    var a = this.selection;
                    a && (a.width = 0, a.height = 0, a.remove())
                },
                destroy: function() {
                    this.clear();
                    d.remove(this.selection);
                    this.selection = null;
                    clearTimeout(this.syncTO);
                    d.remove(this.set)
                },
                clear: function() {},
                setTimestamp: function(a) {
                    this.timestamp = a
                },
                setIndex: function(a, b) {
                    a != this.index && (this.index = a, b || this.isHidden || this.dispatchMovedEvent(this.mouseX,
                        this.mouseY, "changed"))
                },
                handleMouseOut: function() {
                    this.enabled && this.rolledOver && (this.leaveCursor || this.setIndex(void 0), this.forceShow = !1, this.hideCursor(), this.rolledOver = !1)
                },
                showCursorAt: function(a) {
                    var b = this.chart.categoryAxis;
                    b && this.setPosition(b.categoryToCoordinate(a), a)
                },
                setPosition: function(a, b) {
                    var c = this.chart,
                        e = c.categoryAxis;
                    if (e) {
                        var d, f;
                        void 0 === b && (b = e.coordinateToValue(a));
                        e.showBalloonAt(b, a);
                        this.forceShow = !0;
                        e.stickBalloonToCategory ? c.rotate ? this.fixHLine(a, 0) : this.fixVLine(a,
                            0) : (this.showCursor(), c.rotate ? this.hhLine.translate(0, a) : this.vvLine.translate(a, 0));
                        c.rotate ? d = a : f = a;
                        c.rotate ? (this.vvLine && this.vvLine.hide(), this.hhLine && this.hhLine.show()) : (this.hhLine && this.hhLine.hide(), this.vvLine && this.vvLine.show());
                        this.updateFullLine();
                        this.isHidden = !1;
                        this.dispatchMovedEvent(f, d, "moved", !0)
                    }
                },
                enableDrawing: function(a) {
                    this.enabled = !a;
                    this.hideCursor();
                    this.drawing = a
                },
                syncWithCursor: function(a, b) {
                    clearTimeout(this.syncTO);
                    a && (a.isHidden ? this.hideCursor(!0) : this.syncWithCursorReal(a,
                        b))
                },
                isZooming: function(a) {
                    this.zooming = a
                },
                syncWithCursorReal: function(a, b) {
                    var c = a.vvLine,
                        e = a.hhLine;
                    this.index = a.index;
                    this.forceShow = !0;
                    this.zooming && this.pan || this.showCursor(!0);
                    this.hideGraphBalloons = b;
                    this.justReleased = a.justReleased;
                    this.zooming = a.zooming;
                    this.index0 = a.index0;
                    this.mouseX0 = a.mouseX0;
                    this.mouseY0 = a.mouseY0;
                    this.mouse2X0 = a.mouse2X0;
                    this.mouse2Y0 = a.mouse2Y0;
                    this.timestamp0 = a.timestamp0;
                    this.prevDeltaX = a.prevDeltaX;
                    this.prevDeltaY = a.prevDeltaY;
                    this.prevDelta2X = a.prevDelta2X;
                    this.prevDelta2Y =
                        a.prevDelta2Y;
                    this.fx = a.fx;
                    this.fy = a.fy;
                    a.zooming && this.updateSelection();
                    var d = a.mouseX,
                        f = a.mouseY;
                    this.rotate ? (d = NaN, this.vvLine && this.vvLine.hide(), this.hhLine && e && (isNaN(a.fy) ? this.hhLine.translate(0, a.mouseY) : this.fixHLine(a.fy, 0))) : (f = NaN, this.hhLine && this.hhLine.hide(), this.vvLine && c && (isNaN(a.fx) ? this.vvLine.translate(a.mouseX, 0) : this.fixVLine(a.fx, 0)));
                    this.dispatchMovedEvent(d, f, "moved", !0)
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.SimpleChartScrollbar = d.Class({
                construct: function(a) {
                    this.createEvents("zoomed", "zoomStarted", "zoomEnded");
                    this.backgroundColor = "#D4D4D4";
                    this.backgroundAlpha = 1;
                    this.selectedBackgroundColor = "#EFEFEF";
                    this.scrollDuration = this.selectedBackgroundAlpha = 1;
                    this.resizeEnabled = !0;
                    this.hideResizeGrips = !1;
                    this.scrollbarHeight = 20;
                    this.updateOnReleaseOnly = !1;
                    9 > document.documentMode && (this.updateOnReleaseOnly = !0);
                    this.dragIconHeight = this.dragIconWidth = 35;
                    this.dragIcon = "dragIconRoundBig";
                    this.dragCursorHover = "cursor: move; cursor: grab; cursor: -moz-grab; cursor: -webkit-grab;";
                    this.dragCursorDown = "cursor: move; cursor: grab; cursor: -moz-grabbing; cursor: -webkit-grabbing;";
                    this.vResizeCursor = "ns-resize";
                    this.hResizeCursor = "ew-resize";
                    this.enabled = !0;
                    this.percentStart = this.offset = 0;
                    this.percentEnd = 1;
                    d.applyTheme(this, a, "SimpleChartScrollbar")
                },
                getPercents: function() {
                    var a = this.getDBox(),
                        b = a.x,
                        c = a.y,
                        e = a.width,
                        a = a.height;
                    this.rotate ? (b = 1 - c / this.height, c = 1 - (c + a) / this.height) : (c = b / this.width,
                        b = (b + e) / this.width);
                    this.percentStart = c;
                    this.percentEnd = b
                },
                draw: function() {
                    var a = this;
                    a.destroy();
                    if (a.enabled) {
                        var b = a.chart.container,
                            c = a.rotate,
                            e = a.chart;
                        e.panRequired = !0;
                        var h = b.set();
                        a.set = h;
                        c ? d.setCN(e, h, "scrollbar-vertical") : d.setCN(e, h, "scrollbar-horizontal");
                        e.scrollbarsSet.push(h);
                        var f, g;
                        c ? (f = a.scrollbarHeight, g = e.plotAreaHeight) : (g = a.scrollbarHeight, f = e.plotAreaWidth);
                        a.width = f;
                        if ((a.height = g) && f) {
                            var k = d.rect(b, f, g, a.backgroundColor, a.backgroundAlpha, 1, a.backgroundColor, a.backgroundAlpha);
                            d.setCN(e, k, "scrollbar-bg");
                            a.bg = k;
                            h.push(k);
                            k = d.rect(b, f, g, "#000", .005);
                            h.push(k);
                            a.invisibleBg = k;
                            k.click(function() {
                                a.handleBgClick()
                            }).mouseover(function() {
                                a.handleMouseOver()
                            }).mouseout(function() {
                                a.handleMouseOut()
                            }).touchend(function() {
                                a.handleBgClick()
                            });
                            k = d.rect(b, f, g, a.selectedBackgroundColor, a.selectedBackgroundAlpha);
                            d.setCN(e, k, "scrollbar-bg-selected");
                            a.selectedBG = k;
                            h.push(k);
                            f = d.rect(b, f, g, "#000", .005);
                            a.dragger = f;
                            h.push(f);
                            f.mousedown(function(b) {
                                a.handleDragStart(b)
                            }).mouseup(function() {
                                a.handleDragStop()
                            }).mouseover(function() {
                                a.handleDraggerOver()
                            }).mouseout(function() {
                                a.handleMouseOut()
                            }).touchstart(function(b) {
                                a.handleDragStart(b)
                            }).touchend(function() {
                                a.handleDragStop()
                            });
                            g = e.pathToImages;
                            var l, k = a.dragIcon.replace(/\.[a-z]*$/i, "");
                            d.isAbsolute(k) && (g = "");
                            c ? (l = g + k + "H" + e.extension, g = a.dragIconWidth, c = a.dragIconHeight) : (l = g + k + e.extension, c = a.dragIconWidth, g = a.dragIconHeight);
                            k = b.image(l, 0, 0, c, g);
                            d.setCN(e, k, "scrollbar-grip-left");
                            l = b.image(l, 0, 0, c, g);
                            d.setCN(e, l, "scrollbar-grip-right");
                            var m = 10,
                                p = 20;
                            e.panEventsEnabled && (m = 25, p = a.scrollbarHeight);
                            var q = d.rect(b, m, p, "#000", .005),
                                n = d.rect(b, m, p, "#000", .005);
                            n.translate(-(m - c) / 2, -(p - g) / 2);
                            q.translate(-(m - c) / 2, -(p - g) / 2);
                            c = b.set([k, n]);
                            b = b.set([l, q]);
                            a.iconLeft = c;
                            h.push(a.iconLeft);
                            a.iconRight = b;
                            h.push(b);
                            a.updateGripCursor(!1);
                            e.makeAccessible(c, a.accessibleLabel);
                            e.makeAccessible(b, a.accessibleLabel);
                            e.makeAccessible(f, a.accessibleLabel);
                            c.setAttr("role", "menuitem");
                            b.setAttr("role", "menuitem");
                            f.setAttr("role", "menuitem");
                            void 0 !== a.tabIndex && (c.setAttr("tabindex", a.tabIndex), c.keyup(function(b) {
                                a.handleKeys(b, 1, 0)
                            }));
                            void 0 !== a.tabIndex && (f.setAttr("tabindex", a.tabIndex), f.keyup(function(b) {
                                a.handleKeys(b, 1, 1)
                            }));
                            void 0 !== a.tabIndex && (b.setAttr("tabindex", a.tabIndex), b.keyup(function(b) {
                                a.handleKeys(b, 0, 1)
                            }));
                            c.mousedown(function() {
                                a.leftDragStart()
                            }).mouseup(function() {
                                a.leftDragStop()
                            }).mouseover(function() {
                                a.iconRollOver()
                            }).mouseout(function() {
                                a.iconRollOut()
                            }).touchstart(function() {
                                a.leftDragStart()
                            }).touchend(function() {
                                a.leftDragStop()
                            });
                            b.mousedown(function() {
                                a.rightDragStart()
                            }).mouseup(function() {
                                a.rightDragStop()
                            }).mouseover(function() {
                                a.iconRollOver()
                            }).mouseout(function() {
                                a.iconRollOut()
                            }).touchstart(function() {
                                a.rightDragStart()
                            }).touchend(function() {
                                a.rightDragStop()
                            });
                            d.ifArray(e.chartData) ? h.show() : h.hide();
                            a.hideDragIcons();
                            a.clipDragger(!1)
                        }
                        h.translate(a.x, a.y);
                        h.node.style.msTouchAction = "none";
                        h.node.style.touchAction = "none"
                    }
                },
                handleKeys: function(a, b, c) {
                    this.getPercents();
                    var e = this.percentStart,
                        d = this.percentEnd;
                    if (this.rotate) var f = d,
                        d = e,
                        e = f;
                    if (37 == a.keyCode || 40 == a.keyCode) e -= .02 * b, d -= .02 * c;
                    if (39 == a.keyCode || 38 == a.keyCode) e += .02 * b, d += .02 * c;
                    this.rotate && (a = d, d = e, e = a);
                    isNaN(d) || isNaN(e) || this.percentZoom(e, d, !0)
                },
                updateScrollbarSize: function(a, b) {
                    if (!isNaN(a) &&
                        !isNaN(b)) {
                        a = Math.round(a);
                        b = Math.round(b);
                        var c = this.dragger,
                            e, d, f, g, k;
                        this.rotate ? (e = 0, d = a, f = this.width + 1, g = b - a, c.setAttr("height", b - a), c.setAttr("y", d)) : (e = a, d = 0, f = b - a, g = this.height + 1, k = b - a, c.setAttr("x", e), c.setAttr("width", k));
                        this.clipAndUpdate(e, d, f, g)
                    }
                },
                update: function() {
                    var a, b = !1,
                        c, e, d = this.x,
                        f = this.y,
                        g = this.dragger,
                        k = this.getDBox();
                    if (k) {
                        c = k.x + d;
                        e = k.y + f;
                        var l = k.width,
                            k = k.height,
                            m = this.rotate,
                            p = this.chart,
                            q = this.width,
                            n = this.height,
                            t = p.mouseX,
                            p = p.mouseY;
                        a = this.initialMouse;
                        this.forceClip &&
                            this.clipDragger(!0);
                        if (this.dragging) {
                            var r = this.initialCoord;
                            m ? (a = r + (p - a), 0 > a && (a = 0), r = n - k, a > r && (a = r), g.setAttr("y", a)) : (a = r + (t - a), 0 > a && (a = 0), r = q - l, a > r && (a = r), g.setAttr("x", a));
                            this.clipDragger(!0)
                        }
                        if (this.resizingRight) {
                            if (m)
                                if (a = p - e, !isNaN(this.maxHeight) && a > this.maxHeight && (a = this.maxHeight), a + e > n + f && (a = n - e + f), 0 > a) this.resizingRight = !1, b = this.resizingLeft = !0;
                                else {
                                    if (0 === a || isNaN(a)) a = .1;
                                    g.setAttr("height", a)
                                }
                            else if (a = t - c, !isNaN(this.maxWidth) && a > this.maxWidth && (a = this.maxWidth), a + c > q + d && (a =
                                    q - c + d), 0 > a) this.resizingRight = !1, b = this.resizingLeft = !0;
                            else {
                                if (0 === a || isNaN(a)) a = .1;
                                g.setAttr("width", a)
                            }
                            this.clipDragger(!0)
                        }
                        if (this.resizingLeft) {
                            if (m)
                                if (c = e, e = p, e < f && (e = f), isNaN(e) && (e = f), e > n + f && (e = n + f), a = !0 === b ? c - e : k + c - e, !isNaN(this.maxHeight) && a > this.maxHeight && (a = this.maxHeight, e = c), 0 > a) this.resizingRight = !0, this.resizingLeft = !1, g.setAttr("y", c + k - f);
                                else {
                                    if (0 === a || isNaN(a)) a = .1;
                                    g.setAttr("y", e - f);
                                    g.setAttr("height", a)
                                }
                            else if (e = t, e < d && (e = d), isNaN(e) && (e = d), e > q + d && (e = q + d), a = !0 === b ? c - e : l + c - e, !isNaN(this.maxWidth) && a > this.maxWidth && (a = this.maxWidth, e = c), 0 > a) this.resizingRight = !0, this.resizingLeft = !1, g.setAttr("x", c + l - d);
                            else {
                                if (0 === a || isNaN(a)) a = .1;
                                g.setAttr("x", e - d);
                                g.setAttr("width", a)
                            }
                            this.clipDragger(!0)
                        }
                    }
                },
                stopForceClip: function() {
                    this.animating = this.forceClip = !1
                },
                clipDragger: function(a) {
                    var b = this.getDBox();
                    if (b) {
                        var c = b.x,
                            e = b.y,
                            d = b.width,
                            b = b.height,
                            f = !1;
                        if (this.rotate) {
                            if (c = 0, d = this.width + 1, this.clipY != e || this.clipH != b) f = !0
                        } else if (e = 0, b = this.height + 1, this.clipX != c || this.clipW !=
                            d) f = !0;
                        f && (this.clipAndUpdate(c, e, d, b), a && (this.updateOnReleaseOnly || this.dispatchScrollbarEvent()))
                    }
                },
                maskGraphs: function() {},
                clipAndUpdate: function(a, b, c, d) {
                    this.clipX = a;
                    this.clipY = b;
                    this.clipW = c;
                    this.clipH = d;
                    this.selectedBG.setAttr("width", c);
                    this.selectedBG.setAttr("height", d);
                    this.selectedBG.translate(a, b);
                    this.updateDragIconPositions();
                    this.maskGraphs(a, b, c, d)
                },
                dispatchScrollbarEvent: function() {
                    if (this.skipEvent) this.skipEvent = !1;
                    else {
                        var a = this.chart;
                        a.hideBalloon();
                        var b = this.getDBox(),
                            c =
                            b.x,
                            d = b.y,
                            h = b.width,
                            b = b.height;
                        this.getPercents();
                        this.rotate ? (c = d, h = this.height / b) : h = this.width / h;
                        this.fire({
                            type: "zoomed",
                            position: c,
                            chart: a,
                            target: this,
                            multiplier: h,
                            relativeStart: this.percentStart,
                            relativeEnd: this.percentEnd
                        })
                    }
                },
                updateDragIconPositions: function() {
                    var a = this.getDBox(),
                        b = a.x,
                        c = a.y,
                        d = this.iconLeft,
                        h = this.iconRight,
                        f, g, k = this.scrollbarHeight;
                    this.rotate ? (f = this.dragIconWidth, g = this.dragIconHeight, d.translate((k - g) / 2, c - f / 2), h.translate((k - g) / 2, c + a.height - f / 2)) : (f = this.dragIconHeight,
                        g = this.dragIconWidth, d.translate(b - g / 2, (k - f) / 2), h.translate(b - g / 2 + a.width, (k - f) / 2))
                },
                showDragIcons: function() {
                    this.resizeEnabled && (this.iconLeft.show(), this.iconRight.show())
                },
                hideDragIcons: function() {
                    if (!this.resizingLeft && !this.resizingRight && !this.dragging) {
                        if (this.hideResizeGrips || !this.resizeEnabled) this.iconLeft.hide(), this.iconRight.hide();
                        this.removeCursors()
                    }
                },
                removeCursors: function() {
                    this.chart.setMouseCursor("auto")
                },
                fireZoomEvent: function(a) {
                    this.fire({
                        type: a,
                        chart: this.chart,
                        target: this
                    })
                },
                percentZoom: function(a, b, c) {
                    a = d.fitToBounds(a, 0, b);
                    b = d.fitToBounds(b, a, 1);
                    if (this.dragger && this.enabled) {
                        this.dragger.stop();
                        isNaN(a) && (a = 0);
                        isNaN(b) && (b = 1);
                        var e, h;
                        this.rotate ? (e = this.height, b = e - e * b, h = e - e * a) : (e = this.width, h = e * b, b = e * a);
                        this.updateScrollbarSize(b, h);
                        this.clipDragger(!1);
                        this.getPercents();
                        c && this.dispatchScrollbarEvent()
                    }
                },
                destroy: function() {
                    this.clear();
                    d.remove(this.set);
                    d.remove(this.iconRight);
                    d.remove(this.iconLeft)
                },
                clear: function() {},
                handleDragStart: function() {
                    if (this.enabled) {
                        this.fireZoomEvent("zoomStarted");
                        var a = this.chart;
                        this.dragger.stop();
                        this.removeCursors();
                        d.isModern && (this.dragger.node.style.cssText = this.dragCursorDown);
                        this.dragging = !0;
                        var b = this.getDBox();
                        this.rotate ? (this.initialCoord = b.y, this.initialMouse = a.mouseY) : (this.initialCoord = b.x, this.initialMouse = a.mouseX)
                    }
                },
                handleDragStop: function() {
                    this.updateOnReleaseOnly && (this.update(), this.skipEvent = !1, this.dispatchScrollbarEvent());
                    this.dragging = !1;
                    this.mouseIsOver && this.removeCursors();
                    d.isModern && (this.dragger.node.style.cssText = this.dragCursorHover);
                    this.update();
                    this.fireZoomEvent("zoomEnded")
                },
                handleDraggerOver: function() {
                    this.handleMouseOver();
                    d.isModern && (this.dragger.node.style.cssText = this.dragCursorHover)
                },
                leftDragStart: function() {
                    this.fireZoomEvent("zoomStarted");
                    this.dragger.stop();
                    this.resizingLeft = !0;
                    this.updateGripCursor(!0)
                },
                updateGripCursor: function(a) {
                    d.isModern && (a = this.rotate ? a ? this.vResizeCursorDown : this.vResizeCursorHover : a ? this.hResizeCursorDown : this.hResizeCursorHover) && (this.iconRight && (this.iconRight.node.style.cssText =
                        a), this.iconLeft && (this.iconLeft.node.style.cssText = a))
                },
                leftDragStop: function() {
                    this.resizingLeft && (this.resizingLeft = !1, this.mouseIsOver || this.removeCursors(), this.updateOnRelease(), this.fireZoomEvent("zoomEnded"));
                    this.updateGripCursor(!1)
                },
                rightDragStart: function() {
                    this.fireZoomEvent("zoomStarted");
                    this.dragger.stop();
                    this.resizingRight = !0;
                    this.updateGripCursor(!0)
                },
                rightDragStop: function() {
                    this.resizingRight && (this.resizingRight = !1, this.mouseIsOver || this.removeCursors(), this.updateOnRelease(),
                        this.fireZoomEvent("zoomEnded"));
                    this.updateGripCursor(!1)
                },
                iconRollOut: function() {
                    this.removeCursors()
                },
                iconRollOver: function() {
                    this.rotate ? this.vResizeCursor && this.chart.setMouseCursor(this.vResizeCursor) : this.hResizeCursor && this.chart.setMouseCursor(this.hResizeCursor);
                    this.handleMouseOver()
                },
                getDBox: function() {
                    if (this.dragger) return this.dragger.getBBox()
                },
                handleBgClick: function() {
                    var a = this;
                    if (!a.resizingRight && !a.resizingLeft) {
                        a.zooming = !0;
                        var b, c, e = a.scrollDuration,
                            h = a.dragger;
                        b = a.getDBox();
                        var f = b.height,
                            g = b.width;
                        c = a.chart;
                        var k = a.y,
                            l = a.x,
                            m = a.rotate;
                        m ? (b = "y", c = c.mouseY - f / 2 - k, c = d.fitToBounds(c, 0, a.height - f)) : (b = "x", c = c.mouseX - g / 2 - l, c = d.fitToBounds(c, 0, a.width - g));
                        a.updateOnReleaseOnly ? (a.skipEvent = !1, h.setAttr(b, c), a.dispatchScrollbarEvent(), a.clipDragger()) : (a.animating = !0, c = Math.round(c), m ? h.animate({
                            y: c
                        }, e, ">") : h.animate({
                            x: c
                        }, e, ">"), a.forceClip = !0, clearTimeout(a.forceTO), a.forceTO = setTimeout(function() {
                            a.stopForceClip.call(a)
                        }, 5E3 * e))
                    }
                },
                updateOnRelease: function() {
                    this.updateOnReleaseOnly &&
                        (this.update(), this.skipEvent = !1, this.dispatchScrollbarEvent())
                },
                handleReleaseOutside: function() {
                    if (this.set) {
                        if (this.resizingLeft || this.resizingRight || this.dragging) this.dragging = this.resizingRight = this.resizingLeft = !1, this.updateOnRelease(), this.removeCursors();
                        this.animating = this.mouseIsOver = !1;
                        this.hideDragIcons();
                        this.update()
                    }
                },
                handleMouseOver: function() {
                    this.mouseIsOver = !0;
                    this.showDragIcons()
                },
                handleMouseOut: function() {
                    this.mouseIsOver = !1;
                    this.hideDragIcons();
                    this.removeCursors()
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.ChartScrollbar = d.Class({
                inherits: d.SimpleChartScrollbar,
                construct: function(a) {
                    this.cname = "ChartScrollbar";
                    d.ChartScrollbar.base.construct.call(this, a);
                    this.graphLineColor = "#BBBBBB";
                    this.graphLineAlpha = 0;
                    this.graphFillColor = "#BBBBBB";
                    this.graphFillAlpha = 1;
                    this.selectedGraphLineColor = "#888888";
                    this.selectedGraphLineAlpha = 0;
                    this.selectedGraphFillColor = "#888888";
                    this.selectedGraphFillAlpha = 1;
                    this.gridCount = 0;
                    this.gridColor = "#FFFFFF";
                    this.gridAlpha = .7;
                    this.skipEvent =
                        this.autoGridCount = !1;
                    this.color = "#FFFFFF";
                    this.scrollbarCreated = !1;
                    this.oppositeAxis = !0;
                    this.accessibleLabel = "Zoom chart using cursor arrows";
                    d.applyTheme(this, a, this.cname)
                },
                init: function() {
                    var a = this.categoryAxis,
                        b = this.chart,
                        c = this.gridAxis;
                    a || ("CategoryAxis" == this.gridAxis.cname ? (this.catScrollbar = !0, a = new d.CategoryAxis, a.id = "scrollbar") : (a = new d.ValueAxis, a.data = b.chartData, a.id = c.id, a.type = c.type, a.maximumDate = c.maximumDate, a.minimumDate = c.minimumDate, a.minPeriod = c.minPeriod, a.minMaxField =
                        c.minMaxField), this.categoryAxis = a);
                    a.chart = b;
                    var e = b.categoryAxis;
                    e && (a.firstDayOfWeek = e.firstDayOfWeek);
                    a.dateFormats = c.dateFormats;
                    a.markPeriodChange = c.markPeriodChange;
                    a.boldPeriodBeginning = c.boldPeriodBeginning;
                    a.labelFunction = c.labelFunction;
                    a.axisItemRenderer = d.RecItem;
                    a.axisRenderer = d.RecAxis;
                    a.guideFillRenderer = d.RecFill;
                    a.inside = !0;
                    a.fontSize = this.fontSize;
                    a.tickLength = 0;
                    a.axisAlpha = 0;
                    d.isString(this.graph) && (this.graph = d.getObjById(b.graphs, this.graph));
                    (a = this.graph) && this.catScrollbar &&
                        (c = this.valueAxis, c || (this.valueAxis = c = new d.ValueAxis, c.visible = !1, c.scrollbar = !0, c.axisItemRenderer = d.RecItem, c.axisRenderer = d.RecAxis, c.guideFillRenderer = d.RecFill, c.labelsEnabled = !1, c.chart = b), b = this.unselectedGraph, b || (b = new d.AmGraph, b.scrollbar = !0, this.unselectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers), b = this.selectedGraph, b || (b = new d.AmGraph, b.scrollbar = !0, this.selectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers));
                    this.scrollbarCreated = !0
                },
                draw: function() {
                    var a = this;
                    d.ChartScrollbar.base.draw.call(a);
                    if (a.enabled) {
                        a.scrollbarCreated || a.init();
                        var b = a.chart,
                            c = b.chartData,
                            e = a.categoryAxis,
                            h = a.rotate,
                            f = a.x,
                            g = a.y,
                            k = a.width,
                            l = a.height,
                            m = a.gridAxis,
                            p = a.set;
                        e.setOrientation(!h);
                        e.parseDates = m.parseDates;
                        "ValueAxis" == a.categoryAxis.cname && (e.rotate = !h);
                        e.equalSpacing = m.equalSpacing;
                        e.minPeriod = m.minPeriod;
                        e.startOnAxis = m.startOnAxis;
                        e.width = k - 1;
                        e.height = l;
                        e.gridCount = a.gridCount;
                        e.gridColor = a.gridColor;
                        e.gridAlpha = a.gridAlpha;
                        e.color = a.color;
                        e.tickLength = 0;
                        e.axisAlpha = 0;
                        e.autoGridCount = a.autoGridCount;
                        e.parseDates && !e.equalSpacing && e.timeZoom(b.firstTime, b.lastTime);
                        e.minimum = a.gridAxis.fullMin;
                        e.maximum = a.gridAxis.fullMax;
                        e.strictMinMax = !0;
                        e.zoom(0, c.length - 1);
                        if ((m = a.graph) && a.catScrollbar) {
                            var q = a.valueAxis,
                                n = m.valueAxis;
                            q.id = n.id;
                            q.rotate = h;
                            q.setOrientation(h);
                            q.width = k;
                            q.height = l;
                            q.dataProvider = c;
                            q.reversed = n.reversed;
                            q.logarithmic = n.logarithmic;
                            q.gridAlpha = 0;
                            q.axisAlpha = 0;
                            p.push(q.set);
                            h ? (q.y = g, q.x = 0) : (q.x = f, q.y = 0);
                            var f = Infinity,
                                g = -Infinity,
                                t;
                            for (t = 0; t < c.length; t++) {
                                var r = c[t].axes[n.id].graphs[m.id].values,
                                    w;
                                for (w in r)
                                    if (r.hasOwnProperty(w) && "percents" != w && "total" != w) {
                                        var z = r[w];
                                        z < f && (f = z);
                                        z > g && (g = z)
                                    }
                            }
                            Infinity != f && (q.minimum = f); - Infinity != g && (q.maximum = g + .1 * (g - f));
                            f == g && (--q.minimum, q.maximum += 1);
                            void 0 !== a.minimum && (q.minimum = a.minimum);
                            void 0 !== a.maximum && (q.maximum = a.maximum);
                            q.zoom(0, c.length - 1);
                            w = a.unselectedGraph;
                            w.id = m.id;
                            w.bcn = "scrollbar-graph-";
                            w.rotate = h;
                            w.chart = b;
                            w.data = c;
                            w.valueAxis = q;
                            w.chart = m.chart;
                            w.categoryAxis =
                                a.categoryAxis;
                            w.periodSpan = m.periodSpan;
                            w.valueField = m.valueField;
                            w.openField = m.openField;
                            w.closeField = m.closeField;
                            w.highField = m.highField;
                            w.lowField = m.lowField;
                            w.lineAlpha = a.graphLineAlpha;
                            w.lineColorR = a.graphLineColor;
                            w.fillAlphas = a.graphFillAlpha;
                            w.fillColorsR = a.graphFillColor;
                            w.connect = m.connect;
                            w.hidden = m.hidden;
                            w.width = k;
                            w.height = l;
                            w.pointPosition = m.pointPosition;
                            w.stepDirection = m.stepDirection;
                            w.periodSpan = m.periodSpan;
                            n = a.selectedGraph;
                            n.id = m.id;
                            n.bcn = w.bcn + "selected-";
                            n.rotate = h;
                            n.chart =
                                b;
                            n.data = c;
                            n.valueAxis = q;
                            n.chart = m.chart;
                            n.categoryAxis = e;
                            n.periodSpan = m.periodSpan;
                            n.valueField = m.valueField;
                            n.openField = m.openField;
                            n.closeField = m.closeField;
                            n.highField = m.highField;
                            n.lowField = m.lowField;
                            n.lineAlpha = a.selectedGraphLineAlpha;
                            n.lineColorR = a.selectedGraphLineColor;
                            n.fillAlphas = a.selectedGraphFillAlpha;
                            n.fillColorsR = a.selectedGraphFillColor;
                            n.connect = m.connect;
                            n.hidden = m.hidden;
                            n.width = k;
                            n.height = l;
                            n.pointPosition = m.pointPosition;
                            n.stepDirection = m.stepDirection;
                            n.periodSpan = m.periodSpan;
                            b = a.graphType;
                            b || (b = m.type);
                            w.type = b;
                            n.type = b;
                            c = c.length - 1;
                            w.zoom(0, c);
                            n.zoom(0, c);
                            n.set.click(function() {
                                a.handleBackgroundClick()
                            }).mouseover(function() {
                                a.handleMouseOver()
                            }).mouseout(function() {
                                a.handleMouseOut()
                            });
                            w.set.click(function() {
                                a.handleBackgroundClick()
                            }).mouseover(function() {
                                a.handleMouseOver()
                            }).mouseout(function() {
                                a.handleMouseOut()
                            });
                            p.push(w.set);
                            p.push(n.set)
                        }
                        p.push(e.set);
                        p.push(e.labelsSet);
                        a.bg.toBack();
                        a.invisibleBg.toFront();
                        a.dragger.toFront();
                        a.iconLeft.toFront();
                        a.iconRight.toFront()
                    }
                },
                timeZoom: function(a, b, c) {
                    this.startTime = a;
                    this.endTime = b;
                    this.timeDifference = b - a;
                    this.skipEvent = !d.toBoolean(c);
                    this.zoomScrollbar();
                    this.dispatchScrollbarEvent()
                },
                zoom: function(a, b) {
                    this.start = a;
                    this.end = b;
                    this.skipEvent = !0;
                    this.zoomScrollbar()
                },
                dispatchScrollbarEvent: function() {
                    if (this.categoryAxis && "ValueAxis" == this.categoryAxis.cname) d.ChartScrollbar.base.dispatchScrollbarEvent.call(this);
                    else if (this.skipEvent) this.skipEvent = !1;
                    else {
                        var a = this.chart.chartData,
                            b, c, e = this.dragger.getBBox();
                        b = e.x;
                        var h = e.y,
                            f = e.width,
                            e = e.height,
                            g = this.chart;
                        this.rotate ? (b = h, c = e) : c = f;
                        f = {
                            type: "zoomed",
                            target: this
                        };
                        f.chart = g;
                        var k = this.categoryAxis,
                            l = this.stepWidth,
                            h = g.minSelectedTime,
                            e = g.maxSelectedTime,
                            m = !1;
                        if (k.parseDates && !k.equalSpacing) {
                            if (a = g.lastTime, g = g.firstTime, k = Math.round(b / l) + g, b = this.dragging ? k + this.timeDifference : Math.round((b + c) / l) + g, k > b && (k = b), 0 < h && b - k < h && (b = Math.round(k + (b - k) / 2), m = Math.round(h / 2), k = b - m, b += m, m = !0), 0 < e && b - k > e && (b = Math.round(k + (b - k) / 2), m = Math.round(e / 2), k = b - m, b += m, m = !0), b > a && (b =
                                    a), b - h < k && (k = b - h), k < g && (k = g), k + h > b && (b = k + h), k != this.startTime || b != this.endTime) this.startTime = k, this.endTime = b, f.start = k, f.end = b, f.startDate = new Date(k), f.endDate = new Date(b), this.fire(f)
                        } else {
                            k.startOnAxis || (b += l / 2);
                            c -= this.stepWidth / 2;
                            h = k.xToIndex(b);
                            b = k.xToIndex(b + c);
                            if (h != this.start || this.end != b) k.startOnAxis && (this.resizingRight && h == b && b++, this.resizingLeft && h == b && (0 < h ? h-- : b = 1)), this.start = h, this.end = this.dragging ? this.start + this.difference : b, f.start = this.start, f.end = this.end, k.parseDates && (a[this.start] &&
                                (f.startDate = new Date(a[this.start].time)), a[this.end] && (f.endDate = new Date(a[this.end].time))), this.fire(f);
                            this.percentStart = h;
                            this.percentEnd = b
                        }
                        m && this.zoomScrollbar(!0)
                    }
                },
                zoomScrollbar: function(a) {
                    if ((!(this.dragging || this.resizingLeft || this.resizingRight || this.animating) || a) && this.dragger && this.enabled) {
                        var b, c, d = this.chart;
                        a = d.chartData;
                        var h = this.categoryAxis;
                        h.parseDates && !h.equalSpacing ? (a = h.stepWidth, c = d.firstTime, b = a * (this.startTime - c), c = a * (this.endTime - c)) : (a[this.start] && (b = a[this.start].x[h.id]),
                            a[this.end] && (c = a[this.end].x[h.id]), a = h.stepWidth, h.startOnAxis || (d = a / 2, b -= d, c += d));
                        this.stepWidth = a;
                        isNaN(b) || isNaN(c) || this.updateScrollbarSize(b, c)
                    }
                },
                maskGraphs: function(a, b, c, d) {
                    var h = this.selectedGraph;
                    h && h.set.clipRect(a, b, c, d)
                },
                handleDragStart: function() {
                    d.ChartScrollbar.base.handleDragStart.call(this);
                    this.difference = this.end - this.start;
                    this.timeDifference = this.endTime - this.startTime;
                    0 > this.timeDifference && (this.timeDifference = 0)
                },
                handleBackgroundClick: function() {
                    d.ChartScrollbar.base.handleBackgroundClick.call(this);
                    this.dragging || (this.difference = this.end - this.start, this.timeDifference = this.endTime - this.startTime, 0 > this.timeDifference && (this.timeDifference = 0))
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.AmBalloon = d.Class({
                construct: function(a) {
                    this.cname = "AmBalloon";
                    this.enabled = !0;
                    this.fillColor = "#FFFFFF";
                    this.fillAlpha = .8;
                    this.borderThickness = 2;
                    this.borderColor = "#FFFFFF";
                    this.borderAlpha = 1;
                    this.cornerRadius = 0;
                    this.maxWidth = 220;
                    this.horizontalPadding = 8;
                    this.verticalPadding = 4;
                    this.pointerWidth = 6;
                    this.pointerOrientation = "V";
                    this.color = "#000000";
                    this.adjustBorderColor = !0;
                    this.show = this.follow = this.showBullet = !1;
                    this.bulletSize = 3;
                    this.shadowAlpha = .4;
                    this.shadowColor =
                        "#000000";
                    this.fadeOutDuration = this.animationDuration = .3;
                    this.fixedPosition = !0;
                    this.offsetY = 6;
                    this.offsetX = 1;
                    this.textAlign = "center";
                    this.disableMouseEvents = !0;
                    this.deltaSignX = this.deltaSignY = 1;
                    d.isModern || (this.offsetY *= 1.5);
                    this.sdy = this.sdx = 0;
                    d.applyTheme(this, a, this.cname)
                },
                draw: function() {
                    var a = this.pointToX,
                        b = this.pointToY;
                    d.isModern || (this.drop = !1);
                    var c = this.chart;
                    d.VML && (this.fadeOutDuration = 0);
                    this.xAnim && c.stopAnim(this.xAnim);
                    this.yAnim && c.stopAnim(this.yAnim);
                    this.sdy = this.sdx = 0;
                    if (!isNaN(a)) {
                        var e =
                            this.follow,
                            h = c.container,
                            f = this.set;
                        d.remove(f);
                        this.removeDiv();
                        f = h.set();
                        f.node.style.pointerEvents = "none";
                        this.set = f;
                        this.mainSet ? (this.mainSet.push(this.set), this.sdx = this.mainSet.x, this.sdy = this.mainSet.y) : c.balloonsSet.push(f);
                        if (this.show) {
                            var g = this.l,
                                k = this.t,
                                l = this.r,
                                m = this.b,
                                p = this.balloonColor,
                                q = this.fillColor,
                                n = this.borderColor,
                                t = q;
                            void 0 != p && (this.adjustBorderColor ? t = n = p : q = p);
                            var r = this.horizontalPadding,
                                w = this.verticalPadding,
                                z = this.pointerWidth,
                                x = this.pointerOrientation,
                                u = this.cornerRadius,
                                A = c.fontFamily,
                                y = this.fontSize;
                            void 0 == y && (y = c.fontSize);
                            var p = document.createElement("div"),
                                B = c.classNamePrefix;
                            p.className = B + "-balloon-div";
                            this.className && (p.className = p.className + " " + B + "-balloon-div-" + this.className);
                            B = p.style;
                            this.disableMouseEvents && (B.pointerEvents = "none");
                            B.position = "absolute";
                            var D = this.minWidth,
                                C = document.createElement("div");
                            p.appendChild(C);
                            var I = C.style;
                            isNaN(D) || (I.minWidth = D - 2 * r + "px");
                            I.textAlign = this.textAlign;
                            I.maxWidth = this.maxWidth + "px";
                            I.fontSize = y + "px";
                            I.color =
                                this.color;
                            I.fontFamily = A;
                            C.innerHTML = this.text;
                            c.chartDiv.appendChild(p);
                            this.textDiv = p;
                            var I = p.offsetWidth,
                                H = p.offsetHeight;
                            p.clientHeight && (I = p.clientWidth, H = p.clientHeight);
                            A = H + 2 * w;
                            C = I + 2 * r;
                            !isNaN(D) && C < D && (C = D);
                            window.opera && (A += 2);
                            var Q = !1,
                                y = this.offsetY;
                            c.handDrawn && (y += c.handDrawScatter + 2);
                            "H" != x ? (D = a - C / 2, b < k + A + 10 && "down" != x ? (Q = !0, e && (b += y), y = b + z, this.deltaSignY = -1) : (e && (b -= y), y = b - A - z, this.deltaSignY = 1)) : (2 * z > A && (z = A / 2), y = b - A / 2, a < g + (l - g) / 2 ? (D = a + z, this.deltaSignX = -1) : (D = a - C - z, this.deltaSignX =
                                1));
                            y + A >= m && (y = m - A);
                            y < k && (y = k);
                            D < g && (D = g);
                            D + C > l && (D = l - C);
                            var k = y + w,
                                m = D + r,
                                M = this.shadowAlpha,
                                P = this.shadowColor,
                                r = this.borderThickness,
                                ia = this.bulletSize,
                                J, w = this.fillAlpha,
                                aa = this.borderAlpha;
                            this.showBullet && (J = d.circle(h, ia, t, w), f.push(J));
                            this.drop ? (g = C / 1.6, l = 0, "V" == x && (x = "down"), "H" == x && (x = "left"), "down" == x && (D = a + 1, y = b - g - g / 3), "up" == x && (l = 180, D = a + 1, y = b + g + g / 3), "left" == x && (l = 270, D = a + g + g / 3 + 2, y = b), "right" == x && (l = 90, D = a - g - g / 3 + 2, y = b), k = y - H / 2 + 1, m = D - I / 2 - 1, q = d.drop(h, g, l, q, w, r, n, aa)) : 0 < u || 0 === z ? (0 < M && (a =
                                d.rect(h, C, A, q, 0, r + 1, P, M, u), d.isModern ? a.translate(1, 1) : a.translate(4, 4), f.push(a)), q = d.rect(h, C, A, q, w, r, n, aa, u)) : (t = [], u = [], "H" != x ? (g = a - D, g > C - z && (g = C - z), g < z && (g = z), t = [0, g - z, a - D, g + z, C, C, 0, 0], u = Q ? [0, 0, b - y, 0, 0, A, A, 0] : [A, A, b - y, A, A, 0, 0, A]) : (x = b - y, x > A - z && (x = A - z), x < z && (x = z), u = [0, x - z, b - y, x + z, A, A, 0, 0], t = a < g + (l - g) / 2 ? [0, 0, D < a ? 0 : a - D, 0, 0, C, C, 0] : [C, C, D + C > a ? C : a - D, C, C, 0, 0, C]), 0 < M && (a = d.polygon(h, t, u, q, 0, r, P, M), a.translate(1, 1), f.push(a)), q = d.polygon(h, t, u, q, w, r, n, aa));
                            this.bg = q;
                            f.push(q);
                            q.toFront();
                            d.setCN(c, q,
                                "balloon-bg");
                            this.className && d.setCN(c, q, "balloon-bg-" + this.className);
                            h = 1 * this.deltaSignX;
                            m += this.sdx;
                            k += this.sdy;
                            B.left = m + "px";
                            B.top = k + "px";
                            f.translate(D - h, y, 1, !0);
                            q = q.getBBox();
                            this.bottom = y + A + 1;
                            this.yPos = q.y + y;
                            J && J.translate(this.pointToX - D + h, b - y);
                            b = this.animationDuration;
                            0 < this.animationDuration && !e && !isNaN(this.prevX) && (f.translate(this.prevX, this.prevY, NaN, !0), f.animate({
                                translate: D - h + "," + y
                            }, b, "easeOutSine"), p && (B.left = this.prevTX + "px", B.top = this.prevTY + "px", this.xAnim = c.animate({
                                    node: p
                                },
                                "left", this.prevTX, m, b, "easeOutSine", "px"), this.yAnim = c.animate({
                                node: p
                            }, "top", this.prevTY, k, b, "easeOutSine", "px")));
                            this.prevX = D - h;
                            this.prevY = y;
                            this.prevTX = m;
                            this.prevTY = k
                        }
                    }
                },
                fixPrevious: function() {
                    this.rPrevX = this.prevX;
                    this.rPrevY = this.prevY;
                    this.rPrevTX = this.prevTX;
                    this.rPrevTY = this.prevTY
                },
                restorePrevious: function() {
                    this.prevX = this.rPrevX;
                    this.prevY = this.rPrevY;
                    this.prevTX = this.rPrevTX;
                    this.prevTY = this.rPrevTY
                },
                followMouse: function() {
                    if (this.follow && this.show) {
                        var a = this.chart.mouseX - this.offsetX *
                            this.deltaSignX - this.sdx,
                            b = this.chart.mouseY - this.sdy;
                        this.pointToX = a;
                        this.pointToY = b;
                        if (a != this.previousX || b != this.previousY)
                            if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius) this.draw();
                            else {
                                var c = this.set;
                                if (c) {
                                    var d = c.getBBox(),
                                        a = a - d.width / 2,
                                        h = b - d.height - 10;
                                    a < this.l && (a = this.l);
                                    a > this.r - d.width && (a = this.r - d.width);
                                    h < this.t && (h = b + 10);
                                    c.translate(a, h);
                                    b = this.textDiv.style;
                                    b.left = a + this.horizontalPadding + "px";
                                    b.top = h + this.verticalPadding + "px"
                                }
                            }
                    }
                },
                changeColor: function(a) {
                    this.balloonColor =
                        a
                },
                setBounds: function(a, b, c, d) {
                    this.l = a;
                    this.t = b;
                    this.r = c;
                    this.b = d;
                    this.destroyTO && clearTimeout(this.destroyTO)
                },
                showBalloon: function(a) {
                    if (this.text != a || this.positionChanged) this.text = a, this.isHiding = !1, this.show = !0, this.destroyTO && clearTimeout(this.destroyTO), a = this.chart, this.fadeAnim1 && a.stopAnim(this.fadeAnim1), this.fadeAnim2 && a.stopAnim(this.fadeAnim2), this.draw(), this.positionChanged = !1
                },
                hide: function(a) {
                    var b = this;
                    b.text = void 0;
                    isNaN(a) && (a = b.fadeOutDuration);
                    var c = b.chart;
                    if (0 < a && !b.isHiding) {
                        b.isHiding = !0;
                        b.destroyTO && clearTimeout(b.destroyTO);
                        b.destroyTO = setTimeout(function() {
                            b.destroy.call(b)
                        }, 1E3 * a);
                        b.follow = !1;
                        b.show = !1;
                        var d = b.set;
                        d && (d.setAttr("opacity", b.fillAlpha), b.fadeAnim1 = d.animate({
                            opacity: 0
                        }, a, "easeInSine"));
                        b.textDiv && (b.fadeAnim2 = c.animate({
                            node: b.textDiv
                        }, "opacity", 1, 0, a, "easeInSine", ""))
                    } else b.show = !1, b.follow = !1, b.destroy()
                },
                setPosition: function(a, b) {
                    if (a != this.pointToX || b != this.pointToY) this.previousX = this.pointToX, this.previousY = this.pointToY, this.pointToX = a, this.pointToY =
                        b, this.positionChanged = !0
                },
                followCursor: function(a) {
                    var b = this;
                    b.follow = a;
                    clearInterval(b.interval);
                    var c = b.chart.mouseX - b.sdx,
                        d = b.chart.mouseY - b.sdy;
                    !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = d, b.followMouse(), b.interval = setInterval(function() {
                        b.followMouse.call(b)
                    }, 40))
                },
                removeDiv: function() {
                    if (this.textDiv) {
                        var a = this.textDiv.parentNode;
                        a && a.removeChild(this.textDiv)
                    }
                },
                destroy: function() {
                    clearInterval(this.interval);
                    d.remove(this.set);
                    this.removeDiv();
                    this.set = null
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.AmCoordinateChart = d.Class({
                inherits: d.AmChart,
                construct: function(a) {
                    d.AmCoordinateChart.base.construct.call(this, a);
                    this.theme = a;
                    this.createEvents("rollOverGraphItem", "rollOutGraphItem", "clickGraphItem", "doubleClickGraphItem", "rightClickGraphItem", "clickGraph", "rollOverGraph", "rollOutGraph");
                    this.startAlpha = 1;
                    this.startDuration = 0;
                    this.startEffect = "elastic";
                    this.sequencedAnimation = !0;
                    this.colors = "#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000".split(" ");
                    this.balloonDateFormat = "MMM DD, YYYY";
                    this.valueAxes = [];
                    this.graphs = [];
                    this.guides = [];
                    this.gridAboveGraphs = !1;
                    d.applyTheme(this, a, "AmCoordinateChart")
                },
                initChart: function() {
                    d.AmCoordinateChart.base.initChart.call(this);
                    this.drawGraphs = !0;
                    var a = this.categoryAxis;
                    a && (this.categoryAxis = d.processObject(a, d.CategoryAxis, this.theme));
                    this.processValueAxes();
                    this.createValueAxes();
                    this.processGraphs();
                    this.processGuides();
                    d.VML && (this.startAlpha = 1);
                    this.setLegendData(this.graphs);
                    this.gridAboveGraphs && (this.gridSet.toFront(),
                        this.bulletSet.toFront(), this.balloonsSet.toFront())
                },
                createValueAxes: function() {
                    if (0 === this.valueAxes.length) {
                        var a = new d.ValueAxis;
                        this.addValueAxis(a)
                    }
                },
                parseData: function() {
                    this.processValueAxes();
                    this.processGraphs()
                },
                parseSerialData: function(a) {
                    this.chartData = [];
                    if (a)
                        if (0 < this.processTimeout) {
                            1 > this.processCount && (this.processCount = 1);
                            var b = a.length / this.processCount;
                            this.parseCount = Math.ceil(b) - 1;
                            for (var c = 0; c < b; c++) this.delayParseSerialData(a, c)
                        } else this.parseCount = 0, this.parsePartSerialData(a,
                            0, a.length, 0);
                    else this.onDataUpdated()
                },
                delayParseSerialData: function(a, b) {
                    var c = this,
                        d = c.processCount;
                    setTimeout(function() {
                        c.parsePartSerialData.call(c, a, b * d, (b + 1) * d, b)
                    }, c.processTimeout)
                },
                parsePartSerialData: function(a, b, c, e) {
                    c > a.length && (c = a.length);
                    var h = this.graphs,
                        f = {},
                        g = this.seriesIdField;
                    g || (g = this.categoryField);
                    var k = !1,
                        l, m = this.categoryAxis,
                        p, q, n;
                    m && (k = m.parseDates, p = m.forceShowField, n = m.classNameField, q = m.labelColorField, l = m.categoryFunction);
                    var t, r, w = {},
                        z;
                    k && (t = d.extractPeriod(m.minPeriod),
                        r = t.period, t = t.count, z = d.getPeriodDuration(r, t));
                    var x = {};
                    this.lookupTable = x;
                    var u, A = this.dataDateFormat,
                        y = {};
                    for (u = b; u < c; u++) {
                        var B = {},
                            D = a[u];
                        b = D[this.categoryField];
                        B.dataContext = D;
                        B.category = l ? l(b, D, m) : String(b);
                        p && (B.forceShow = D[p]);
                        n && (B.className = D[n]);
                        q && (B.labelColor = D[q]);
                        x[D[g]] = B;
                        if (k && (m.categoryFunction ? b = m.categoryFunction(b, D, m) : (!A || b instanceof Date || (b = b.toString() + " |"), b = d.getDate(b, A, m.minPeriod)), b = d.resetDateToMin(b, r, t, m.firstDayOfWeek), B.category = b, B.time = b.getTime(), isNaN(B.time))) continue;
                        var C = this.valueAxes;
                        B.axes = {};
                        B.x = {};
                        var I;
                        for (I = 0; I < C.length; I++) {
                            var H = C[I].id;
                            B.axes[H] = {};
                            B.axes[H].graphs = {};
                            var Q;
                            for (Q = 0; Q < h.length; Q++) {
                                b = h[Q];
                                var M = b.id,
                                    P = 1.1;
                                isNaN(b.gapPeriod) || (P = b.gapPeriod);
                                var ia = b.periodValue;
                                if (b.valueAxis.id == H) {
                                    B.axes[H].graphs[M] = {};
                                    var J = {};
                                    J.index = u;
                                    var aa = D;
                                    b.dataProvider && (aa = f);
                                    J.values = this.processValues(aa, b, ia);
                                    if (!b.connect || b.forceGap && !isNaN(b.gapPeriod))
                                        if (y && y[M] && 0 < P && B.time - w[M] >= z * P && (y[M].gap = !0), b.forceGap) {
                                            var P = 0,
                                                ma;
                                            for (ma in J.values) P++;
                                            0 < P && (w[M] = B.time, y[M] = J)
                                        } else w[M] = B.time, y[M] = J;
                                    this.processFields(b, J, aa);
                                    J.category = B.category;
                                    J.serialDataItem = B;
                                    J.graph = b;
                                    B.axes[H].graphs[M] = J
                                }
                            }
                        }
                        this.chartData[u] = B
                    }
                    if (this.parseCount == e) {
                        for (a = 0; a < h.length; a++) b = h[a], b.dataProvider && this.parseGraphData(b);
                        this.dataChanged = !1;
                        this.dispatchDataUpdated = !0;
                        this.onDataUpdated()
                    }
                },
                processValues: function(a, b, c) {
                    var e = {},
                        h, f = !1;
                    "candlestick" != b.type && "ohlc" != b.type || "" === c || (f = !0);
                    for (var g = "value error open close low high".split(" "), k = 0; k < g.length; k++) {
                        var l =
                            g[k];
                        "value" != l && "error" != l && f && (c = l.charAt(0).toUpperCase() + l.slice(1));
                        var m = a[b[l + "Field"] + c];
                        null !== m && (h = Number(m), isNaN(h) || (e[l] = h), "date" == b.valueAxis.type && void 0 !== m && (h = d.getDate(m, b.chart.dataDateFormat), e[l] = h.getTime()))
                    }
                    return e
                },
                parseGraphData: function(a) {
                    var b = a.dataProvider,
                        c = a.seriesIdField;
                    c || (c = this.seriesIdField);
                    c || (c = this.categoryField);
                    var d;
                    for (d = 0; d < b.length; d++) {
                        var h = b[d],
                            f = this.lookupTable[String(h[c])],
                            g = a.valueAxis.id;
                        f && (g = f.axes[g].graphs[a.id], g.serialDataItem = f,
                            g.values = this.processValues(h, a, a.periodValue), this.processFields(a, g, h))
                    }
                },
                addValueAxis: function(a) {
                    a.chart = this;
                    this.valueAxes.push(a);
                    this.validateData()
                },
                removeValueAxesAndGraphs: function() {
                    var a = this.valueAxes,
                        b;
                    for (b = a.length - 1; - 1 < b; b--) this.removeValueAxis(a[b])
                },
                removeValueAxis: function(a) {
                    var b = this.graphs,
                        c;
                    for (c = b.length - 1; 0 <= c; c--) {
                        var d = b[c];
                        d && d.valueAxis == a && this.removeGraph(d)
                    }
                    b = this.valueAxes;
                    for (c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);
                    this.validateData()
                },
                addGraph: function(a) {
                    this.graphs.push(a);
                    this.chooseGraphColor(a, this.graphs.length - 1);
                    this.validateData()
                },
                removeGraph: function(a) {
                    var b = this.graphs,
                        c;
                    for (c = b.length - 1; 0 <= c; c--) b[c] == a && (b.splice(c, 1), a.destroy());
                    this.validateData()
                },
                handleValueAxisZoom: function() {},
                processValueAxes: function() {
                    var a = this.valueAxes,
                        b;
                    for (b = 0; b < a.length; b++) {
                        var c = a[b],
                            c = d.processObject(c, d.ValueAxis, this.theme);
                        a[b] = c;
                        c.chart = this;
                        c.init();
                        this.listenTo(c, "axisIntZoomed", this.handleValueAxisZoom);
                        c.id || (c.id = "valueAxisAuto" + b + "_" + (new Date).getTime());
                        void 0 === c.usePrefixes && (c.usePrefixes = this.usePrefixes)
                    }
                },
                processGuides: function() {
                    var a = this.guides,
                        b = this.categoryAxis;
                    if (a)
                        for (var c = 0; c < a.length; c++) {
                            var e = a[c];
                            (void 0 !== e.category || void 0 !== e.date) && b && b.addGuide(e);
                            e.id || (e.id = "guideAuto" + c + "_" + (new Date).getTime());
                            var h = e.valueAxis;
                            h ? (d.isString(h) && (h = this.getValueAxisById(h)), h ? h.addGuide(e) : this.valueAxes[0].addGuide(e)) : isNaN(e.value) || this.valueAxes[0].addGuide(e)
                        }
                },
                processGraphs: function() {
                    var a = this.graphs,
                        b;
                    this.graphsById = {};
                    for (b =
                        0; b < a.length; b++) {
                        var c = a[b],
                            c = d.processObject(c, d.AmGraph, this.theme);
                        a[b] = c;
                        this.chooseGraphColor(c, b);
                        c.chart = this;
                        c.init();
                        d.isString(c.valueAxis) && (c.valueAxis = this.getValueAxisById(c.valueAxis));
                        c.valueAxis || (c.valueAxis = this.valueAxes[0]);
                        c.id || (c.id = "graphAuto" + b + "_" + (new Date).getTime());
                        this.graphsById[c.id] = c
                    }
                },
                formatString: function(a, b, c) {
                    var e = b.graph,
                        h = e.valueAxis;
                    h.duration && b.values.value && (h = d.formatDuration(b.values.value, h.duration, "", h.durationUnits, h.maxInterval, h.numberFormatter),
                        a = a.split("[[value]]").join(h));
                    a = d.massReplace(a, {
                        "[[title]]": e.title,
                        "[[description]]": b.description
                    });
                    a = c ? d.fixNewLines(a) : d.fixBrakes(a);
                    return a = d.cleanFromEmpty(a)
                },
                getBalloonColor: function(a, b, c) {
                    var e = a.lineColor,
                        h = a.balloonColor;
                    c && (h = e);
                    c = a.fillColorsR;
                    "object" == typeof c ? e = c[0] : void 0 !== c && (e = c);
                    b.isNegative && (c = a.negativeLineColor, a = a.negativeFillColors, "object" == typeof a ? c = a[0] : void 0 !== a && (c = a), void 0 !== c && (e = c));
                    void 0 !== b.color && (e = b.color);
                    void 0 !== b.lineColor && (e = b.lineColor);
                    b = b.fillColors;
                    void 0 !== b && (e = b, d.ifArray(b) && (e = b[0]));
                    void 0 === h && (h = e);
                    return h
                },
                getGraphById: function(a) {
                    return d.getObjById(this.graphs, a)
                },
                getValueAxisById: function(a) {
                    return d.getObjById(this.valueAxes, a)
                },
                processFields: function(a, b, c) {
                    if (a.itemColors) {
                        var e = a.itemColors,
                            h = b.index;
                        b.color = h < e.length ? e[h] : d.randomColor()
                    }
                    e = "lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern gap className columnIndex".split(" ");
                    for (h = 0; h < e.length; h++) {
                        var f =
                            e[h],
                            g = a[f + "Field"];
                        g && (g = c[g], d.isDefined(g) && (b[f] = g))
                    }
                    b.dataContext = c
                },
                chooseGraphColor: function(a, b) {
                    if (a.lineColor) a.lineColorR = a.lineColor;
                    else {
                        var c;
                        c = this.colors.length > b ? this.colors[b] : a.lineColorR ? a.lineColorR : d.randomColor();
                        a.lineColorR = c
                    }
                    a.fillColorsR = a.fillColors ? a.fillColors : a.lineColorR;
                    a.bulletBorderColorR = a.bulletBorderColor ? a.bulletBorderColor : a.useLineColorForBulletBorder ? a.lineColorR : a.bulletColor;
                    a.bulletColorR = a.bulletColor ? a.bulletColor : a.lineColorR;
                    if (c = this.patterns) a.pattern =
                        c[b]
                },
                handleLegendEvent: function(a) {
                    var b = a.type;
                    if (a = a.dataItem) {
                        var c = a.hidden,
                            d = a.showBalloon;
                        switch (b) {
                            case "clickMarker":
                                this.textClickEnabled && (d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a));
                                break;
                            case "clickLabel":
                                d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a);
                                break;
                            case "rollOverItem":
                                c || this.highlightGraph(a);
                                break;
                            case "rollOutItem":
                                c || this.unhighlightGraph();
                                break;
                            case "hideItem":
                                this.hideGraph(a);
                                break;
                            case "showItem":
                                this.showGraph(a)
                        }
                    }
                },
                highlightGraph: function(a) {
                    var b =
                        this.graphs;
                    if (b) {
                        var c, d = .2;
                        this.legend && (d = this.legend.rollOverGraphAlpha);
                        if (1 != d)
                            for (c = 0; c < b.length; c++) {
                                var h = b[c];
                                h != a && h.changeOpacity(d)
                            }
                    }
                },
                unhighlightGraph: function() {
                    var a;
                    this.legend && (a = this.legend.rollOverGraphAlpha);
                    if (1 != a) {
                        a = this.graphs;
                        var b;
                        for (b = 0; b < a.length; b++) a[b].changeOpacity(1)
                    }
                },
                showGraph: function(a) {
                    a.switchable && (a.hidden = !1, this.dataChanged = !0, "xy" != this.type && (this.marginsUpdated = !1), this.chartCreated && this.initChart())
                },
                hideGraph: function(a) {
                    a.switchable && (this.dataChanged = !0, "xy" != this.type && (this.marginsUpdated = !1), a.hidden = !0, this.chartCreated && this.initChart())
                },
                hideGraphsBalloon: function(a) {
                    a.showBalloon = !1;
                    this.updateLegend()
                },
                showGraphsBalloon: function(a) {
                    a.showBalloon = !0;
                    this.updateLegend()
                },
                updateLegend: function() {
                    this.legend && this.legend.invalidateSize()
                },
                resetAnimation: function() {
                    var a = this.graphs;
                    if (a) {
                        var b;
                        for (b = 0; b < a.length; b++) a[b].animationPlayed = !1
                    }
                },
                animateAgain: function() {
                    this.resetAnimation();
                    this.validateNow()
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.TrendLine = d.Class({
                construct: function(a) {
                    this.cname = "TrendLine";
                    this.createEvents("click", "rollOver", "rollOut");
                    this.isProtected = !1;
                    this.dashLength = 0;
                    this.lineColor = "#00CC00";
                    this.lineThickness = this.lineAlpha = 1;
                    d.applyTheme(this, a, this.cname)
                },
                draw: function() {
                    var a = this;
                    a.destroy();
                    var b = a.chart,
                        c = b.container,
                        e, h, f, g, k = a.categoryAxis,
                        l = a.initialDate,
                        m = a.initialCategory,
                        p = a.finalDate,
                        q = a.finalCategory,
                        n = a.valueAxis,
                        t = a.valueAxisX,
                        r = a.initialXValue,
                        w = a.finalXValue,
                        z = a.initialValue,
                        x = a.finalValue,
                        u = n.recalculateToPercents,
                        A = b.dataDateFormat;
                    k && (l && (l = d.getDate(l, A, "fff"), a.initialDate = l, e = k.dateToCoordinate(l)), m && (e = k.categoryToCoordinate(m)), p && (p = d.getDate(p, A, "fff"), a.finalDate = p, h = k.dateToCoordinate(p)), q && (h = k.categoryToCoordinate(q)));
                    t && !u && (isNaN(r) || (e = t.getCoordinate(r)), isNaN(w) || (h = t.getCoordinate(w)));
                    n && !u && (isNaN(z) || (f = n.getCoordinate(z)), isNaN(x) || (g = n.getCoordinate(x)));
                    if (!(isNaN(e) || isNaN(h) || isNaN(f) || isNaN(f))) {
                        b.rotate ? (k = [f, g], g = [e,
                            h
                        ]) : (k = [e, h], g = [f, g]);
                        l = a.lineColor;
                        f = d.line(c, k, g, l, a.lineAlpha, a.lineThickness, a.dashLength);
                        e = k;
                        h = g;
                        q = k[1] - k[0];
                        n = g[1] - g[0];
                        0 === q && (q = .01);
                        0 === n && (n = .01);
                        m = q / Math.abs(q);
                        p = n / Math.abs(n);
                        n = 90 * Math.PI / 180 - Math.asin(q / (q * n / Math.abs(q * n) * Math.sqrt(Math.pow(q, 2) + Math.pow(n, 2))));
                        q = Math.abs(5 * Math.cos(n));
                        n = Math.abs(5 * Math.sin(n));
                        e.push(k[1] - m * n, k[0] - m * n);
                        h.push(g[1] + p * q, g[0] + p * q);
                        g = d.polygon(c, e, h, l, .005, 0);
                        c = c.set([g, f]);
                        c.translate(b.marginLeftReal, b.marginTopReal);
                        b.trendLinesSet.push(c);
                        d.setCN(b,
                            f, "trend-line");
                        d.setCN(b, f, "trend-line-" + a.id);
                        a.line = f;
                        a.set = c;
                        if (f = a.initialImage) f = d.processObject(f, d.Image, a.theme), f.chart = b, f.draw(), f.translate(e[0] + f.offsetX, h[0] + f.offsetY), c.push(f.set);
                        if (f = a.finalImage) f = d.processObject(f, d.Image, a.theme), f.chart = b, f.draw(), f.translate(e[1] + f.offsetX, h[1] + f.offsetY), c.push(f.set);
                        g.mouseup(function() {
                            a.handleLineClick()
                        }).mouseover(function() {
                            a.handleLineOver()
                        }).mouseout(function() {
                            a.handleLineOut()
                        });
                        g.touchend && g.touchend(function() {
                            a.handleLineClick()
                        });
                        c.clipRect(0, 0, b.plotAreaWidth, b.plotAreaHeight)
                    }
                },
                handleLineClick: function() {
                    this.fire({
                        type: "click",
                        trendLine: this,
                        chart: this.chart
                    })
                },
                handleLineOver: function() {
                    var a = this.rollOverColor;
                    void 0 !== a && this.line.attr({
                        stroke: a
                    });
                    this.balloonText && (clearTimeout(this.chart.hoverInt), a = this.line.getBBox(), this.chart.showBalloon(this.balloonText, this.lineColor, !0, this.x + a.x + a.width / 2, this.y + a.y + a.height / 2));
                    this.fire({
                        type: "rollOver",
                        trendLine: this,
                        chart: this.chart
                    })
                },
                handleLineOut: function() {
                    this.line.attr({
                        stroke: this.lineColor
                    });
                    this.balloonText && this.chart.hideBalloon();
                    this.fire({
                        type: "rollOut",
                        trendLine: this,
                        chart: this.chart
                    })
                },
                destroy: function() {
                    d.remove(this.set)
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.Image = d.Class({
                construct: function(a) {
                    this.cname = "Image";
                    this.height = this.width = 20;
                    this.rotation = this.offsetY = this.offsetX = 0;
                    this.balloonColor = this.color = "#000000";
                    this.opacity = 1;
                    d.applyTheme(this, a, this.cname)
                },
                draw: function() {
                    var a = this;
                    a.set && a.set.remove();
                    var b = a.chart.container;
                    a.set = b.set();
                    var c, d;
                    a.url ? (c = b.image(a.url, 0, 0, a.width, a.height), d = 1) : a.svgPath && (c = b.path(a.svgPath), c.setAttr("fill", a.color), c.setAttr("stroke", a.outlineColor), b = c.getBBox(), d =
                        Math.min(a.width / b.width, a.height / b.height));
                    c && (c.setAttr("opacity", a.opacity), a.set.rotate(a.rotation), c.translate(-a.width / 2, -a.height / 2, d), a.balloonText && c.mouseover(function() {
                        a.chart.showBalloon(a.balloonText, a.balloonColor, !0)
                    }).mouseout(function() {
                        a.chart.hideBalloon()
                    }).touchend(function() {
                        a.chart.hideBalloon()
                    }).touchstart(function() {
                        a.chart.showBalloon(a.balloonText, a.balloonColor, !0)
                    }), a.set.push(c))
                },
                translate: function(a, b) {
                    this.set && this.set.translate(a, b)
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.circle = function(a, b, c, e, h, f, g, k, l) {
                0 >= b && (b = .001);
                if (void 0 == h || 0 === h) h = .01;
                void 0 === f && (f = "#000000");
                void 0 === g && (g = 0);
                e = {
                    fill: c,
                    stroke: f,
                    "fill-opacity": e,
                    "stroke-width": h,
                    "stroke-opacity": g
                };
                a = isNaN(l) ? a.circle(0, 0, b).attr(e) : a.ellipse(0, 0, b, l).attr(e);
                k && a.gradient("radialGradient", [c, d.adjustLuminosity(c, -.6)]);
                return a
            };
            d.text = function(a, b, c, e, h, f, g, k) {
                f || (f = "middle");
                "right" == f && (f = "end");
                "left" == f && (f = "start");
                isNaN(k) && (k = 1);
                void 0 !== b && (b = String(b), d.isIE &&
                    !d.isModern && (b = b.replace("&amp;", "&"), b = b.replace("&", "&amp;")));
                c = {
                    fill: c,
                    "font-family": e,
                    "font-size": h + "px",
                    opacity: k
                };
                !0 === g && (c["font-weight"] = "bold");
                c["text-anchor"] = f;
                return a.text(b, c)
            };
            d.polygon = function(a, b, c, e, h, f, g, k, l, m, p) {
                isNaN(f) && (f = .01);
                isNaN(k) && (k = h);
                var q = e,
                    n = !1;
                "object" == typeof q && 1 < q.length && (n = !0, q = q[0]);
                void 0 === g && (g = q);
                h = {
                    fill: q,
                    stroke: g,
                    "fill-opacity": h,
                    "stroke-width": f,
                    "stroke-opacity": k
                };
                void 0 !== p && 0 < p && (h["stroke-dasharray"] = p);
                p = d.dx;
                f = d.dy;
                a.handDrawn && (c = d.makeHD(b,
                    c, a.handDrawScatter), b = c[0], c = c[1]);
                g = Math.round;
                m && (b[t] = d.roundTo(b[t], 5), c[t] = d.roundTo(c[t], 5), g = Number);
                k = "M" + (g(b[0]) + p) + "," + (g(c[0]) + f);
                for (var t = 1; t < b.length; t++) m && (b[t] = d.roundTo(b[t], 5), c[t] = d.roundTo(c[t], 5)), k += " L" + (g(b[t]) + p) + "," + (g(c[t]) + f);
                a = a.path(k + " Z").attr(h);
                n && a.gradient("linearGradient", e, l);
                return a
            };
            d.rect = function(a, b, c, e, h, f, g, k, l, m, p) {
                if (isNaN(b) || isNaN(c)) return a.set();
                isNaN(f) && (f = 0);
                void 0 === l && (l = 0);
                void 0 === m && (m = 270);
                isNaN(h) && (h = 0);
                var q = e,
                    n = !1;
                "object" == typeof q &&
                    (q = q[0], n = !0);
                void 0 === g && (g = q);
                void 0 === k && (k = h);
                b = Math.round(b);
                c = Math.round(c);
                var t = 0,
                    r = 0;
                0 > b && (b = Math.abs(b), t = -b);
                0 > c && (c = Math.abs(c), r = -c);
                t += d.dx;
                r += d.dy;
                h = {
                    fill: q,
                    stroke: g,
                    "fill-opacity": h,
                    "stroke-opacity": k
                };
                void 0 !== p && 0 < p && (h["stroke-dasharray"] = p);
                a = a.rect(t, r, b, c, l, f).attr(h);
                n && a.gradient("linearGradient", e, m);
                return a
            };
            d.bullet = function(a, b, c, e, h, f, g, k, l, m, p, q, n) {
                var t;
                "circle" == b && (b = "round");
                switch (b) {
                    case "round":
                        t = d.circle(a, c / 2, e, h, f, g, k);
                        break;
                    case "square":
                        t = d.polygon(a, [-c /
                            2, c / 2, c / 2, -c / 2
                        ], [c / 2, c / 2, -c / 2, -c / 2], e, h, f, g, k, m - 180, void 0, n);
                        break;
                    case "rectangle":
                        t = d.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], e, h, f, g, k, m - 180, void 0, n);
                        break;
                    case "diamond":
                        t = d.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], e, h, f, g, k);
                        break;
                    case "triangleUp":
                        t = d.triangle(a, c, 0, e, h, f, g, k);
                        break;
                    case "triangleDown":
                        t = d.triangle(a, c, 180, e, h, f, g, k);
                        break;
                    case "triangleLeft":
                        t = d.triangle(a, c, 270, e, h, f, g, k);
                        break;
                    case "triangleRight":
                        t = d.triangle(a, c, 90, e, h, f, g, k);
                        break;
                    case "bubble":
                        t = d.circle(a, c / 2, e, h,
                            f, g, k, !0);
                        break;
                    case "line":
                        t = d.line(a, [-c / 2, c / 2], [0, 0], e, h, f, g, k);
                        break;
                    case "yError":
                        t = a.set();
                        t.push(d.line(a, [0, 0], [-c / 2, c / 2], e, h, f));
                        t.push(d.line(a, [-l, l], [-c / 2, -c / 2], e, h, f));
                        t.push(d.line(a, [-l, l], [c / 2, c / 2], e, h, f));
                        break;
                    case "xError":
                        t = a.set(), t.push(d.line(a, [-c / 2, c / 2], [0, 0], e, h, f)), t.push(d.line(a, [-c / 2, -c / 2], [-l, l], e, h, f)), t.push(d.line(a, [c / 2, c / 2], [-l, l], e, h, f))
                }
                t && t.pattern(p, NaN, q);
                return t
            };
            d.triangle = function(a, b, c, d, h, f, g, k) {
                if (void 0 === f || 0 === f) f = 1;
                void 0 === g && (g = "#000");
                void 0 ===
                    k && (k = 0);
                d = {
                    fill: d,
                    stroke: g,
                    "fill-opacity": h,
                    "stroke-width": f,
                    "stroke-opacity": k
                };
                b /= 2;
                var l;
                0 === c && (l = " M" + -b + "," + b + " L0," + -b + " L" + b + "," + b + " Z");
                180 == c && (l = " M" + -b + "," + -b + " L0," + b + " L" + b + "," + -b + " Z");
                90 == c && (l = " M" + -b + "," + -b + " L" + b + ",0 L" + -b + "," + b + " Z");
                270 == c && (l = " M" + -b + ",0 L" + b + "," + b + " L" + b + "," + -b + " Z");
                return a.path(l).attr(d)
            };
            d.line = function(a, b, c, e, h, f, g, k, l, m, p) {
                if (a.handDrawn && !p) return d.handDrawnLine(a, b, c, e, h, f, g, k, l, m, p);
                f = {
                    fill: "none",
                    "stroke-width": f
                };
                void 0 !== g && 0 < g && (f["stroke-dasharray"] =
                    g);
                isNaN(h) || (f["stroke-opacity"] = h);
                e && (f.stroke = e);
                e = Math.round;
                m && (e = Number, b[0] = d.roundTo(b[0], 5), c[0] = d.roundTo(c[0], 5));
                m = d.dx;
                h = d.dy;
                g = "M" + (e(b[0]) + m) + "," + (e(c[0]) + h);
                for (k = 1; k < b.length; k++) b[k] = d.roundTo(b[k], 5), c[k] = d.roundTo(c[k], 5), g += " L" + (e(b[k]) + m) + "," + (e(c[k]) + h);
                if (d.VML) return a.path(g, void 0, !0).attr(f);
                l && (g += " M0,0 L0,0");
                return a.path(g).attr(f)
            };
            d.makeHD = function(a, b, c) {
                for (var d = [], h = [], f = 1; f < a.length; f++)
                    for (var g = Number(a[f - 1]), k = Number(b[f - 1]), l = Number(a[f]), m = Number(b[f]),
                            p = Math.round(Math.sqrt(Math.pow(l - g, 2) + Math.pow(m - k, 2)) / 50) + 1, l = (l - g) / p, m = (m - k) / p, q = 0; q <= p; q++) {
                        var n = k + q * m + Math.random() * c;
                        d.push(g + q * l + Math.random() * c);
                        h.push(n)
                    }
                return [d, h]
            };
            d.handDrawnLine = function(a, b, c, e, h, f, g, k, l, m) {
                var p, q = a.set();
                for (p = 1; p < b.length; p++)
                    for (var n = [b[p - 1], b[p]], t = [c[p - 1], c[p]], t = d.makeHD(n, t, a.handDrawScatter), n = t[0], t = t[1], r = 1; r < n.length; r++) q.push(d.line(a, [n[r - 1], n[r]], [t[r - 1], t[r]], e, h, f + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, g, k, l, m, !0));
                return q
            };
            d.doNothing =
                function(a) {
                    return a
                };
            d.drop = function(a, b, c, d, h, f, g, k) {
                var l = 1 / 180 * Math.PI,
                    m = c - 20,
                    p = Math.sin(m * l) * b,
                    q = Math.cos(m * l) * b,
                    n = Math.sin((m + 40) * l) * b,
                    t = Math.cos((m + 40) * l) * b,
                    r = .8 * b,
                    w = -b / 3,
                    z = b / 3;
                0 === c && (w = -w, z = 0);
                180 == c && (z = 0);
                90 == c && (w = 0);
                270 == c && (w = 0, z = -z);
                c = {
                    fill: d,
                    stroke: g,
                    "stroke-width": f,
                    "stroke-opacity": k,
                    "fill-opacity": h
                };
                b = "M" + p + "," + q + " A" + b + "," + b + ",0,1,1," + n + "," + t + (" A" + r + "," + r + ",0,0,0," + (Math.sin((m + 20) * l) * b + z) + "," + (Math.cos((m + 20) * l) * b + w));
                b += " A" + r + "," + r + ",0,0,0," + p + "," + q;
                return a.path(b, void 0,
                    void 0, "1000,1000").attr(c)
            };
            d.wedge = function(a, b, c, e, h, f, g, k, l, m, p, q, n, t) {
                var r = Math.round;
                f = r(f);
                g = r(g);
                k = r(k);
                var w = r(g / f * k),
                    z = d.VML,
                    x = 359.5 + f / 100;
                359.94 < x && (x = 359.94);
                h >= x && (h = x);
                var u = 1 / 180 * Math.PI,
                    x = b + Math.sin(e * u) * k,
                    A = c - Math.cos(e * u) * w,
                    y = b + Math.sin(e * u) * f,
                    B = c - Math.cos(e * u) * g,
                    D = b + Math.sin((e + h) * u) * f,
                    C = c - Math.cos((e + h) * u) * g,
                    I = b + Math.sin((e + h) * u) * k,
                    u = c - Math.cos((e + h) * u) * w,
                    H = {
                        fill: d.adjustLuminosity(m.fill, -.2),
                        "stroke-opacity": 0,
                        "fill-opacity": m["fill-opacity"]
                    },
                    Q = 0;
                180 < Math.abs(h) && (Q = 1);
                e = a.set();
                var M;
                z && (x = r(10 * x), y = r(10 * y), D = r(10 * D), I = r(10 * I), A = r(10 * A), B = r(10 * B), C = r(10 * C), u = r(10 * u), b = r(10 * b), l = r(10 * l), c = r(10 * c), f *= 10, g *= 10, k *= 10, w *= 10, 1 > Math.abs(h) && 1 >= Math.abs(D - y) && 1 >= Math.abs(C - B) && (M = !0));
                h = "";
                var P;
                q && (H["fill-opacity"] = 0, H["stroke-opacity"] = m["stroke-opacity"] / 2, H.stroke = m.stroke);
                if (0 < l) {
                    P = " M" + x + "," + (A + l) + " L" + y + "," + (B + l);
                    z ? (M || (P += " A" + (b - f) + "," + (l + c - g) + "," + (b + f) + "," + (l + c + g) + "," + y + "," + (B + l) + "," + D + "," + (C + l)), P += " L" + I + "," + (u + l), 0 < k && (M || (P += " B" + (b - k) + "," + (l + c - w) + "," + (b + k) + "," +
                        (l + c + w) + "," + I + "," + (l + u) + "," + x + "," + (l + A)))) : (P += " A" + f + "," + g + ",0," + Q + ",1," + D + "," + (C + l) + " L" + I + "," + (u + l), 0 < k && (P += " A" + k + "," + w + ",0," + Q + ",0," + x + "," + (A + l)));
                    P += " Z";
                    var ia = l;
                    z && (ia /= 10);
                    for (var J = 0; J < ia; J += 10) {
                        var aa = a.path(P, void 0, void 0, "1000,1000").attr(H);
                        e.push(aa);
                        aa.translate(0, -J)
                    }
                    P = a.path(" M" + x + "," + A + " L" + x + "," + (A + l) + " L" + y + "," + (B + l) + " L" + y + "," + B + " L" + x + "," + A + " Z", void 0, void 0, "1000,1000").attr(H);
                    l = a.path(" M" + D + "," + C + " L" + D + "," + (C + l) + " L" + I + "," + (u + l) + " L" + I + "," + u + " L" + D + "," + C + " Z", void 0,
                        void 0, "1000,1000").attr(H);
                    e.push(P);
                    e.push(l)
                }
                z ? (M || (h = " A" + r(b - f) + "," + r(c - g) + "," + r(b + f) + "," + r(c + g) + "," + r(y) + "," + r(B) + "," + r(D) + "," + r(C)), g = " M" + r(x) + "," + r(A) + " L" + r(y) + "," + r(B) + h + " L" + r(I) + "," + r(u)) : g = " M" + x + "," + A + " L" + y + "," + B + (" A" + f + "," + g + ",0," + Q + ",1," + D + "," + C) + " L" + I + "," + u;
                0 < k && (z ? M || (g += " B" + (b - k) + "," + (c - w) + "," + (b + k) + "," + (c + w) + "," + I + "," + u + "," + x + "," + A) : g += " A" + k + "," + w + ",0," + Q + ",0," + x + "," + A);
                a.handDrawn && (k = d.line(a, [x, y], [A, B], m.stroke, m.thickness * Math.random() * a.handDrawThickness, m["stroke-opacity"]),
                    e.push(k));
                a = a.path(g + " Z", void 0, void 0, "1000,1000").attr(m);
                if (p) {
                    k = [];
                    for (w = 0; w < p.length; w++) k.push(d.adjustLuminosity(m.fill, p[w]));
                    "radial" != t || d.isModern || (k = []);
                    0 < k.length && a.gradient(t + "Gradient", k)
                }
                d.isModern && "radial" == t && a.grad && (a.grad.setAttribute("gradientUnits", "userSpaceOnUse"), a.grad.setAttribute("r", f), a.grad.setAttribute("cx", b), a.grad.setAttribute("cy", c));
                a.pattern(q, NaN, n);
                e.wedge = a;
                e.push(a);
                return e
            };
            d.rgb2hex = function(a) {
                return (a = a.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) &&
                    4 === a.length ? "#" + ("0" + parseInt(a[1], 10).toString(16)).slice(-2) + ("0" + parseInt(a[2], 10).toString(16)).slice(-2) + ("0" + parseInt(a[3], 10).toString(16)).slice(-2) : ""
            };
            d.adjustLuminosity = function(a, b) {
                a && -1 != a.indexOf("rgb") && (a = d.rgb2hex(a));
                a = String(a).replace(/[^0-9a-f]/gi, "");
                6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));
                b = b || 0;
                var c = "#",
                    e, h;
                for (h = 0; 3 > h; h++) e = parseInt(a.substr(2 * h, 2), 16), e = Math.round(Math.min(Math.max(0, e + e * b), 255)).toString(16), c += ("00" +
                    e).substr(e.length);
                return c
            }
        })();
        (function() {
            var d = window.AmCharts;
            d.Bezier = d.Class({
                construct: function(a, b, c, e, h, f, g, k, l, m, p) {
                    var q = a.chart,
                        n = d.bezierX,
                        t = d.bezierY;
                    isNaN(q.bezierX) || (n = q.bezierX);
                    isNaN(q.bezierY) || (t = q.bezierY);
                    isNaN(n) && (q.rotate ? (n = 20, t = 4) : (t = 20, n = 4));
                    var r, w;
                    "object" == typeof g && 1 < g.length && (w = !0, r = g, g = g[0]);
                    "object" == typeof k && (k = k[0]);
                    0 === k && (g = "none");
                    f = {
                        fill: g,
                        "fill-opacity": k,
                        "stroke-width": f
                    };
                    void 0 !== l && 0 < l && (f["stroke-dasharray"] = l);
                    isNaN(h) || (f["stroke-opacity"] = h);
                    e && (f.stroke = e);
                    e = "M" + Math.round(b[0]) +
                        "," + Math.round(c[0]) + " ";
                    h = [];
                    for (l = 0; l < b.length; l++) isNaN(b[l]) || isNaN(c[l]) ? (e += this.drawSegment(h, n, t), l < b.length - 1 && (e += "L" + b[l + 1] + "," + c[l + 1] + " "), h = []) : h.push({
                        x: Number(b[l]),
                        y: Number(c[l])
                    });
                    e += this.drawSegment(h, n, t);
                    m ? e += m : d.VML || (e += "M0,0 L0,0");
                    this.path = a.path(e).attr(f);
                    this.node = this.path.node;
                    w && this.path.gradient("linearGradient", r, p)
                },
                drawSegment: function(a, b, c) {
                    var d = "";
                    if (2 < a.length)
                        for (var h = 0; h < a.length - 1; h++) {
                            var f = [],
                                g = a[h - 1],
                                k = a[h],
                                l = a[h + 1],
                                m = a[h + 2];
                            0 === h ? (f.push({
                                    x: k.x,
                                    y: k.y
                                }),
                                f.push({
                                    x: k.x,
                                    y: k.y
                                }), f.push({
                                    x: l.x,
                                    y: l.y
                                }), f.push({
                                    x: m.x,
                                    y: m.y
                                })) : h >= a.length - 2 ? (f.push({
                                x: g.x,
                                y: g.y
                            }), f.push({
                                x: k.x,
                                y: k.y
                            }), f.push({
                                x: l.x,
                                y: l.y
                            }), f.push({
                                x: l.x,
                                y: l.y
                            })) : (f.push({
                                x: g.x,
                                y: g.y
                            }), f.push({
                                x: k.x,
                                y: k.y
                            }), f.push({
                                x: l.x,
                                y: l.y
                            }), f.push({
                                x: m.x,
                                y: m.y
                            }));
                            g = [];
                            k = Math.round;
                            g.push({
                                x: k(f[1].x),
                                y: k(f[1].y)
                            });
                            g.push({
                                x: k((-f[0].x + b * f[1].x + f[2].x) / b),
                                y: k((-f[0].y + c * f[1].y + f[2].y) / c)
                            });
                            g.push({
                                x: k((f[1].x + b * f[2].x - f[3].x) / b),
                                y: k((f[1].y + c * f[2].y - f[3].y) / c)
                            });
                            g.push({
                                x: k(f[2].x),
                                y: k(f[2].y)
                            });
                            d += "C" +
                                g[1].x + "," + g[1].y + "," + g[2].x + "," + g[2].y + "," + g[3].x + "," + g[3].y + " "
                        } else 1 < a.length && (d += "L" + a[1].x + "," + a[1].y);
                    return d
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.AmDraw = d.Class({
                construct: function(a, b, c, e) {
                    d.SVG_NS = "http://www.w3.org/2000/svg";
                    d.SVG_XLINK = "http://www.w3.org/1999/xlink";
                    d.hasSVG = !!document.createElementNS && !!document.createElementNS(d.SVG_NS, "svg").createSVGRect;
                    1 > b && (b = 10);
                    1 > c && (c = 10);
                    this.div = a;
                    this.width = b;
                    this.height = c;
                    this.rBin = document.createElement("div");
                    d.hasSVG ? (d.SVG = !0, b = this.createSvgElement("svg"), a.appendChild(b), this.container = b, this.addDefs(e), this.R = new d.SVGRenderer(this)) : d.isIE && d.VMLRenderer &&
                        (d.VML = !0, d.vmlStyleSheet || (document.namespaces.add("amvml", "urn:schemas-microsoft-com:vml"), 31 > document.styleSheets.length ? (b = document.createStyleSheet(), b.addRule(".amvml", "behavior:url(#default#VML); display:inline-block; antialias:true"), d.vmlStyleSheet = b) : document.styleSheets[0].addRule(".amvml", "behavior:url(#default#VML); display:inline-block; antialias:true")), this.container = a, this.R = new d.VMLRenderer(this, e), this.R.disableSelection(a))
                },
                createSvgElement: function(a) {
                    return document.createElementNS(d.SVG_NS,
                        a)
                },
                circle: function(a, b, c, e) {
                    var h = new d.AmDObject("circle", this);
                    h.attr({
                        r: c,
                        cx: a,
                        cy: b
                    });
                    this.addToContainer(h.node, e);
                    return h
                },
                ellipse: function(a, b, c, e, h) {
                    var f = new d.AmDObject("ellipse", this);
                    f.attr({
                        rx: c,
                        ry: e,
                        cx: a,
                        cy: b
                    });
                    this.addToContainer(f.node, h);
                    return f
                },
                setSize: function(a, b) {
                    0 < a && 0 < b && (this.container.style.width = a + "px", this.container.style.height = b + "px")
                },
                rect: function(a, b, c, e, h, f, g) {
                    var k = new d.AmDObject("rect", this);
                    d.VML && (h = Math.round(100 * h / Math.min(c, e)), c += 2 * f, e += 2 * f, k.bw = f, k.node.style.marginLeft = -f, k.node.style.marginTop = -f);
                    1 > c && (c = 1);
                    1 > e && (e = 1);
                    k.attr({
                        x: a,
                        y: b,
                        width: c,
                        height: e,
                        rx: h,
                        ry: h,
                        "stroke-width": f
                    });
                    this.addToContainer(k.node, g);
                    return k
                },
                image: function(a, b, c, e, h, f) {
                    var g = new d.AmDObject("image", this);
                    g.attr({
                        x: b,
                        y: c,
                        width: e,
                        height: h
                    });
                    this.R.path(g, a);
                    this.addToContainer(g.node, f);
                    return g
                },
                addToContainer: function(a, b) {
                    b || (b = this.container);
                    b.appendChild(a)
                },
                text: function(a, b, c) {
                    return this.R.text(a, b, c)
                },
                path: function(a, b, c, e) {
                    var h = new d.AmDObject("path", this);
                    e || (e = "100,100");
                    h.attr({
                        cs: e
                    });
                    c ? h.attr({
                        dd: a
                    }) : h.attr({
                        d: a
                    });
                    this.addToContainer(h.node, b);
                    return h
                },
                set: function(a) {
                    return this.R.set(a)
                },
                remove: function(a) {
                    if (a) {
                        var b = this.rBin;
                        b.appendChild(a);
                        b.innerHTML = ""
                    }
                },
                renderFix: function() {
                    var a = this.container,
                        b = a.style;
                    b.top = "0px";
                    b.left = "0px";
                    try {
                        var c = a.getBoundingClientRect(),
                            d = c.left - Math.round(c.left),
                            h = c.top - Math.round(c.top);
                        d && (b.left = d + "px");
                        h && (b.top = h + "px")
                    } catch (f) {}
                },
                update: function() {
                    this.R.update()
                },
                addDefs: function(a) {
                    if (d.hasSVG) {
                        var b = this.createSvgElement("desc"),
                            c = this.container;
                        c.setAttribute("version", "1.1");
                        c.style.position = "absolute";
                        this.setSize(this.width, this.height);
                        if (a.accessibleTitle) {
                            var e = this.createSvgElement("text");
                            c.appendChild(e);
                            e.innerHTML = a.accessibleTitle;
                            e.style.opacity = 0
                        }
                        d.rtl && (c.setAttribute("direction", "rtl"), c.style.left = "auto", c.style.right = "0px");
                        a && (a.addCodeCredits && b.appendChild(document.createTextNode("JavaScript chart by amCharts " + a.version)), c.appendChild(b), a.defs && (b = this.createSvgElement("defs"), c.appendChild(b), d.parseDefs(a.defs,
                            b), this.defs = b))
                    }
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.AmDObject = d.Class({
                construct: function(a, b) {
                    this.D = b;
                    this.R = b.R;
                    this.node = this.R.create(this, a);
                    this.y = this.x = 0;
                    this.scale = 1
                },
                attr: function(a) {
                    this.R.attr(this, a);
                    return this
                },
                getAttr: function(a) {
                    return this.node.getAttribute(a)
                },
                setAttr: function(a, b) {
                    this.R.setAttr(this, a, b);
                    return this
                },
                clipRect: function(a, b, c, d) {
                    this.R.clipRect(this, a, b, c, d)
                },
                translate: function(a, b, c, d) {
                    d || (a = Math.round(a), b = Math.round(b));
                    this.R.move(this, a, b, c);
                    this.x = a;
                    this.y = b;
                    this.scale =
                        c;
                    this.angle && this.rotate(this.angle)
                },
                rotate: function(a, b) {
                    this.R.rotate(this, a, b);
                    this.angle = a
                },
                animate: function(a, b, c) {
                    for (var e in a)
                        if (a.hasOwnProperty(e)) {
                            var h = e,
                                f = a[e];
                            c = d.getEffect(c);
                            this.R.animate(this, h, f, b, c)
                        }
                },
                push: function(a) {
                    if (a) {
                        var b = this.node;
                        b.appendChild(a.node);
                        var c = a.clipPath;
                        c && b.appendChild(c);
                        (a = a.grad) && b.appendChild(a)
                    }
                },
                text: function(a) {
                    this.R.setText(this, a)
                },
                remove: function() {
                    this.stop();
                    this.R.remove(this)
                },
                clear: function() {
                    var a = this.node;
                    if (a.hasChildNodes())
                        for (; 1 <=
                            a.childNodes.length;) a.removeChild(a.firstChild)
                },
                hide: function() {
                    this.setAttr("visibility", "hidden")
                },
                show: function() {
                    this.setAttr("visibility", "visible")
                },
                getBBox: function() {
                    return this.R.getBBox(this)
                },
                toFront: function() {
                    var a = this.node;
                    if (a) {
                        this.prevNextNode = a.nextSibling;
                        var b = a.parentNode;
                        b && b.appendChild(a)
                    }
                },
                toPrevious: function() {
                    var a = this.node;
                    a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null)
                },
                toBack: function() {
                    var a = this.node;
                    if (a) {
                        this.prevNextNode = a.nextSibling;
                        var b = a.parentNode;
                        if (b) {
                            var c = b.firstChild;
                            c && b.insertBefore(a, c)
                        }
                    }
                },
                mouseover: function(a) {
                    this.R.addListener(this, "mouseover", a);
                    return this
                },
                mouseout: function(a) {
                    this.R.addListener(this, "mouseout", a);
                    return this
                },
                click: function(a) {
                    this.R.addListener(this, "click", a);
                    return this
                },
                dblclick: function(a) {
                    this.R.addListener(this, "dblclick", a);
                    return this
                },
                mousedown: function(a) {
                    this.R.addListener(this, "mousedown", a);
                    return this
                },
                mouseup: function(a) {
                    this.R.addListener(this, "mouseup", a);
                    return this
                },
                touchmove: function(a) {
                    this.R.addListener(this,
                        "touchmove", a);
                    return this
                },
                touchstart: function(a) {
                    this.R.addListener(this, "touchstart", a);
                    return this
                },
                touchend: function(a) {
                    this.R.addListener(this, "touchend", a);
                    return this
                },
                keyup: function(a) {
                    this.R.addListener(this, "keyup", a);
                    return this
                },
                focus: function(a) {
                    this.R.addListener(this, "focus", a);
                    return this
                },
                blur: function(a) {
                    this.R.addListener(this, "blur", a);
                    return this
                },
                contextmenu: function(a) {
                    this.node.addEventListener ? this.node.addEventListener("contextmenu", a, !0) : this.R.addListener(this, "contextmenu",
                        a);
                    return this
                },
                stop: function() {
                    d.removeFromArray(this.R.animations, this.an_translate);
                    d.removeFromArray(this.R.animations, this.an_y);
                    d.removeFromArray(this.R.animations, this.an_x)
                },
                length: function() {
                    return this.node.childNodes.length
                },
                gradient: function(a, b, c) {
                    this.R.gradient(this, a, b, c)
                },
                pattern: function(a, b, c) {
                    a && this.R.pattern(this, a, b, c)
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.VMLRenderer = d.Class({
                construct: function(a, b) {
                    this.chart = b;
                    this.D = a;
                    this.cNames = {
                        circle: "oval",
                        ellipse: "oval",
                        rect: "roundrect",
                        path: "shape"
                    };
                    this.styleMap = {
                        x: "left",
                        y: "top",
                        width: "width",
                        height: "height",
                        "font-family": "fontFamily",
                        "font-size": "fontSize",
                        visibility: "visibility"
                    }
                },
                create: function(a, b) {
                    var c;
                    if ("group" == b) c = document.createElement("div"), a.type = "div";
                    else if ("text" == b) c = document.createElement("div"), a.type = "text";
                    else if ("image" == b) c = document.createElement("img"),
                        a.type = "image";
                    else {
                        a.type = "shape";
                        a.shapeType = this.cNames[b];
                        c = document.createElement("amvml:" + this.cNames[b]);
                        var d = document.createElement("amvml:stroke");
                        c.appendChild(d);
                        a.stroke = d;
                        var h = document.createElement("amvml:fill");
                        c.appendChild(h);
                        a.fill = h;
                        h.className = "amvml";
                        d.className = "amvml";
                        c.className = "amvml"
                    }
                    c.style.position = "absolute";
                    c.style.top = 0;
                    c.style.left = 0;
                    return c
                },
                path: function(a, b) {
                    a.node.setAttribute("src", b)
                },
                setAttr: function(a, b, c) {
                    if (void 0 !== c) {
                        var e;
                        8 === document.documentMode &&
                            (e = !0);
                        var h = a.node,
                            f = a.type,
                            g = h.style;
                        "r" == b && (g.width = 2 * c, g.height = 2 * c);
                        "oval" == a.shapeType && ("rx" == b && (g.width = 2 * c), "ry" == b && (g.height = 2 * c));
                        "roundrect" == a.shapeType && ("width" != b && "height" != b || --c);
                        "cursor" == b && (g.cursor = c);
                        "cx" == b && (g.left = c - d.removePx(g.width) / 2);
                        "cy" == b && (g.top = c - d.removePx(g.height) / 2);
                        var k = this.styleMap[b];
                        "width" == k && 0 > c && (c = 0);
                        void 0 !== k && (g[k] = c);
                        "text" == f && ("text-anchor" == b && (a.anchor = c, k = h.clientWidth, "end" == c && (g.marginLeft = -k + "px"), "middle" == c && (g.marginLeft = -(k / 2) +
                            "px", g.textAlign = "center"), "start" == c && (g.marginLeft = "0px")), "fill" == b && (g.color = c), "font-weight" == b && (g.fontWeight = c));
                        if (g = a.children)
                            for (k = 0; k < g.length; k++) g[k].setAttr(b, c);
                        if ("shape" == f) {
                            "cs" == b && (h.style.width = "100px", h.style.height = "100px", h.setAttribute("coordsize", c));
                            "d" == b && h.setAttribute("path", this.svgPathToVml(c));
                            "dd" == b && h.setAttribute("path", c);
                            f = a.stroke;
                            a = a.fill;
                            "stroke" == b && (e ? f.color = c : f.setAttribute("color", c));
                            "stroke-width" == b && (e ? f.weight = c : f.setAttribute("weight", c));
                            "stroke-opacity" ==
                            b && (e ? f.opacity = c : f.setAttribute("opacity", c));
                            "stroke-dasharray" == b && (g = "solid", 0 < c && 3 > c && (g = "dot"), 3 <= c && 6 >= c && (g = "dash"), 6 < c && (g = "longdash"), e ? f.dashstyle = g : f.setAttribute("dashstyle", g));
                            if ("fill-opacity" == b || "opacity" == b) 0 === c ? e ? a.on = !1 : a.setAttribute("on", !1) : e ? a.opacity = c : a.setAttribute("opacity", c);
                            "fill" == b && (e ? a.color = c : a.setAttribute("color", c));
                            "rx" == b && (e ? h.arcSize = c + "%" : h.setAttribute("arcsize", c + "%"))
                        }
                    }
                },
                attr: function(a, b) {
                    for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c])
                },
                text: function(a, b, c) {
                    var e = new d.AmDObject("text", this.D),
                        h = e.node;
                    h.style.whiteSpace = "pre";
                    h.innerHTML = a;
                    this.D.addToContainer(h, c);
                    this.attr(e, b);
                    return e
                },
                getBBox: function(a) {
                    return this.getBox(a.node)
                },
                getBox: function(a) {
                    var b = a.offsetLeft,
                        c = a.offsetTop,
                        d = a.offsetWidth,
                        h = a.offsetHeight,
                        f;
                    if (a.hasChildNodes()) {
                        var g, k, l;
                        for (l = 0; l < a.childNodes.length; l++) {
                            f = this.getBox(a.childNodes[l]);
                            var m = f.x;
                            isNaN(m) || (isNaN(g) ? g = m : m < g && (g = m));
                            var p = f.y;
                            isNaN(p) || (isNaN(k) ? k = p : p < k && (k = p));
                            m = f.width + m;
                            isNaN(m) ||
                                (d = Math.max(d, m));
                            f = f.height + p;
                            isNaN(f) || (h = Math.max(h, f))
                        }
                        0 > g && (b += g);
                        0 > k && (c += k)
                    }
                    return {
                        x: b,
                        y: c,
                        width: d,
                        height: h
                    }
                },
                setText: function(a, b) {
                    var c = a.node;
                    c && (c.innerHTML = b);
                    this.setAttr(a, "text-anchor", a.anchor)
                },
                addListener: function(a, b, c) {
                    a.node["on" + b] = c
                },
                move: function(a, b, c) {
                    var e = a.node,
                        h = e.style;
                    "text" == a.type && (c -= d.removePx(h.fontSize) / 2 - 1);
                    "oval" == a.shapeType && (b -= d.removePx(h.width) / 2, c -= d.removePx(h.height) / 2);
                    a = a.bw;
                    isNaN(a) || (b -= a, c -= a);
                    isNaN(b) || isNaN(c) || (e.style.left = b + "px", e.style.top =
                        c + "px")
                },
                svgPathToVml: function(a) {
                    var b = a.split(" ");
                    a = "";
                    var c, d = Math.round,
                        h;
                    for (h = 0; h < b.length; h++) {
                        var f = b[h],
                            g = f.substring(0, 1),
                            f = f.substring(1),
                            k = f.split(","),
                            l = d(k[0]) + "," + d(k[1]);
                        "M" == g && (a += " m " + l);
                        "L" == g && (a += " l " + l);
                        "Z" == g && (a += " x e");
                        if ("Q" == g) {
                            var m = c.length,
                                p = c[m - 1],
                                q = k[0],
                                n = k[1],
                                l = k[2],
                                t = k[3];
                            c = d(c[m - 2] / 3 + 2 / 3 * q);
                            p = d(p / 3 + 2 / 3 * n);
                            q = d(2 / 3 * q + l / 3);
                            n = d(2 / 3 * n + t / 3);
                            a += " c " + c + "," + p + "," + q + "," + n + "," + l + "," + t
                        }
                        "C" == g && (a += " c " + k[0] + "," + k[1] + "," + k[2] + "," + k[3] + "," + k[4] + "," + k[5]);
                        "A" == g && (a += " wa " +
                            f);
                        "B" == g && (a += " at " + f);
                        c = k
                    }
                    return a
                },
                animate: function(a, b, c, d, h) {
                    var f = a.node,
                        g = this.chart;
                    a.animationFinished = !1;
                    if ("translate" == b) {
                        b = c.split(",");
                        c = b[1];
                        var k = f.offsetTop;
                        g.animate(a, "left", f.offsetLeft, b[0], d, h, "px");
                        g.animate(a, "top", k, c, d, h, "px")
                    }
                },
                clipRect: function(a, b, c, d, h) {
                    a = a.node;
                    0 === b && 0 === c ? (a.style.width = d + "px", a.style.height = h + "px", a.style.overflow = "hidden") : a.style.clip = "rect(" + c + "px " + (b + d) + "px " + (c + h) + "px " + b + "px)"
                },
                rotate: function(a, b, c) {
                    if (0 !== Number(b)) {
                        var e = a.node;
                        a = e.style;
                        c || (c = this.getBGColor(e.parentNode));
                        a.backgroundColor = c;
                        a.paddingLeft = 1;
                        c = b * Math.PI / 180;
                        var h = Math.cos(c),
                            f = Math.sin(c),
                            g = d.removePx(a.left),
                            k = d.removePx(a.top),
                            l = e.offsetWidth,
                            e = e.offsetHeight;
                        b /= Math.abs(b);
                        a.left = g + l / 2 - l / 2 * Math.cos(c) - b * e / 2 * Math.sin(c) + 3;
                        a.top = k - b * l / 2 * Math.sin(c) + b * e / 2 * Math.sin(c);
                        a.cssText = a.cssText + "; filter:progid:DXImageTransform.Microsoft.Matrix(M11='" + h + "', M12='" + -f + "', M21='" + f + "', M22='" + h + "', sizingmethod='auto expand');"
                    }
                },
                getBGColor: function(a) {
                    var b = "#FFFFFF";
                    if (a.style) {
                        var c =
                            a.style.backgroundColor;
                        "" !== c ? b = c : a.parentNode && (b = this.getBGColor(a.parentNode))
                    }
                    return b
                },
                set: function(a) {
                    var b = new d.AmDObject("group", this.D);
                    this.D.container.appendChild(b.node);
                    if (a) {
                        var c;
                        for (c = 0; c < a.length; c++) b.push(a[c])
                    }
                    return b
                },
                gradient: function(a, b, c, d) {
                    var h = "";
                    "radialGradient" == b && (b = "gradientradial", c.reverse());
                    "linearGradient" == b && (b = "gradient");
                    var f;
                    for (f = 0; f < c.length; f++) h += Math.round(100 * f / (c.length - 1)) + "% " + c[f], f < c.length - 1 && (h += ",");
                    a = a.fill;
                    90 == d ? d = 0 : 270 == d ? d = 180 : 180 ==
                        d ? d = 90 : 0 === d && (d = 270);
                    8 === document.documentMode ? (a.type = b, a.angle = d) : (a.setAttribute("type", b), a.setAttribute("angle", d));
                    h && (a.colors.value = h)
                },
                remove: function(a) {
                    a.clipPath && this.D.remove(a.clipPath);
                    this.D.remove(a.node)
                },
                disableSelection: function(a) {
                    a.onselectstart = function() {
                        return !1
                    };
                    a.style.cursor = "default"
                },
                pattern: function(a, b, c, e) {
                    c = a.node;
                    a = a.fill;
                    var h = "none";
                    b.color && (h = b.color);
                    c.fillColor = h;
                    b = b.url;
                    d.isAbsolute(b) || (b = e + b);
                    8 === document.documentMode ? (a.type = "tile", a.src = b) : (a.setAttribute("type",
                        "tile"), a.setAttribute("src", b))
                },
                update: function() {}
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.SVGRenderer = d.Class({
                construct: function(a) {
                    this.D = a;
                    this.animations = []
                },
                create: function(a, b) {
                    return document.createElementNS(d.SVG_NS, b)
                },
                attr: function(a, b) {
                    for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c])
                },
                setAttr: function(a, b, c) {
                    void 0 !== c && a.node.setAttribute(b, c)
                },
                animate: function(a, b, c, e, h) {
                    a.animationFinished = !1;
                    var f = a.node;
                    a["an_" + b] && d.removeFromArray(this.animations, a["an_" + b]);
                    "translate" == b ? (f = (f = f.getAttribute("transform")) ? String(f).substring(10,
                        f.length - 1) : "0,0", f = f.split(", ").join(" "), f = f.split(" ").join(","), 0 === f && (f = "0,0")) : f = Number(f.getAttribute(b));
                    c = {
                        obj: a,
                        frame: 0,
                        attribute: b,
                        from: f,
                        to: c,
                        time: e,
                        effect: h
                    };
                    this.animations.push(c);
                    a["an_" + b] = c
                },
                update: function() {
                    var a, b = this.animations;
                    for (a = b.length - 1; 0 <= a; a--) {
                        var c = b[a],
                            e = c.time * d.updateRate,
                            h = c.frame + 1,
                            f = c.obj,
                            g = c.attribute,
                            k, l, m;
                        if (h <= e) {
                            c.frame++;
                            if ("translate" == g) {
                                k = c.from.split(",");
                                g = Number(k[0]);
                                k = Number(k[1]);
                                isNaN(k) && (k = 0);
                                l = c.to.split(",");
                                m = Number(l[0]);
                                l = Number(l[1]);
                                m = 0 === m - g ? m : Math.round(d[c.effect](0, h, g, m - g, e));
                                c = 0 === l - k ? l : Math.round(d[c.effect](0, h, k, l - k, e));
                                g = "transform";
                                if (isNaN(m) || isNaN(c)) continue;
                                c = "translate(" + m + "," + c + ")"
                            } else l = Number(c.from), k = Number(c.to), m = k - l, c = d[c.effect](0, h, l, m, e), isNaN(c) && (c = k), 0 === m && this.animations.splice(a, 1);
                            this.setAttr(f, g, c)
                        } else "translate" == g ? (l = c.to.split(","), m = Number(l[0]), l = Number(l[1]), f.translate(m, l)) : (k = Number(c.to), this.setAttr(f, g, k)), f.animationFinished = !0, this.animations.splice(a, 1)
                    }
                },
                getBBox: function(a) {
                    if (a =
                        a.node) try {
                        return a.getBBox()
                    } catch (b) {}
                    return {
                        width: 0,
                        height: 0,
                        x: 0,
                        y: 0
                    }
                },
                path: function(a, b) {
                    a.node.setAttributeNS(d.SVG_XLINK, "xlink:href", b)
                },
                clipRect: function(a, b, c, e, h) {
                    var f = a.node,
                        g = a.clipPath;
                    g && this.D.remove(g);
                    var k = f.parentNode;
                    k && (f = document.createElementNS(d.SVG_NS, "clipPath"), g = d.getUniqueId(), f.setAttribute("id", g), this.D.rect(b, c, e, h, 0, 0, f), k.appendChild(f), b = "#", d.baseHref && !d.isIE && (b = this.removeTarget(window.location.href) + b), this.setAttr(a, "clip-path", "url(" + b + g + ")"), this.clipPathC++,
                        a.clipPath = f)
                },
                text: function(a, b, c) {
                    var e = new d.AmDObject("text", this.D);
                    a = String(a).split("\n");
                    var h = d.removePx(b["font-size"]),
                        f;
                    for (f = 0; f < a.length; f++) {
                        var g = this.create(null, "tspan");
                        g.appendChild(document.createTextNode(a[f]));
                        g.setAttribute("y", (h + 2) * f + Math.round(h / 2));
                        g.setAttribute("x", 0);
                        e.node.appendChild(g)
                    }
                    e.node.setAttribute("y", Math.round(h / 2));
                    this.attr(e, b);
                    this.D.addToContainer(e.node, c);
                    return e
                },
                setText: function(a, b) {
                    var c = a.node;
                    c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)))
                },
                move: function(a, b, c, d) {
                    isNaN(b) && (b = 0);
                    isNaN(c) && (c = 0);
                    b = "translate(" + b + "," + c + ")";
                    d && (b = b + " scale(" + d + ")");
                    this.setAttr(a, "transform", b)
                },
                rotate: function(a, b) {
                    var c = a.node.getAttribute("transform"),
                        d = "rotate(" + b + ")";
                    c && (d = c + " " + d);
                    this.setAttr(a, "transform", d)
                },
                set: function(a) {
                    var b = new d.AmDObject("g", this.D);
                    this.D.container.appendChild(b.node);
                    if (a) {
                        var c;
                        for (c = 0; c < a.length; c++) b.push(a[c])
                    }
                    return b
                },
                addListener: function(a, b, c) {
                    a.node["on" + b] = c
                },
                gradient: function(a, b, c, e) {
                    var h = a.node,
                        f = a.grad;
                    f && this.D.remove(f);
                    b = document.createElementNS(d.SVG_NS, b);
                    f = d.getUniqueId();
                    b.setAttribute("id", f);
                    if (!isNaN(e)) {
                        var g = 0,
                            k = 0,
                            l = 0,
                            m = 0;
                        90 == e ? l = 100 : 270 == e ? m = 100 : 180 == e ? g = 100 : 0 === e && (k = 100);
                        b.setAttribute("x1", g + "%");
                        b.setAttribute("x2", k + "%");
                        b.setAttribute("y1", l + "%");
                        b.setAttribute("y2", m + "%")
                    }
                    for (e = 0; e < c.length; e++) g = document.createElementNS(d.SVG_NS, "stop"), k = 100 * e / (c.length - 1), 0 === e && (k = 0), g.setAttribute("offset", k + "%"), g.setAttribute("stop-color", c[e]), b.appendChild(g);
                    h.parentNode.appendChild(b);
                    c = "#";
                    d.baseHref && !d.isIE && (c = this.removeTarget(window.location.href) + c);
                    h.setAttribute("fill", "url(" + c + f + ")");
                    a.grad = b
                },
                removeTarget: function(a) {
                    return a.split("#")[0]
                },
                pattern: function(a, b, c, e) {
                    var h = a.node;
                    isNaN(c) && (c = 1);
                    var f = a.patternNode;
                    f && this.D.remove(f);
                    var f = document.createElementNS(d.SVG_NS, "pattern"),
                        g = d.getUniqueId(),
                        k = b;
                    b.url && (k = b.url);
                    d.isAbsolute(k) || -1 != k.indexOf("data:image") || (k = e + k);
                    e = Number(b.width);
                    isNaN(e) && (e = 4);
                    var l = Number(b.height);
                    isNaN(l) && (l = 4);
                    e /= c;
                    l /= c;
                    c = b.x;
                    isNaN(c) &&
                        (c = 0);
                    var m = -Math.random() * Number(b.randomX);
                    isNaN(m) || (c = m);
                    m = b.y;
                    isNaN(m) && (m = 0);
                    var p = -Math.random() * Number(b.randomY);
                    isNaN(p) || (m = p);
                    f.setAttribute("id", g);
                    f.setAttribute("width", e);
                    f.setAttribute("height", l);
                    f.setAttribute("patternUnits", "userSpaceOnUse");
                    f.setAttribute("xlink:href", k);
                    b.color && (p = document.createElementNS(d.SVG_NS, "rect"), p.setAttributeNS(null, "height", e), p.setAttributeNS(null, "width", l), p.setAttributeNS(null, "fill", b.color), f.appendChild(p));
                    this.D.image(k, 0, 0, e, l, f).translate(c,
                        m);
                    k = "#";
                    d.baseHref && !d.isIE && (k = this.removeTarget(window.location.href) + k);
                    h.setAttribute("fill", "url(" + k + g + ")");
                    a.patternNode = f;
                    h.parentNode.appendChild(f)
                },
                remove: function(a) {
                    a.clipPath && this.D.remove(a.clipPath);
                    a.grad && this.D.remove(a.grad);
                    a.patternNode && this.D.remove(a.patternNode);
                    this.D.remove(a.node)
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.AmLegend = d.Class({
                construct: function(a) {
                    this.enabled = !0;
                    this.cname = "AmLegend";
                    this.createEvents("rollOverMarker", "rollOverItem", "rollOutMarker", "rollOutItem", "showItem", "hideItem", "clickMarker", "clickLabel");
                    this.position = "bottom";
                    this.borderColor = this.color = "#000000";
                    this.borderAlpha = 0;
                    this.markerLabelGap = 5;
                    this.verticalGap = 10;
                    this.align = "left";
                    this.horizontalGap = 0;
                    this.spacing = 10;
                    this.markerDisabledColor = "#AAB3B3";
                    this.markerType = "square";
                    this.markerSize = 16;
                    this.markerBorderThickness =
                        this.markerBorderAlpha = 1;
                    this.marginBottom = this.marginTop = 0;
                    this.marginLeft = this.marginRight = 20;
                    this.autoMargins = !0;
                    this.valueWidth = 50;
                    this.switchable = !0;
                    this.switchType = "x";
                    this.switchColor = "#FFFFFF";
                    this.rollOverColor = "#CC0000";
                    this.reversedOrder = !1;
                    this.labelText = "[[title]]";
                    this.valueText = "[[value]]";
                    this.accessibleLabel = "[[title]]";
                    this.useMarkerColorForLabels = !1;
                    this.rollOverGraphAlpha = 1;
                    this.textClickEnabled = !1;
                    this.equalWidths = !0;
                    this.backgroundColor = "#FFFFFF";
                    this.backgroundAlpha = 0;
                    this.useGraphSettings = !1;
                    this.showEntries = !0;
                    this.labelDx = 0;
                    d.applyTheme(this, a, this.cname)
                },
                setData: function(a) {
                    this.legendData = a;
                    this.invalidateSize()
                },
                invalidateSize: function() {
                    this.destroy();
                    this.entries = [];
                    this.valueLabels = [];
                    var a = this.legendData;
                    this.enabled && (d.ifArray(a) || d.ifArray(this.data)) && this.drawLegend()
                },
                drawLegend: function() {
                    var a = this.chart,
                        b = this.position,
                        c = this.width,
                        e = a.divRealWidth,
                        h = a.divRealHeight,
                        f = this.div,
                        g = this.legendData;
                    this.data && (g = this.combineLegend ? this.legendData.concat(this.data) :
                        this.data);
                    isNaN(this.fontSize) && (this.fontSize = a.fontSize);
                    this.maxColumnsReal = this.maxColumns;
                    if ("right" == b || "left" == b) this.maxColumnsReal = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);
                    else if (this.autoMargins) {
                        this.marginRight = a.marginRight;
                        this.marginLeft = a.marginLeft;
                        var k = a.autoMarginOffset;
                        "bottom" == b ? (this.marginBottom = k, this.marginTop = 0) : (this.marginTop = k, this.marginBottom = 0)
                    }
                    c = void 0 !== c ? d.toCoordinate(c, e) : "right" != b && "left" != b ? a.realWidth : 0 < this.ieW ? this.ieW : a.realWidth;
                    "outside" ==
                    b ? (c = f.offsetWidth, h = f.offsetHeight, f.clientHeight && (c = f.clientWidth, h = f.clientHeight)) : (isNaN(c) || (f.style.width = c + "px"), f.className = "amChartsLegend " + a.classNamePrefix + "-legend-div");
                    this.divWidth = c;
                    (b = this.container) ? (b.container.innerHTML = "", f.appendChild(b.container), b.width = c, b.height = h, b.setSize(c, h), b.addDefs(a)) : b = new d.AmDraw(f, c, h, a);
                    this.container = b;
                    this.lx = 0;
                    this.ly = 8;
                    h = this.markerSize;
                    h > this.fontSize && (this.ly = h / 2 - 1);
                    0 < h && (this.lx += h + this.markerLabelGap);
                    this.titleWidth = 0;
                    if (h = this.title) h =
                        d.text(this.container, h, this.color, a.fontFamily, this.fontSize, "start", !0), d.setCN(a, h, "legend-title"), h.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = h.getBBox(), this.titleWidth = a.width + 15, this.titleHeight = a.height + 6;
                    this.index = this.maxLabelWidth = 0;
                    if (this.showEntries) {
                        for (a = 0; a < g.length; a++) this.createEntry(g[a]);
                        for (a = this.index = 0; a < g.length; a++) this.createValue(g[a])
                    }
                    this.arrangeEntries();
                    this.updateValues()
                },
                arrangeEntries: function() {
                    var a = this.position,
                        b = this.marginLeft +
                        this.titleWidth,
                        c = this.marginRight,
                        e = this.marginTop,
                        h = this.marginBottom,
                        f = this.horizontalGap,
                        g = this.div,
                        k = this.divWidth,
                        l = this.maxColumnsReal,
                        m = this.verticalGap,
                        p = this.spacing,
                        q = k - c - b,
                        n = 0,
                        t = 0,
                        r = this.container;
                    this.set && this.set.remove();
                    var w = r.set();
                    this.set = w;
                    var z = r.set();
                    w.push(z);
                    var x = this.entries,
                        u, A;
                    for (A = 0; A < x.length; A++) {
                        u = x[A].getBBox();
                        var y = u.width;
                        y > n && (n = y);
                        u = u.height;
                        u > t && (t = u)
                    }
                    var y = t = 0,
                        B = f,
                        D = 0,
                        C = 0;
                    for (A = 0; A < x.length; A++) {
                        var I = x[A];
                        this.reversedOrder && (I = x[x.length - A - 1]);
                        u = I.getBBox();
                        var H;
                        this.equalWidths ? H = y * (n + p + this.markerLabelGap) : (H = B, B = B + u.width + f + p);
                        H + u.width > q && 0 < A && 0 !== y && (t++, H = y = 0, B = H + u.width + f + p, D = D + C + m, C = 0);
                        u.height > C && (C = u.height);
                        I.translate(H, D);
                        y++;
                        !isNaN(l) && y >= l && (y = 0, t++, D = D + C + m, B = f, C = 0);
                        z.push(I)
                    }
                    u = z.getBBox();
                    l = u.height + 2 * m - 1;
                    "left" == a || "right" == a ? (p = u.width + 2 * f, k = p + b + c, g.style.width = k + "px", this.ieW = k) : p = k - b - c - 1;
                    c = d.polygon(this.container, [0, p, p, 0], [0, 0, l, l], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);
                    d.setCN(this.chart,
                        c, "legend-bg");
                    w.push(c);
                    w.translate(b, e);
                    c.toBack();
                    b = f;
                    if ("top" == a || "bottom" == a || "absolute" == a || "outside" == a) "center" == this.align ? b = f + (p - u.width) / 2 : "right" == this.align && (b = f + p - u.width);
                    z.translate(b, m + 1);
                    this.titleHeight > l && (l = this.titleHeight);
                    e = l + e + h + 1;
                    0 > e && (e = 0);
                    "absolute" != a && "outside" != a && e > this.chart.divRealHeight && (g.style.top = "0px");
                    g.style.height = Math.round(e) + "px";
                    r.setSize(this.divWidth, e)
                },
                createEntry: function(a) {
                    if (!1 !== a.visibleInLegend && !a.hideFromLegend) {
                        var b = this,
                            c = b.chart,
                            e = b.useGraphSettings,
                            h = a.markerType;
                        h && (e = !1);
                        a.legendEntryWidth = b.markerSize;
                        h || (h = b.markerType);
                        var f = a.color,
                            g = a.alpha;
                        a.legendKeyColor && (f = a.legendKeyColor());
                        a.legendKeyAlpha && (g = a.legendKeyAlpha());
                        var k;
                        !0 === a.hidden && (k = f = b.markerDisabledColor);
                        var l = a.pattern,
                            m, p = a.customMarker;
                        p || (p = b.customMarker);
                        var q = b.container,
                            n = b.markerSize,
                            t = 0,
                            r = 0,
                            w = n / 2;
                        if (e) {
                            e = a.type;
                            b.switchType = void 0;
                            if ("line" == e || "step" == e || "smoothedLine" == e || "ohlc" == e) m = q.set(), a.hidden || (f = a.lineColorR, k = a.bulletBorderColorR), t = d.line(q, [0, 2 *
                                n
                            ], [n / 2, n / 2], f, a.lineAlpha, a.lineThickness, a.dashLength), d.setCN(c, t, "graph-stroke"), m.push(t), a.bullet && (a.hidden || (f = a.bulletColorR), t = d.bullet(q, a.bullet, a.bulletSize, f, a.bulletAlpha, a.bulletBorderThickness, k, a.bulletBorderAlpha)) && (d.setCN(c, t, "graph-bullet"), t.translate(n + 1, n / 2), m.push(t)), w = 0, t = n, r = n / 3;
                            else {
                                a.getGradRotation && (m = a.getGradRotation(), 0 === m && (m = 180));
                                t = a.fillColorsR;
                                !0 === a.hidden && (t = f);
                                if (m = b.createMarker("rectangle", t, a.fillAlphas, a.lineThickness, f, a.lineAlpha, m, l, a.dashLength)) w =
                                    n, m.translate(w, n / 2);
                                t = n
                            }
                            d.setCN(c, m, "graph-" + e);
                            d.setCN(c, m, "graph-" + a.id)
                        } else if (p) m = q.image(p, 0, 0, n, n);
                        else {
                            var z;
                            isNaN(b.gradientRotation) || (z = 180 + b.gradientRotation);
                            (m = b.createMarker(h, f, g, void 0, void 0, void 0, z, l)) && m.translate(n / 2, n / 2)
                        }
                        d.setCN(c, m, "legend-marker");
                        b.addListeners(m, a);
                        q = q.set([m]);
                        b.switchable && a.switchable && q.setAttr("cursor", "pointer");
                        void 0 !== a.id && d.setCN(c, q, "legend-item-" + a.id);
                        d.setCN(c, q, a.className, !0);
                        k = b.switchType;
                        var x;
                        k && "none" != k && 0 < n && ("x" == k ? (x = b.createX(),
                            x.translate(n / 2, n / 2)) : x = b.createV(), x.dItem = a, !0 !== a.hidden ? "x" == k ? x.hide() : x.show() : "x" != k && x.hide(), b.switchable || x.hide(), b.addListeners(x, a), a.legendSwitch = x, q.push(x), d.setCN(c, x, "legend-switch"));
                        k = b.color;
                        a.showBalloon && b.textClickEnabled && void 0 !== b.selectedColor && (k = b.selectedColor);
                        b.useMarkerColorForLabels && !l && (k = f);
                        !0 === a.hidden && (k = b.markerDisabledColor);
                        f = d.massReplace(b.labelText, {
                            "[[title]]": a.title
                        });
                        void 0 !== b.tabIndex && (q.setAttr("tabindex", b.tabIndex), q.setAttr("role", "menuitem"),
                            q.keyup(function(c) {
                                13 == c.keyCode && b.clickMarker(a, c)
                            }));
                        c.accessible && b.accessibleLabel && (l = d.massReplace(b.accessibleLabel, {
                            "[[title]]": a.title
                        }), c.makeAccessible(q, l));
                        l = b.fontSize;
                        m && (n <= l && (n = n / 2 + b.ly - l / 2 + (l + 2 - n) / 2 - r, m.translate(w, n), x && x.translate(x.x, n)), a.legendEntryWidth = m.getBBox().width);
                        var u;
                        f && (f = d.fixBrakes(f), a.legendTextReal = f, u = b.labelWidth, u = isNaN(u) ? d.text(b.container, f, k, c.fontFamily, l, "start") : d.wrappedText(b.container, f, k, c.fontFamily, l, "start", !1, u, 0), d.setCN(c, u, "legend-label"),
                            u.translate(b.lx + t, b.ly), q.push(u), b.labelDx = t, c = u.getBBox().width, b.maxLabelWidth < c && (b.maxLabelWidth = c));
                        b.entries[b.index] = q;
                        a.legendEntry = b.entries[b.index];
                        a.legendMarker = m;
                        a.legendLabel = u;
                        b.index++
                    }
                },
                addListeners: function(a, b) {
                    var c = this;
                    a && a.mouseover(function(a) {
                        c.rollOverMarker(b, a)
                    }).mouseout(function(a) {
                        c.rollOutMarker(b, a)
                    }).click(function(a) {
                        c.clickMarker(b, a)
                    })
                },
                rollOverMarker: function(a, b) {
                    this.switchable && this.dispatch("rollOverMarker", a, b);
                    this.dispatch("rollOverItem", a, b)
                },
                rollOutMarker: function(a,
                    b) {
                    this.switchable && this.dispatch("rollOutMarker", a, b);
                    this.dispatch("rollOutItem", a, b)
                },
                clickMarker: function(a, b) {
                    this.switchable && (!0 === a.hidden ? this.dispatch("showItem", a, b) : this.dispatch("hideItem", a, b));
                    this.dispatch("clickMarker", a, b)
                },
                rollOverLabel: function(a, b) {
                    a.hidden || this.textClickEnabled && a.legendLabel && a.legendLabel.attr({
                        fill: this.rollOverColor
                    });
                    this.dispatch("rollOverItem", a, b)
                },
                rollOutLabel: function(a, b) {
                    if (!a.hidden && this.textClickEnabled && a.legendLabel) {
                        var c = this.color;
                        void 0 !==
                            this.selectedColor && a.showBalloon && (c = this.selectedColor);
                        this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));
                        a.legendLabel.attr({
                            fill: c
                        })
                    }
                    this.dispatch("rollOutItem", a, b)
                },
                clickLabel: function(a, b) {
                    this.textClickEnabled ? a.hidden || this.dispatch("clickLabel", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch("showItem", a, b) : this.dispatch("hideItem", a, b))
                },
                dispatch: function(a, b, c) {
                    a = {
                        type: a,
                        dataItem: b,
                        target: this,
                        event: c,
                        chart: this.chart
                    };
                    this.chart && this.chart.handleLegendEvent(a);
                    this.fire(a)
                },
                createValue: function(a) {
                    var b = this,
                        c = b.fontSize,
                        e = b.chart;
                    if (!1 !== a.visibleInLegend && !a.hideFromLegend) {
                        var h = b.maxLabelWidth;
                        b.forceWidth && (h = b.labelWidth);
                        b.equalWidths || (b.valueAlign = "left");
                        "left" == b.valueAlign && a.legendLabel && (h = a.legendLabel.getBBox().width);
                        var f = h;
                        if (b.valueText && 0 < b.valueWidth) {
                            var g = b.color;
                            b.useMarkerColorForValues && (g = a.color, a.legendKeyColor && (g = a.legendKeyColor()));
                            !0 === a.hidden && (g = b.markerDisabledColor);
                            var k = b.valueText,
                                h = h + b.lx + b.labelDx + b.markerLabelGap +
                                b.valueWidth,
                                l = "end";
                            "left" == b.valueAlign && (h -= b.valueWidth, l = "start");
                            g = d.text(b.container, k, g, b.chart.fontFamily, c, l);
                            d.setCN(e, g, "legend-value");
                            g.translate(h, b.ly);
                            b.entries[b.index].push(g);
                            f += b.valueWidth + 2 * b.markerLabelGap;
                            g.dItem = a;
                            b.valueLabels.push(g)
                        }
                        b.index++;
                        e = b.markerSize;
                        e < c + 7 && (e = c + 7, d.VML && (e += 3));
                        c = b.container.rect(a.legendEntryWidth, 0, f, e, 0, 0).attr({
                            stroke: "none",
                            fill: "#fff",
                            "fill-opacity": .005
                        });
                        c.dItem = a;
                        b.entries[b.index - 1].push(c);
                        c.mouseover(function(c) {
                            b.rollOverLabel(a, c)
                        }).mouseout(function(c) {
                            b.rollOutLabel(a,
                                c)
                        }).click(function(c) {
                            b.clickLabel(a, c)
                        })
                    }
                },
                createV: function() {
                    var a = this.markerSize;
                    return d.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor)
                },
                createX: function() {
                    var a = (this.markerSize - 4) / 2,
                        b = {
                            stroke: this.switchColor,
                            "stroke-width": 3
                        },
                        c = this.container,
                        e = d.line(c, [-a, a], [-a, a]).attr(b),
                        a = d.line(c, [-a, a], [a, -a]).attr(b);
                    return this.container.set([e, a])
                },
                createMarker: function(a, b, c, e, h, f, g, k, l) {
                    var m = this.markerSize,
                        p = this.container;
                    h || (h = this.markerBorderColor);
                    h ||
                        (h = b);
                    isNaN(e) && (e = this.markerBorderThickness);
                    isNaN(f) && (f = this.markerBorderAlpha);
                    return d.bullet(p, a, m, b, c, e, h, f, m, g, k, this.chart.path, l)
                },
                validateNow: function() {
                    this.invalidateSize()
                },
                updateValues: function() {
                    var a = this.valueLabels,
                        b = this.chart,
                        c, e = this.data;
                    if (a)
                        for (c = 0; c < a.length; c++) {
                            var h = a[c],
                                f = h.dItem;
                            f.periodDataItem = void 0;
                            f.periodPercentDataItem = void 0;
                            var g = " ";
                            if (e) f.value ? h.text(f.value) : h.text("");
                            else {
                                var k = null;
                                if (void 0 !== f.type) {
                                    var k = f.currentDataItem,
                                        l = this.periodValueText;
                                    f.legendPeriodValueText &&
                                        (l = f.legendPeriodValueText);
                                    f.legendPeriodValueTextR && (l = f.legendPeriodValueTextR);
                                    k ? (g = this.valueText, f.legendValueText && (g = f.legendValueText), g = b.formatString(g, k)) : l && b.formatPeriodString && (l = d.massReplace(l, {
                                        "[[title]]": f.title
                                    }), g = b.formatPeriodString(l, f))
                                } else g = b.formatString(this.valueText, f);
                                l = f;
                                k && (l = k);
                                var m = this.valueFunction;
                                m && (g = m(l, g, b.periodDataItem));
                                var p;
                                this.useMarkerColorForLabels && !k && f.lastDataItem && (k = f.lastDataItem);
                                k ? p = b.getBalloonColor(f, k) : f.legendKeyColor && (p = f.legendKeyColor());
                                f.legendColorFunction && (p = f.legendColorFunction(l, g, f.periodDataItem, f.periodPercentDataItem));
                                h.text(g);
                                if (!f.pattern && (this.useMarkerColorForValues && h.setAttr("fill", p), this.useMarkerColorForLabels)) {
                                    if (h = f.legendMarker) h.setAttr("fill", p), h.setAttr("stroke", p);
                                    (f = f.legendLabel) && f.setAttr("fill", p)
                                }
                            }
                        }
                },
                renderFix: function() {
                    if (!d.VML && this.enabled) {
                        var a = this.container;
                        a && a.renderFix()
                    }
                },
                destroy: function() {
                    this.div.innerHTML = "";
                    d.remove(this.set)
                }
            })
        })();
        (function() {
            var d = window.AmCharts;
            d.formatMilliseconds = function(a, b) {
                if (-1 != a.indexOf("fff")) {
                    var c = b.getMilliseconds(),
                        d = String(c);
                    10 > c && (d = "00" + c);
                    10 <= c && 100 > c && (d = "0" + c);
                    a = a.replace(/fff/g, d)
                }
                return a
            };
            d.extractPeriod = function(a) {
                var b = d.stripNumbers(a),
                    c = 1;
                b != a && (c = Number(a.slice(0, a.indexOf(b))));
                return {
                    period: b,
                    count: c
                }
            };
            d.getDate = function(a, b, c) {
                var answ = a instanceof Date ? d.newDate(a, c) : b && isNaN(a) ? d.stringToDate(a, b) : new Date(a)
                return a instanceof Date ? d.newDate(a, c) : b && isNaN(a) ? d.stringToDate(a, b) : new Date(a)
            };
            d.daysInMonth = function(a) {
                return (new Date(a.getYear(), a.getMonth() +
                    1, 0)).getDate()
            };
            d.newDate = function(a, b) {
                return b && -1 == b.indexOf("fff") ? new Date(a) : new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds())
            };
            d.resetDateToMin = function(a, b, c, e) {
                void 0 === e && (e = 1);
                var h, f, g, k, l, m, p;
                d.useUTC ? (h = a.getUTCFullYear(), f = a.getUTCMonth(), g = a.getUTCDate(), k = a.getUTCHours(), l = a.getUTCMinutes(), m = a.getUTCSeconds(), p = a.getUTCMilliseconds(), a = a.getUTCDay()) : (h = a.getFullYear(), f = a.getMonth(), g = a.getDate(), k = a.getHours(), l =
                    a.getMinutes(), m = a.getSeconds(), p = a.getMilliseconds(), a = a.getDay());
                switch (b) {
                    case "YYYY":
                        h = Math.floor(h / c) * c;
                        f = 0;
                        g = 1;
                        p = m = l = k = 0;
                        break;
                    case "MM":
                        f = Math.floor(f / c) * c;
                        g = 1;
                        p = m = l = k = 0;
                        break;
                    case "WW":
                        g = a >= e ? g - a + e : g - (7 + a) + e;
                        p = m = l = k = 0;
                        break;
                    case "DD":
                        p = m = l = k = 0;
                        break;
                    case "hh":
                        k = Math.floor(k / c) * c;
                        p = m = l = 0;
                        break;
                    case "mm":
                        l = Math.floor(l / c) * c;
                        p = m = 0;
                        break;
                    case "ss":
                        m = Math.floor(m / c) * c;
                        p = 0;
                        break;
                    case "fff":
                        p = Math.floor(p / c) * c
                }
                d.useUTC ? (a = new Date, a.setUTCFullYear(h, f, g), a.setUTCHours(k, l, m, p)) : a = new Date(h, f, g,
                    k, l, m, p);
                return a
            };
            d.getPeriodDuration = function(a, b) {
                void 0 === b && (b = 1);
                var c;
                switch (a) {
                    case "YYYY":
                        c = 316224E5;
                        break;
                    case "MM":
                        c = 26784E5;
                        break;
                    case "WW":
                        c = 6048E5;
                        break;
                    case "DD":
                        c = 864E5;
                        break;
                    case "hh":
                        c = 36E5;
                        break;
                    case "mm":
                        c = 6E4;
                        break;
                    case "ss":
                        c = 1E3;
                        break;
                    case "fff":
                        c = 1
                }
                return c * b
            };
            d.intervals = {
                s: {
                    nextInterval: "ss",
                    contains: 1E3
                },
                ss: {
                    nextInterval: "mm",
                    contains: 60,
                    count: 0
                },
                mm: {
                    nextInterval: "hh",
                    contains: 60,
                    count: 1
                },
                hh: {
                    nextInterval: "DD",
                    contains: 24,
                    count: 2
                },
                DD: {
                    nextInterval: "",
                    contains: Infinity,
                    count: 3
                }
            };
            d.getMaxInterval = function(a, b) {
                var c = d.intervals;
                return a >= c[b].contains ? (a = Math.round(a / c[b].contains), b = c[b].nextInterval, d.getMaxInterval(a, b)) : "ss" == b ? c[b].nextInterval : b
            };
            d.dayNames = "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" ");
            d.shortDayNames = "Sun Mon Tue Wed Thu Fri Sat".split(" ");
            d.monthNames = "January February March April May June July August September October November December".split(" ");
            d.shortMonthNames = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ");
            d.getWeekNumber = function(a) {
                a = new Date(a);
                a.setHours(0, 0, 0);
                a.setDate(a.getDate() + 4 - (a.getDay() || 7));
                var b = new Date(a.getFullYear(), 0, 1);
                return Math.ceil(((a - b) / 864E5 + 1) / 7)
            };
            d.stringToDate = function(a, b) {
                var c = {},
                    e = [{
                        pattern: "YYYY",
                        period: "year"
                    }, {
                        pattern: "YY",
                        period: "year"
                    }, {
                        pattern: "MM",
                        period: "month"
                    }, {
                        pattern: "M",
                        period: "month"
                    }, {
                        pattern: "DD",
                        period: "date"
                    }, {
                        pattern: "D",
                        period: "date"
                    }, {
                        pattern: "JJ",
                        period: "hours"
                    }, {
                        pattern: "J",
                        period: "hours"
                    }, {
                        pattern: "HH",
                        period: "hours"
                    }, {
                        pattern: "H",
                        period: "hours"
                    }, {
                        pattern: "KK",
                        period: "hours"
                    }, {
                        pattern: "K",
                        period: "hours"
                    }, {
                        pattern: "LL",
                        period: "hours"
                    }, {
                        pattern: "L",
                        period: "hours"
                    }, {
                        pattern: "NN",
                        period: "minutes"
                    }, {
                        pattern: "N",
                        period: "minutes"
                    }, {
                        pattern: "SS",
                        period: "seconds"
                    }, {
                        pattern: "S",
                        period: "seconds"
                    }, {
                        pattern: "QQQ",
                        period: "milliseconds"
                    }, {
                        pattern: "QQ",
                        period: "milliseconds"
                    }, {
                        pattern: "Q",
                        period: "milliseconds"
                    }],
                    h = !0,
                    f = b.indexOf("AA"); - 1 != f && (a.substr(f, 2), "pm" == a.toLowerCase && (h = !1));
                var f = b,
                    g, k, l;
                for (l = 0; l < e.length; l++) k = e[l].period, c[k] = 0, "date" == k && (c[k] =
                    1);
                for (l = 0; l < e.length; l++)
                    if (g = e[l].pattern, k = e[l].period, -1 != b.indexOf(g)) {
                        var m = d.getFromDateString(g, a, f);
                        b = b.replace(g, "");
                        if ("KK" == g || "K" == g || "LL" == g || "L" == g) h || (m += 12);
                        c[k] = m
                    }
                d.useUTC ? (e = new Date, e.setUTCFullYear(c.year, c.month, c.date), e.setUTCHours(c.hours, c.minutes, c.seconds, c.milliseconds)) : e = new Date(c.year, c.month, c.date, c.hours, c.minutes, c.seconds, c.milliseconds);
                return e
            };
            d.getFromDateString = function(a, b, c) {
                if (void 0 !== b) return c = c.indexOf(a), b = String(b), b = b.substr(c, a.length), "0" == b.charAt(0) &&
                    (b = b.substr(1, b.length - 1)), b = Number(b), isNaN(b) && (b = 0), -1 != a.indexOf("M") && b--, b
            };
            d.formatDate = function(a, b, c) {
                c || (c = d);
                var e, h, f, g, k, l, m, p, q = d.getWeekNumber(a);
                d.useUTC ? (e = a.getUTCFullYear(), h = a.getUTCMonth(), f = a.getUTCDate(), g = a.getUTCDay(), k = a.getUTCHours(), l = a.getUTCMinutes(), m = a.getUTCSeconds(), p = a.getUTCMilliseconds()) : (e = a.getFullYear(), h = a.getMonth(), f = a.getDate(), g = a.getDay(), k = a.getHours(), l = a.getMinutes(), m = a.getSeconds(), p = a.getMilliseconds());
                var n = String(e).substr(2, 2),
                    t = "0" + g;
                b = b.replace(/W/g,
                    q);
                q = k;
                24 == q && (q = 0);
                var r = q;
                10 > r && (r = "0" + r);
                b = b.replace(/JJ/g, r);
                b = b.replace(/J/g, q);
                r = k;
                0 === r && (r = 24, -1 != b.indexOf("H") && (f--, 0 === f && (e = new Date(a), e.setDate(e.getDate() - 1), h = e.getMonth(), f = e.getDate(), e = e.getFullYear())));
                a = h + 1;
                9 > h && (a = "0" + a);
                q = f;
                10 > f && (q = "0" + f);
                var w = r;
                10 > w && (w = "0" + w);
                b = b.replace(/HH/g, w);
                b = b.replace(/H/g, r);
                r = k;
                11 < r && (r -= 12);
                w = r;
                10 > w && (w = "0" + w);
                b = b.replace(/KK/g, w);
                b = b.replace(/K/g, r);
                r = k;
                0 === r && (r = 12);
                12 < r && (r -= 12);
                w = r;
                10 > w && (w = "0" + w);
                b = b.replace(/LL/g, w);
                b = b.replace(/L/g, r);
                r = l;
                10 > r && (r = "0" + r);
                b = b.replace(/NN/g, r);
                b = b.replace(/N/g, l);
                l = m;
                10 > l && (l = "0" + l);
                b = b.replace(/SS/g, l);
                b = b.replace(/S/g, m);
                m = p;
                10 > m ? m = "00" + m : 100 > m && (m = "0" + m);
                l = p;
                10 > l && (l = "00" + l);
                b = b.replace(/A/g, "@A@");
                b = b.replace(/QQQ/g, m);
                b = b.replace(/QQ/g, l);
                b = b.replace(/Q/g, p);
                b = b.replace(/YYYY/g, "@IIII@");
                b = b.replace(/YY/g, "@II@");
                b = b.replace(/MMMM/g, "@XXXX@");
                b = b.replace(/MMM/g, "@XXX@");
                b = b.replace(/MM/g, "@XX@");
                b = b.replace(/M/g, "@X@");
                b = b.replace(/DD/g, "@RR@");
                b = b.replace(/D/g, "@R@");
                b = b.replace(/EEEE/g, "@PPPP@");
                b = b.replace(/EEE/g, "@PPP@");
                b = b.replace(/EE/g, "@PP@");
                b = b.replace(/E/g, "@P@");
                b = b.replace(/@IIII@/g, e);
                b = b.replace(/@II@/g, n);
                b = b.replace(/@XXXX@/g, c.monthNames[h]);
                b = b.replace(/@XXX@/g, c.shortMonthNames[h]);
                b = b.replace(/@XX@/g, a);
                b = b.replace(/@X@/g, h + 1);
                b = b.replace(/@RR@/g, q);
                b = b.replace(/@R@/g, f);
                b = b.replace(/@PPPP@/g, c.dayNames[g]);
                b = b.replace(/@PPP@/g, c.shortDayNames[g]);
                b = b.replace(/@PP@/g, t);
                b = b.replace(/@P@/g, g);
                return b = 12 > k ? b.replace(/@A@/g, c.amString) : b.replace(/@A@/g, c.pmString)
            };
            d.changeDate =
                function(a, b, c, e, h) {
                    if (d.useUTC) return d.changeUTCDate(a, b, c, e, h);
                    var f = -1;
                    void 0 === e && (e = !0);
                    void 0 === h && (h = !1);
                    !0 === e && (f = 1);
                    switch (b) {
                        case "YYYY":
                            a.setFullYear(a.getFullYear() + c * f);
                            e || h || a.setDate(a.getDate() + 1);
                            break;
                        case "MM":
                            b = a.getMonth();
                            a.setMonth(a.getMonth() + c * f);
                            a.getMonth() > b + c * f && a.setDate(a.getDate() - 1);
                            e || h || a.setDate(a.getDate() + 1);
                            break;
                        case "DD":
                            a.setDate(a.getDate() + c * f);
                            break;
                        case "WW":
                            a.setDate(a.getDate() + c * f * 7);
                            break;
                        case "hh":
                            a.setHours(a.getHours() + c * f);
                            break;
                        case "mm":
                            a.setMinutes(a.getMinutes() +
                                c * f);
                            break;
                        case "ss":
                            a.setSeconds(a.getSeconds() + c * f);
                            break;
                        case "fff":
                            a.setMilliseconds(a.getMilliseconds() + c * f)
                    }
                    return a
                };
            d.changeUTCDate = function(a, b, c, d, h) {
                var f = -1;
                void 0 === d && (d = !0);
                void 0 === h && (h = !1);
                !0 === d && (f = 1);
                switch (b) {
                    case "YYYY":
                        a.setUTCFullYear(a.getUTCFullYear() + c * f);
                        d || h || a.setUTCDate(a.getUTCDate() + 1);
                        break;
                    case "MM":
                        b = a.getUTCMonth();
                        a.setUTCMonth(a.getUTCMonth() + c * f);
                        a.getUTCMonth() > b + c * f && a.setUTCDate(a.getUTCDate() - 1);
                        d || h || a.setUTCDate(a.getUTCDate() + 1);
                        break;
                    case "DD":
                        a.setUTCDate(a.getUTCDate() +
                            c * f);
                        break;
                    case "WW":
                        a.setUTCDate(a.getUTCDate() + c * f * 7);
                        break;
                    case "hh":
                        a.setUTCHours(a.getUTCHours() + c * f);
                        break;
                    case "mm":
                        a.setUTCMinutes(a.getUTCMinutes() + c * f);
                        break;
                    case "ss":
                        a.setUTCSeconds(a.getUTCSeconds() + c * f);
                        break;
                    case "fff":
                        a.setUTCMilliseconds(a.getUTCMilliseconds() + c * f)
                }
                return a
            }
        })();
    
    /***/ }),
    /* 2 */
    /***/ (function(module, exports, __webpack_require__) {
    
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
         * jQuery JavaScript Library v2.2.4
         * http://jquery.com/
         *
         * Includes Sizzle.js
         * http://sizzlejs.com/
         *
         * Copyright jQuery Foundation and other contributors
         * Released under the MIT license
         * http://jquery.org/license
         *
         * Date: 2016-05-20T17:23Z
         */
    
        (function( global, factory ) {
    
            if ( typeof module === "object" && typeof module.exports === "object" ) {
                // For CommonJS and CommonJS-like environments where a proper `window`
                // is present, execute the factory and get jQuery.
                // For environments that do not have a `window` with a `document`
                // (such as Node.js), expose a factory as module.exports.
                // This accentuates the need for the creation of a real `window`.
                // e.g. var jQuery = require("jquery")(window);
                // See ticket #14549 for more info.
                module.exports = global.document ?
                    factory( global, true ) :
                    function( w ) {
                        if ( !w.document ) {
                            throw new Error( "jQuery requires a window with a document" );
                        }
                        return factory( w );
                    };
            } else {
                factory( global );
            }
    
        // Pass this if window is not defined yet
        }(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {
    
        // Support: Firefox 18+
        // Can't be in strict mode, several libs including ASP.NET trace
        // the stack via arguments.caller.callee and Firefox dies if
        // you try to trace through "use strict" call chains. (#13335)
        //"use strict";
        var arr = [];
    
        var document = window.document;
    
        var slice = arr.slice;
    
        var concat = arr.concat;
    
        var push = arr.push;
    
        var indexOf = arr.indexOf;
    
        var class2type = {};
    
        var toString = class2type.toString;
    
        var hasOwn = class2type.hasOwnProperty;
    
        var support = {};
    
    
    
        var
            version = "2.2.4",
    
            // Define a local copy of jQuery
            jQuery = function( selector, context ) {
    
                // The jQuery object is actually just the init constructor 'enhanced'
                // Need init if jQuery is called (just allow error to be thrown if not included)
                return new jQuery.fn.init( selector, context );
            },
    
            // Support: Android<4.1
            // Make sure we trim BOM and NBSP
            rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
    
            // Matches dashed string for camelizing
            rmsPrefix = /^-ms-/,
            rdashAlpha = /-([\da-z])/gi,
    
            // Used by jQuery.camelCase as callback to replace()
            fcamelCase = function( all, letter ) {
                return letter.toUpperCase();
            };
    
        jQuery.fn = jQuery.prototype = {
    
            // The current version of jQuery being used
            jquery: version,
    
            constructor: jQuery,
    
            // Start with an empty selector
            selector: "",
    
            // The default length of a jQuery object is 0
            length: 0,
    
            toArray: function() {
                return slice.call( this );
            },
    
            // Get the Nth element in the matched element set OR
            // Get the whole matched element set as a clean array
            get: function( num ) {
                return num != null ?
    
                    // Return just the one element from the set
                    ( num < 0 ? this[ num + this.length ] : this[ num ] ) :
    
                    // Return all the elements in a clean array
                    slice.call( this );
            },
    
            // Take an array of elements and push it onto the stack
            // (returning the new matched element set)
            pushStack: function( elems ) {
    
                // Build a new jQuery matched element set
                var ret = jQuery.merge( this.constructor(), elems );
    
                // Add the old object onto the stack (as a reference)
                ret.prevObject = this;
                ret.context = this.context;
    
                // Return the newly-formed element set
                return ret;
            },
    
            // Execute a callback for every element in the matched set.
            each: function( callback ) {
                return jQuery.each( this, callback );
            },
    
            map: function( callback ) {
                return this.pushStack( jQuery.map( this, function( elem, i ) {
                    return callback.call( elem, i, elem );
                } ) );
            },
    
            slice: function() {
                return this.pushStack( slice.apply( this, arguments ) );
            },
    
            first: function() {
                return this.eq( 0 );
            },
    
            last: function() {
                return this.eq( -1 );
            },
    
            eq: function( i ) {
                var len = this.length,
                    j = +i + ( i < 0 ? len : 0 );
                return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
            },
    
            end: function() {
                return this.prevObject || this.constructor();
            },
    
            // For internal use only.
            // Behaves like an Array's method, not like a jQuery method.
            push: push,
            sort: arr.sort,
            splice: arr.splice
        };
    
        jQuery.extend = jQuery.fn.extend = function() {
            var options, name, src, copy, copyIsArray, clone,
                target = arguments[ 0 ] || {},
                i = 1,
                length = arguments.length,
                deep = false;
    
            // Handle a deep copy situation
            if ( typeof target === "boolean" ) {
                deep = target;
    
                // Skip the boolean and the target
                target = arguments[ i ] || {};
                i++;
            }
    
            // Handle case when target is a string or something (possible in deep copy)
            if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
                target = {};
            }
    
            // Extend jQuery itself if only one argument is passed
            if ( i === length ) {
                target = this;
                i--;
            }
    
            for ( ; i < length; i++ ) {
    
                // Only deal with non-null/undefined values
                if ( ( options = arguments[ i ] ) != null ) {
    
                    // Extend the base object
                    for ( name in options ) {
                        src = target[ name ];
                        copy = options[ name ];
    
                        // Prevent never-ending loop
                        if ( target === copy ) {
                            continue;
                        }
    
                        // Recurse if we're merging plain objects or arrays
                        if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
                            ( copyIsArray = jQuery.isArray( copy ) ) ) ) {
    
                            if ( copyIsArray ) {
                                copyIsArray = false;
                                clone = src && jQuery.isArray( src ) ? src : [];
    
                            } else {
                                clone = src && jQuery.isPlainObject( src ) ? src : {};
                            }
    
                            // Never move original objects, clone them
                            target[ name ] = jQuery.extend( deep, clone, copy );
    
                        // Don't bring in undefined values
                        } else if ( copy !== undefined ) {
                            target[ name ] = copy;
                        }
                    }
                }
            }
    
            // Return the modified object
            return target;
        };
    
        jQuery.extend( {
    
            // Unique for each copy of jQuery on the page
            expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),
    
            // Assume jQuery is ready without the ready module
            isReady: true,
    
            error: function( msg ) {
                throw new Error( msg );
            },
    
            noop: function() {},
    
            isFunction: function( obj ) {
                return jQuery.type( obj ) === "function";
            },
    
            isArray: Array.isArray,
    
            isWindow: function( obj ) {
                return obj != null && obj === obj.window;
            },
    
            isNumeric: function( obj ) {
    
                // parseFloat NaNs numeric-cast false positives (null|true|false|"")
                // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
                // subtraction forces infinities to NaN
                // adding 1 corrects loss of precision from parseFloat (#15100)
                var realStringObj = obj && obj.toString();
                return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
            },
    
            isPlainObject: function( obj ) {
                var key;
    
                // Not plain objects:
                // - Any object or value whose internal [[Class]] property is not "[object Object]"
                // - DOM nodes
                // - window
                if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
                    return false;
                }
    
                // Not own constructor property must be Object
                if ( obj.constructor &&
                        !hasOwn.call( obj, "constructor" ) &&
                        !hasOwn.call( obj.constructor.prototype || {}, "isPrototypeOf" ) ) {
                    return false;
                }
    
                // Own properties are enumerated firstly, so to speed up,
                // if last one is own, then all properties are own
                for ( key in obj ) {}
    
                return key === undefined || hasOwn.call( obj, key );
            },
    
            isEmptyObject: function( obj ) {
                var name;
                for ( name in obj ) {
                    return false;
                }
                return true;
            },
    
            type: function( obj ) {
                if ( obj == null ) {
                    return obj + "";
                }
    
                // Support: Android<4.0, iOS<6 (functionish RegExp)
                return typeof obj === "object" || typeof obj === "function" ?
                    class2type[ toString.call( obj ) ] || "object" :
                    typeof obj;
            },
    
            // Evaluates a script in a global context
            globalEval: function( code ) {
                var script,
                    indirect = eval;
    
                code = jQuery.trim( code );
    
                if ( code ) {
    
                    // If the code includes a valid, prologue position
                    // strict mode pragma, execute code by injecting a
                    // script tag into the document.
                    if ( code.indexOf( "use strict" ) === 1 ) {
                        script = document.createElement( "script" );
                        script.text = code;
                        document.head.appendChild( script ).parentNode.removeChild( script );
                    } else {
    
                        // Otherwise, avoid the DOM node creation, insertion
                        // and removal by using an indirect global eval
    
                        indirect( code );
                    }
                }
            },
    
            // Convert dashed to camelCase; used by the css and data modules
            // Support: IE9-11+
            // Microsoft forgot to hump their vendor prefix (#9572)
            camelCase: function( string ) {
                return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
            },
    
            nodeName: function( elem, name ) {
                return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
            },
    
            each: function( obj, callback ) {
                var length, i = 0;
    
                if ( isArrayLike( obj ) ) {
                    length = obj.length;
                    for ( ; i < length; i++ ) {
                        if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
                            break;
                        }
                    }
                } else {
                    for ( i in obj ) {
                        if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
                            break;
                        }
                    }
                }
    
                return obj;
            },
    
            // Support: Android<4.1
            trim: function( text ) {
                return text == null ?
                    "" :
                    ( text + "" ).replace( rtrim, "" );
            },
    
            // results is for internal usage only
            makeArray: function( arr, results ) {
                var ret = results || [];
    
                if ( arr != null ) {
                    if ( isArrayLike( Object( arr ) ) ) {
                        jQuery.merge( ret,
                            typeof arr === "string" ?
                            [ arr ] : arr
                        );
                    } else {
                        push.call( ret, arr );
                    }
                }
    
                return ret;
            },
    
            inArray: function( elem, arr, i ) {
                return arr == null ? -1 : indexOf.call( arr, elem, i );
            },
    
            merge: function( first, second ) {
                var len = +second.length,
                    j = 0,
                    i = first.length;
    
                for ( ; j < len; j++ ) {
                    first[ i++ ] = second[ j ];
                }
    
                first.length = i;
    
                return first;
            },
    
            grep: function( elems, callback, invert ) {
                var callbackInverse,
                    matches = [],
                    i = 0,
                    length = elems.length,
                    callbackExpect = !invert;
    
                // Go through the array, only saving the items
                // that pass the validator function
                for ( ; i < length; i++ ) {
                    callbackInverse = !callback( elems[ i ], i );
                    if ( callbackInverse !== callbackExpect ) {
                        matches.push( elems[ i ] );
                    }
                }
    
                return matches;
            },
    
            // arg is for internal usage only
            map: function( elems, callback, arg ) {
                var length, value,
                    i = 0,
                    ret = [];
    
                // Go through the array, translating each of the items to their new values
                if ( isArrayLike( elems ) ) {
                    length = elems.length;
                    for ( ; i < length; i++ ) {
                        value = callback( elems[ i ], i, arg );
    
                        if ( value != null ) {
                            ret.push( value );
                        }
                    }
    
                // Go through every key on the object,
                } else {
                    for ( i in elems ) {
                        value = callback( elems[ i ], i, arg );
    
                        if ( value != null ) {
                            ret.push( value );
                        }
                    }
                }
    
                // Flatten any nested arrays
                return concat.apply( [], ret );
            },
    
            // A global GUID counter for objects
            guid: 1,
    
            // Bind a function to a context, optionally partially applying any
            // arguments.
            proxy: function( fn, context ) {
                var tmp, args, proxy;
    
                if ( typeof context === "string" ) {
                    tmp = fn[ context ];
                    context = fn;
                    fn = tmp;
                }
    
                // Quick check to determine if target is callable, in the spec
                // this throws a TypeError, but we will just return undefined.
                if ( !jQuery.isFunction( fn ) ) {
                    return undefined;
                }
    
                // Simulated bind
                args = slice.call( arguments, 2 );
                proxy = function() {
                    return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
                };
    
                // Set the guid of unique handler to the same of original handler, so it can be removed
                proxy.guid = fn.guid = fn.guid || jQuery.guid++;
    
                return proxy;
            },
    
            now: Date.now,
    
            // jQuery.support is not used in Core but other projects attach their
            // properties to it so it needs to exist.
            support: support
        } );
    
        // JSHint would error on this code due to the Symbol not being defined in ES5.
        // Defining this global in .jshintrc would create a danger of using the global
        // unguarded in another place, it seems safer to just disable JSHint for these
        // three lines.
        /* jshint ignore: start */
        if ( typeof Symbol === "function" ) {
            jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
        }
        /* jshint ignore: end */
    
        // Populate the class2type map
        jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
        function( i, name ) {
            class2type[ "[object " + name + "]" ] = name.toLowerCase();
        } );
    
        function isArrayLike( obj ) {
    
            // Support: iOS 8.2 (not reproducible in simulator)
            // `in` check used to prevent JIT error (gh-2145)
            // hasOwn isn't used here due to false negatives
            // regarding Nodelist length in IE
            var length = !!obj && "length" in obj && obj.length,
                type = jQuery.type( obj );
    
            if ( type === "function" || jQuery.isWindow( obj ) ) {
                return false;
            }
    
            return type === "array" || length === 0 ||
                typeof length === "number" && length > 0 && ( length - 1 ) in obj;
        }
        var Sizzle =
        /*!
         * Sizzle CSS Selector Engine v2.2.1
         * http://sizzlejs.com/
         *
         * Copyright jQuery Foundation and other contributors
         * Released under the MIT license
         * http://jquery.org/license
         *
         * Date: 2015-10-17
         */
        (function( window ) {
    
        var i,
            support,
            Expr,
            getText,
            isXML,
            tokenize,
            compile,
            select,
            outermostContext,
            sortInput,
            hasDuplicate,
    
            // Local document vars
            setDocument,
            document,
            docElem,
            documentIsHTML,
            rbuggyQSA,
            rbuggyMatches,
            matches,
            contains,
    
            // Instance-specific data
            expando = "sizzle" + 1 * new Date(),
            preferredDoc = window.document,
            dirruns = 0,
            done = 0,
            classCache = createCache(),
            tokenCache = createCache(),
            compilerCache = createCache(),
            sortOrder = function( a, b ) {
                if ( a === b ) {
                    hasDuplicate = true;
                }
                return 0;
            },
    
            // General-purpose constants
            MAX_NEGATIVE = 1 << 31,
    
            // Instance methods
            hasOwn = ({}).hasOwnProperty,
            arr = [],
            pop = arr.pop,
            push_native = arr.push,
            push = arr.push,
            slice = arr.slice,
            // Use a stripped-down indexOf as it's faster than native
            // http://jsperf.com/thor-indexof-vs-for/5
            indexOf = function( list, elem ) {
                var i = 0,
                    len = list.length;
                for ( ; i < len; i++ ) {
                    if ( list[i] === elem ) {
                        return i;
                    }
                }
                return -1;
            },
    
            booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
    
            // Regular expressions
    
            // http://www.w3.org/TR/css3-selectors/#whitespace
            whitespace = "[\\x20\\t\\r\\n\\f]",
    
            // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
            identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
    
            // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
            attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
                // Operator (capture 2)
                "*([*^$|!~]?=)" + whitespace +
                // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
                "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
                "*\\]",
    
            pseudos = ":(" + identifier + ")(?:\\((" +
                // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
                // 1. quoted (capture 3; capture 4 or capture 5)
                "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
                // 2. simple (capture 6)
                "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
                // 3. anything else (capture 2)
                ".*" +
                ")\\)|)",
    
            // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
            rwhitespace = new RegExp( whitespace + "+", "g" ),
            rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),
    
            rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
            rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),
    
            rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),
    
            rpseudo = new RegExp( pseudos ),
            ridentifier = new RegExp( "^" + identifier + "$" ),
    
            matchExpr = {
                "ID": new RegExp( "^#(" + identifier + ")" ),
                "CLASS": new RegExp( "^\\.(" + identifier + ")" ),
                "TAG": new RegExp( "^(" + identifier + "|[*])" ),
                "ATTR": new RegExp( "^" + attributes ),
                "PSEUDO": new RegExp( "^" + pseudos ),
                "CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
                    "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
                    "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
                "bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
                // For use in libraries implementing .is()
                // We use this for POS matching in `select`
                "needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
                    whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
            },
    
            rinputs = /^(?:input|select|textarea|button)$/i,
            rheader = /^h\d$/i,
    
            rnative = /^[^{]+\{\s*\[native \w/,
    
            // Easily-parseable/retrievable ID or TAG or CLASS selectors
            rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
    
            rsibling = /[+~]/,
            rescape = /'|\\/g,
    
            // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
            runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
            funescape = function( _, escaped, escapedWhitespace ) {
                var high = "0x" + escaped - 0x10000;
                // NaN means non-codepoint
                // Support: Firefox<24
                // Workaround erroneous numeric interpretation of +"0x"
                return high !== high || escapedWhitespace ?
                    escaped :
                    high < 0 ?
                        // BMP codepoint
                        String.fromCharCode( high + 0x10000 ) :
                        // Supplemental Plane codepoint (surrogate pair)
                        String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
            },
    
            // Used for iframes
            // See setDocument()
            // Removing the function wrapper causes a "Permission Denied"
            // error in IE
            unloadHandler = function() {
                setDocument();
            };
    
        // Optimize for push.apply( _, NodeList )
        try {
            push.apply(
                (arr = slice.call( preferredDoc.childNodes )),
                preferredDoc.childNodes
            );
            // Support: Android<4.0
            // Detect silently failing push.apply
            arr[ preferredDoc.childNodes.length ].nodeType;
        } catch ( e ) {
            push = { apply: arr.length ?
    
                // Leverage slice if possible
                function( target, els ) {
                    push_native.apply( target, slice.call(els) );
                } :
    
                // Support: IE<9
                // Otherwise append directly
                function( target, els ) {
                    var j = target.length,
                        i = 0;
                    // Can't trust NodeList.length
                    while ( (target[j++] = els[i++]) ) {}
                    target.length = j - 1;
                }
            };
        }
    
        function Sizzle( selector, context, results, seed ) {
            var m, i, elem, nid, nidselect, match, groups, newSelector,
                newContext = context && context.ownerDocument,
    
                // nodeType defaults to 9, since context defaults to document
                nodeType = context ? context.nodeType : 9;
    
            results = results || [];
    
            // Return early from calls with invalid selector or context
            if ( typeof selector !== "string" || !selector ||
                nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {
    
                return results;
            }
    
            // Try to shortcut find operations (as opposed to filters) in HTML documents
            if ( !seed ) {
    
                if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
                    setDocument( context );
                }
                context = context || document;
    
                if ( documentIsHTML ) {
    
                    // If the selector is sufficiently simple, try using a "get*By*" DOM method
                    // (excepting DocumentFragment context, where the methods don't exist)
                    if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
    
                        // ID selector
                        if ( (m = match[1]) ) {
    
                            // Document context
                            if ( nodeType === 9 ) {
                                if ( (elem = context.getElementById( m )) ) {
    
                                    // Support: IE, Opera, Webkit
                                    // TODO: identify versions
                                    // getElementById can match elements by name instead of ID
                                    if ( elem.id === m ) {
                                        results.push( elem );
                                        return results;
                                    }
                                } else {
                                    return results;
                                }
    
                            // Element context
                            } else {
    
                                // Support: IE, Opera, Webkit
                                // TODO: identify versions
                                // getElementById can match elements by name instead of ID
                                if ( newContext && (elem = newContext.getElementById( m )) &&
                                    contains( context, elem ) &&
                                    elem.id === m ) {
    
                                    results.push( elem );
                                    return results;
                                }
                            }
    
                        // Type selector
                        } else if ( match[2] ) {
                            push.apply( results, context.getElementsByTagName( selector ) );
                            return results;
    
                        // Class selector
                        } else if ( (m = match[3]) && support.getElementsByClassName &&
                            context.getElementsByClassName ) {
    
                            push.apply( results, context.getElementsByClassName( m ) );
                            return results;
                        }
                    }
    
                    // Take advantage of querySelectorAll
                    if ( support.qsa &&
                        !compilerCache[ selector + " " ] &&
                        (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
    
                        if ( nodeType !== 1 ) {
                            newContext = context;
                            newSelector = selector;
    
                        // qSA looks outside Element context, which is not what we want
                        // Thanks to Andrew Dupont for this workaround technique
                        // Support: IE <=8
                        // Exclude object elements
                        } else if ( context.nodeName.toLowerCase() !== "object" ) {
    
                            // Capture the context ID, setting it first if necessary
                            if ( (nid = context.getAttribute( "id" )) ) {
                                nid = nid.replace( rescape, "\\$&" );
                            } else {
                                context.setAttribute( "id", (nid = expando) );
                            }
    
                            // Prefix every selector in the list
                            groups = tokenize( selector );
                            i = groups.length;
                            nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
                            while ( i-- ) {
                                groups[i] = nidselect + " " + toSelector( groups[i] );
                            }
                            newSelector = groups.join( "," );
    
                            // Expand context for sibling selectors
                            newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
                                context;
                        }
    
                        if ( newSelector ) {
                            try {
                                push.apply( results,
                                    newContext.querySelectorAll( newSelector )
                                );
                                return results;
                            } catch ( qsaError ) {
                            } finally {
                                if ( nid === expando ) {
                                    context.removeAttribute( "id" );
                                }
                            }
                        }
                    }
                }
            }
    
            // All others
            return select( selector.replace( rtrim, "$1" ), context, results, seed );
        }
    
        /**
         * Create key-value caches of limited size
         * @returns {function(string, object)} Returns the Object data after storing it on itself with
         *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
         *	deleting the oldest entry
         */
        function createCache() {
            var keys = [];
    
            function cache( key, value ) {
                // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                if ( keys.push( key + " " ) > Expr.cacheLength ) {
                    // Only keep the most recent entries
                    delete cache[ keys.shift() ];
                }
                return (cache[ key + " " ] = value);
            }
            return cache;
        }
    
        /**
         * Mark a function for special use by Sizzle
         * @param {Function} fn The function to mark
         */
        function markFunction( fn ) {
            fn[ expando ] = true;
            return fn;
        }
    
        /**
         * Support testing using an element
         * @param {Function} fn Passed the created div and expects a boolean result
         */
        function assert( fn ) {
            var div = document.createElement("div");
    
            try {
                return !!fn( div );
            } catch (e) {
                return false;
            } finally {
                // Remove from its parent by default
                if ( div.parentNode ) {
                    div.parentNode.removeChild( div );
                }
                // release memory in IE
                div = null;
            }
        }
    
        /**
         * Adds the same handler for all of the specified attrs
         * @param {String} attrs Pipe-separated list of attributes
         * @param {Function} handler The method that will be applied
         */
        function addHandle( attrs, handler ) {
            var arr = attrs.split("|"),
                i = arr.length;
    
            while ( i-- ) {
                Expr.attrHandle[ arr[i] ] = handler;
            }
        }
    
        /**
         * Checks document order of two siblings
         * @param {Element} a
         * @param {Element} b
         * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
         */
        function siblingCheck( a, b ) {
            var cur = b && a,
                diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
                    ( ~b.sourceIndex || MAX_NEGATIVE ) -
                    ( ~a.sourceIndex || MAX_NEGATIVE );
    
            // Use IE sourceIndex if available on both nodes
            if ( diff ) {
                return diff;
            }
    
            // Check if b follows a
            if ( cur ) {
                while ( (cur = cur.nextSibling) ) {
                    if ( cur === b ) {
                        return -1;
                    }
                }
            }
    
            return a ? 1 : -1;
        }
    
        /**
         * Returns a function to use in pseudos for input types
         * @param {String} type
         */
        function createInputPseudo( type ) {
            return function( elem ) {
                var name = elem.nodeName.toLowerCase();
                return name === "input" && elem.type === type;
            };
        }
    
        /**
         * Returns a function to use in pseudos for buttons
         * @param {String} type
         */
        function createButtonPseudo( type ) {
            return function( elem ) {
                var name = elem.nodeName.toLowerCase();
                return (name === "input" || name === "button") && elem.type === type;
            };
        }
    
        /**
         * Returns a function to use in pseudos for positionals
         * @param {Function} fn
         */
        function createPositionalPseudo( fn ) {
            return markFunction(function( argument ) {
                argument = +argument;
                return markFunction(function( seed, matches ) {
                    var j,
                        matchIndexes = fn( [], seed.length, argument ),
                        i = matchIndexes.length;
    
                    // Match elements found at the specified indexes
                    while ( i-- ) {
                        if ( seed[ (j = matchIndexes[i]) ] ) {
                            seed[j] = !(matches[j] = seed[j]);
                        }
                    }
                });
            });
        }
    
        /**
         * Checks a node for validity as a Sizzle context
         * @param {Element|Object=} context
         * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
         */
        function testContext( context ) {
            return context && typeof context.getElementsByTagName !== "undefined" && context;
        }
    
        // Expose support vars for convenience
        support = Sizzle.support = {};
    
        /**
         * Detects XML nodes
         * @param {Element|Object} elem An element or a document
         * @returns {Boolean} True iff elem is a non-HTML XML node
         */
        isXML = Sizzle.isXML = function( elem ) {
            // documentElement is verified for cases where it doesn't yet exist
            // (such as loading iframes in IE - #4833)
            var documentElement = elem && (elem.ownerDocument || elem).documentElement;
            return documentElement ? documentElement.nodeName !== "HTML" : false;
        };
    
        /**
         * Sets document-related variables once based on the current document
         * @param {Element|Object} [doc] An element or document object to use to set the document
         * @returns {Object} Returns the current document
         */
        setDocument = Sizzle.setDocument = function( node ) {
            var hasCompare, parent,
                doc = node ? node.ownerDocument || node : preferredDoc;
    
            // Return early if doc is invalid or already selected
            if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
                return document;
            }
    
            // Update global variables
            document = doc;
            docElem = document.documentElement;
            documentIsHTML = !isXML( document );
    
            // Support: IE 9-11, Edge
            // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
            if ( (parent = document.defaultView) && parent.top !== parent ) {
                // Support: IE 11
                if ( parent.addEventListener ) {
                    parent.addEventListener( "unload", unloadHandler, false );
    
                // Support: IE 9 - 10 only
                } else if ( parent.attachEvent ) {
                    parent.attachEvent( "onunload", unloadHandler );
                }
            }
    
            /* Attributes
            ---------------------------------------------------------------------- */
    
            // Support: IE<8
            // Verify that getAttribute really returns attributes and not properties
            // (excepting IE8 booleans)
            support.attributes = assert(function( div ) {
                div.className = "i";
                return !div.getAttribute("className");
            });
    
            /* getElement(s)By*
            ---------------------------------------------------------------------- */
    
            // Check if getElementsByTagName("*") returns only elements
            support.getElementsByTagName = assert(function( div ) {
                div.appendChild( document.createComment("") );
                return !div.getElementsByTagName("*").length;
            });
    
            // Support: IE<9
            support.getElementsByClassName = rnative.test( document.getElementsByClassName );
    
            // Support: IE<10
            // Check if getElementById returns elements by name
            // The broken getElementById methods don't pick up programatically-set names,
            // so use a roundabout getElementsByName test
            support.getById = assert(function( div ) {
                docElem.appendChild( div ).id = expando;
                return !document.getElementsByName || !document.getElementsByName( expando ).length;
            });
    
            // ID find and filter
            if ( support.getById ) {
                Expr.find["ID"] = function( id, context ) {
                    if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
                        var m = context.getElementById( id );
                        return m ? [ m ] : [];
                    }
                };
                Expr.filter["ID"] = function( id ) {
                    var attrId = id.replace( runescape, funescape );
                    return function( elem ) {
                        return elem.getAttribute("id") === attrId;
                    };
                };
            } else {
                // Support: IE6/7
                // getElementById is not reliable as a find shortcut
                delete Expr.find["ID"];
    
                Expr.filter["ID"] =  function( id ) {
                    var attrId = id.replace( runescape, funescape );
                    return function( elem ) {
                        var node = typeof elem.getAttributeNode !== "undefined" &&
                            elem.getAttributeNode("id");
                        return node && node.value === attrId;
                    };
                };
            }
    
            // Tag
            Expr.find["TAG"] = support.getElementsByTagName ?
                function( tag, context ) {
                    if ( typeof context.getElementsByTagName !== "undefined" ) {
                        return context.getElementsByTagName( tag );
    
                    // DocumentFragment nodes don't have gEBTN
                    } else if ( support.qsa ) {
                        return context.querySelectorAll( tag );
                    }
                } :
    
                function( tag, context ) {
                    var elem,
                        tmp = [],
                        i = 0,
                        // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                        results = context.getElementsByTagName( tag );
    
                    // Filter out possible comments
                    if ( tag === "*" ) {
                        while ( (elem = results[i++]) ) {
                            if ( elem.nodeType === 1 ) {
                                tmp.push( elem );
                            }
                        }
    
                        return tmp;
                    }
                    return results;
                };
    
            // Class
            Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
                if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
                    return context.getElementsByClassName( className );
                }
            };
    
            /* QSA/matchesSelector
            ---------------------------------------------------------------------- */
    
            // QSA and matchesSelector support
    
            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
            rbuggyMatches = [];
    
            // qSa(:focus) reports false when true (Chrome 21)
            // We allow this because of a bug in IE8/9 that throws an error
            // whenever `document.activeElement` is accessed on an iframe
            // So, we allow :focus to pass through QSA all the time to avoid the IE error
            // See http://bugs.jquery.com/ticket/13378
            rbuggyQSA = [];
    
            if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
                // Build QSA regex
                // Regex strategy adopted from Diego Perini
                assert(function( div ) {
                    // Select is set to empty string on purpose
                    // This is to test IE's treatment of not explicitly
                    // setting a boolean content attribute,
                    // since its presence should be enough
                    // http://bugs.jquery.com/ticket/12359
                    docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
                        "<select id='" + expando + "-\r\\' msallowcapture=''>" +
                        "<option selected=''></option></select>";
    
                    // Support: IE8, Opera 11-12.16
                    // Nothing should be selected when empty strings follow ^= or $= or *=
                    // The test attribute must be unknown in Opera but "safe" for WinRT
                    // http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                    if ( div.querySelectorAll("[msallowcapture^='']").length ) {
                        rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
                    }
    
                    // Support: IE8
                    // Boolean attributes and "value" are not treated correctly
                    if ( !div.querySelectorAll("[selected]").length ) {
                        rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
                    }
    
                    // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                    if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
                        rbuggyQSA.push("~=");
                    }
    
                    // Webkit/Opera - :checked should return selected option elements
                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                    // IE8 throws error here and will not see later tests
                    if ( !div.querySelectorAll(":checked").length ) {
                        rbuggyQSA.push(":checked");
                    }
    
                    // Support: Safari 8+, iOS 8+
                    // https://bugs.webkit.org/show_bug.cgi?id=136851
                    // In-page `selector#id sibing-combinator selector` fails
                    if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
                        rbuggyQSA.push(".#.+[+~]");
                    }
                });
    
                assert(function( div ) {
                    // Support: Windows 8 Native Apps
                    // The type and name attributes are restricted during .innerHTML assignment
                    var input = document.createElement("input");
                    input.setAttribute( "type", "hidden" );
                    div.appendChild( input ).setAttribute( "name", "D" );
    
                    // Support: IE8
                    // Enforce case-sensitivity of name attribute
                    if ( div.querySelectorAll("[name=d]").length ) {
                        rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
                    }
    
                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                    // IE8 throws error here and will not see later tests
                    if ( !div.querySelectorAll(":enabled").length ) {
                        rbuggyQSA.push( ":enabled", ":disabled" );
                    }
    
                    // Opera 10-11 does not throw on post-comma invalid pseudos
                    div.querySelectorAll("*,:x");
                    rbuggyQSA.push(",.*:");
                });
            }
    
            if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
                docElem.webkitMatchesSelector ||
                docElem.mozMatchesSelector ||
                docElem.oMatchesSelector ||
                docElem.msMatchesSelector) )) ) {
    
                assert(function( div ) {
                    // Check to see if it's possible to do matchesSelector
                    // on a disconnected node (IE 9)
                    support.disconnectedMatch = matches.call( div, "div" );
    
                    // This should fail with an exception
                    // Gecko does not error, returns false instead
                    matches.call( div, "[s!='']:x" );
                    rbuggyMatches.push( "!=", pseudos );
                });
            }
    
            rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
            rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );
    
            /* Contains
            ---------------------------------------------------------------------- */
            hasCompare = rnative.test( docElem.compareDocumentPosition );
    
            // Element contains another
            // Purposefully self-exclusive
            // As in, an element does not contain itself
            contains = hasCompare || rnative.test( docElem.contains ) ?
                function( a, b ) {
                    var adown = a.nodeType === 9 ? a.documentElement : a,
                        bup = b && b.parentNode;
                    return a === bup || !!( bup && bup.nodeType === 1 && (
                        adown.contains ?
                            adown.contains( bup ) :
                            a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
                    ));
                } :
                function( a, b ) {
                    if ( b ) {
                        while ( (b = b.parentNode) ) {
                            if ( b === a ) {
                                return true;
                            }
                        }
                    }
                    return false;
                };
    
            /* Sorting
            ---------------------------------------------------------------------- */
    
            // Document order sorting
            sortOrder = hasCompare ?
            function( a, b ) {
    
                // Flag for duplicate removal
                if ( a === b ) {
                    hasDuplicate = true;
                    return 0;
                }
    
                // Sort on method existence if only one input has compareDocumentPosition
                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                if ( compare ) {
                    return compare;
                }
    
                // Calculate position if both inputs belong to the same document
                compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
                    a.compareDocumentPosition( b ) :
    
                    // Otherwise we know they are disconnected
                    1;
    
                // Disconnected nodes
                if ( compare & 1 ||
                    (!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {
    
                    // Choose the first element that is related to our preferred document
                    if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
                        return -1;
                    }
                    if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
                        return 1;
                    }
    
                    // Maintain original order
                    return sortInput ?
                        ( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
                        0;
                }
    
                return compare & 4 ? -1 : 1;
            } :
            function( a, b ) {
                // Exit early if the nodes are identical
                if ( a === b ) {
                    hasDuplicate = true;
                    return 0;
                }
    
                var cur,
                    i = 0,
                    aup = a.parentNode,
                    bup = b.parentNode,
                    ap = [ a ],
                    bp = [ b ];
    
                // Parentless nodes are either documents or disconnected
                if ( !aup || !bup ) {
                    return a === document ? -1 :
                        b === document ? 1 :
                        aup ? -1 :
                        bup ? 1 :
                        sortInput ?
                        ( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
                        0;
    
                // If the nodes are siblings, we can do a quick check
                } else if ( aup === bup ) {
                    return siblingCheck( a, b );
                }
    
                // Otherwise we need full lists of their ancestors for comparison
                cur = a;
                while ( (cur = cur.parentNode) ) {
                    ap.unshift( cur );
                }
                cur = b;
                while ( (cur = cur.parentNode) ) {
                    bp.unshift( cur );
                }
    
                // Walk down the tree looking for a discrepancy
                while ( ap[i] === bp[i] ) {
                    i++;
                }
    
                return i ?
                    // Do a sibling check if the nodes have a common ancestor
                    siblingCheck( ap[i], bp[i] ) :
    
                    // Otherwise nodes in our document sort first
                    ap[i] === preferredDoc ? -1 :
                    bp[i] === preferredDoc ? 1 :
                    0;
            };
    
            return document;
        };
    
        Sizzle.matches = function( expr, elements ) {
            return Sizzle( expr, null, null, elements );
        };
    
        Sizzle.matchesSelector = function( elem, expr ) {
            // Set document vars if needed
            if ( ( elem.ownerDocument || elem ) !== document ) {
                setDocument( elem );
            }
    
            // Make sure that attribute selectors are quoted
            expr = expr.replace( rattributeQuotes, "='$1']" );
    
            if ( support.matchesSelector && documentIsHTML &&
                !compilerCache[ expr + " " ] &&
                ( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
                ( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {
    
                try {
                    var ret = matches.call( elem, expr );
    
                    // IE 9's matchesSelector returns false on disconnected nodes
                    if ( ret || support.disconnectedMatch ||
                            // As well, disconnected nodes are said to be in a document
                            // fragment in IE 9
                            elem.document && elem.document.nodeType !== 11 ) {
                        return ret;
                    }
                } catch (e) {}
            }
    
            return Sizzle( expr, document, null, [ elem ] ).length > 0;
        };
    
        Sizzle.contains = function( context, elem ) {
            // Set document vars if needed
            if ( ( context.ownerDocument || context ) !== document ) {
                setDocument( context );
            }
            return contains( context, elem );
        };
    
        Sizzle.attr = function( elem, name ) {
            // Set document vars if needed
            if ( ( elem.ownerDocument || elem ) !== document ) {
                setDocument( elem );
            }
    
            var fn = Expr.attrHandle[ name.toLowerCase() ],
                // Don't get fooled by Object.prototype properties (jQuery #13807)
                val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
                    fn( elem, name, !documentIsHTML ) :
                    undefined;
    
            return val !== undefined ?
                val :
                support.attributes || !documentIsHTML ?
                    elem.getAttribute( name ) :
                    (val = elem.getAttributeNode(name)) && val.specified ?
                        val.value :
                        null;
        };
    
        Sizzle.error = function( msg ) {
            throw new Error( "Syntax error, unrecognized expression: " + msg );
        };
    
        /**
         * Document sorting and removing duplicates
         * @param {ArrayLike} results
         */
        Sizzle.uniqueSort = function( results ) {
            var elem,
                duplicates = [],
                j = 0,
                i = 0;
    
            // Unless we *know* we can detect duplicates, assume their presence
            hasDuplicate = !support.detectDuplicates;
            sortInput = !support.sortStable && results.slice( 0 );
            results.sort( sortOrder );
    
            if ( hasDuplicate ) {
                while ( (elem = results[i++]) ) {
                    if ( elem === results[ i ] ) {
                        j = duplicates.push( i );
                    }
                }
                while ( j-- ) {
                    results.splice( duplicates[ j ], 1 );
                }
            }
    
            // Clear input after sorting to release objects
            // See https://github.com/jquery/sizzle/pull/225
            sortInput = null;
    
            return results;
        };
    
        /**
         * Utility function for retrieving the text value of an array of DOM nodes
         * @param {Array|Element} elem
         */
        getText = Sizzle.getText = function( elem ) {
            var node,
                ret = "",
                i = 0,
                nodeType = elem.nodeType;
    
            if ( !nodeType ) {
                // If no nodeType, this is expected to be an array
                while ( (node = elem[i++]) ) {
                    // Do not traverse comment nodes
                    ret += getText( node );
                }
            } else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
                // Use textContent for elements
                // innerText usage removed for consistency of new lines (jQuery #11153)
                if ( typeof elem.textContent === "string" ) {
                    return elem.textContent;
                } else {
                    // Traverse its children
                    for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
                        ret += getText( elem );
                    }
                }
            } else if ( nodeType === 3 || nodeType === 4 ) {
                return elem.nodeValue;
            }
            // Do not include comment or processing instruction nodes
    
            return ret;
        };
    
        Expr = Sizzle.selectors = {
    
            // Can be adjusted by the user
            cacheLength: 50,
    
            createPseudo: markFunction,
    
            match: matchExpr,
    
            attrHandle: {},
    
            find: {},
    
            relative: {
                ">": { dir: "parentNode", first: true },
                " ": { dir: "parentNode" },
                "+": { dir: "previousSibling", first: true },
                "~": { dir: "previousSibling" }
            },
    
            preFilter: {
                "ATTR": function( match ) {
                    match[1] = match[1].replace( runescape, funescape );
    
                    // Move the given value to match[3] whether quoted or unquoted
                    match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );
    
                    if ( match[2] === "~=" ) {
                        match[3] = " " + match[3] + " ";
                    }
    
                    return match.slice( 0, 4 );
                },
    
                "CHILD": function( match ) {
                    /* matches from matchExpr["CHILD"]
                        1 type (only|nth|...)
                        2 what (child|of-type)
                        3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
                        4 xn-component of xn+y argument ([+-]?\d*n|)
                        5 sign of xn-component
                        6 x of xn-component
                        7 sign of y-component
                        8 y of y-component
                    */
                    match[1] = match[1].toLowerCase();
    
                    if ( match[1].slice( 0, 3 ) === "nth" ) {
                        // nth-* requires argument
                        if ( !match[3] ) {
                            Sizzle.error( match[0] );
                        }
    
                        // numeric x and y parameters for Expr.filter.CHILD
                        // remember that false/true cast respectively to 0/1
                        match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
                        match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );
    
                    // other types prohibit arguments
                    } else if ( match[3] ) {
                        Sizzle.error( match[0] );
                    }
    
                    return match;
                },
    
                "PSEUDO": function( match ) {
                    var excess,
                        unquoted = !match[6] && match[2];
    
                    if ( matchExpr["CHILD"].test( match[0] ) ) {
                        return null;
                    }
    
                    // Accept quoted arguments as-is
                    if ( match[3] ) {
                        match[2] = match[4] || match[5] || "";
    
                    // Strip excess characters from unquoted arguments
                    } else if ( unquoted && rpseudo.test( unquoted ) &&
                        // Get excess from tokenize (recursively)
                        (excess = tokenize( unquoted, true )) &&
                        // advance to the next closing parenthesis
                        (excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {
    
                        // excess is a negative index
                        match[0] = match[0].slice( 0, excess );
                        match[2] = unquoted.slice( 0, excess );
                    }
    
                    // Return only captures needed by the pseudo filter method (type and argument)
                    return match.slice( 0, 3 );
                }
            },
    
            filter: {
    
                "TAG": function( nodeNameSelector ) {
                    var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
                    return nodeNameSelector === "*" ?
                        function() { return true; } :
                        function( elem ) {
                            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                        };
                },
    
                "CLASS": function( className ) {
                    var pattern = classCache[ className + " " ];
    
                    return pattern ||
                        (pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
                        classCache( className, function( elem ) {
                            return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
                        });
                },
    
                "ATTR": function( name, operator, check ) {
                    return function( elem ) {
                        var result = Sizzle.attr( elem, name );
    
                        if ( result == null ) {
                            return operator === "!=";
                        }
                        if ( !operator ) {
                            return true;
                        }
    
                        result += "";
    
                        return operator === "=" ? result === check :
                            operator === "!=" ? result !== check :
                            operator === "^=" ? check && result.indexOf( check ) === 0 :
                            operator === "*=" ? check && result.indexOf( check ) > -1 :
                            operator === "$=" ? check && result.slice( -check.length ) === check :
                            operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
                            operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
                            false;
                    };
                },
    
                "CHILD": function( type, what, argument, first, last ) {
                    var simple = type.slice( 0, 3 ) !== "nth",
                        forward = type.slice( -4 ) !== "last",
                        ofType = what === "of-type";
    
                    return first === 1 && last === 0 ?
    
                        // Shortcut for :nth-*(n)
                        function( elem ) {
                            return !!elem.parentNode;
                        } :
    
                        function( elem, context, xml ) {
                            var cache, uniqueCache, outerCache, node, nodeIndex, start,
                                dir = simple !== forward ? "nextSibling" : "previousSibling",
                                parent = elem.parentNode,
                                name = ofType && elem.nodeName.toLowerCase(),
                                useCache = !xml && !ofType,
                                diff = false;
    
                            if ( parent ) {
    
                                // :(first|last|only)-(child|of-type)
                                if ( simple ) {
                                    while ( dir ) {
                                        node = elem;
                                        while ( (node = node[ dir ]) ) {
                                            if ( ofType ?
                                                node.nodeName.toLowerCase() === name :
                                                node.nodeType === 1 ) {
    
                                                return false;
                                            }
                                        }
                                        // Reverse direction for :only-* (if we haven't yet done so)
                                        start = dir = type === "only" && !start && "nextSibling";
                                    }
                                    return true;
                                }
    
                                start = [ forward ? parent.firstChild : parent.lastChild ];
    
                                // non-xml :nth-child(...) stores cache data on `parent`
                                if ( forward && useCache ) {
    
                                    // Seek `elem` from a previously-cached index
    
                                    // ...in a gzip-friendly way
                                    node = parent;
                                    outerCache = node[ expando ] || (node[ expando ] = {});
    
                                    // Support: IE <9 only
                                    // Defend against cloned attroperties (jQuery gh-1709)
                                    uniqueCache = outerCache[ node.uniqueID ] ||
                                        (outerCache[ node.uniqueID ] = {});
    
                                    cache = uniqueCache[ type ] || [];
                                    nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
                                    diff = nodeIndex && cache[ 2 ];
                                    node = nodeIndex && parent.childNodes[ nodeIndex ];
    
                                    while ( (node = ++nodeIndex && node && node[ dir ] ||
    
                                        // Fallback to seeking `elem` from the start
                                        (diff = nodeIndex = 0) || start.pop()) ) {
    
                                        // When found, cache indexes on `parent` and break
                                        if ( node.nodeType === 1 && ++diff && node === elem ) {
                                            uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
                                            break;
                                        }
                                    }
    
                                } else {
                                    // Use previously-cached element index if available
                                    if ( useCache ) {
                                        // ...in a gzip-friendly way
                                        node = elem;
                                        outerCache = node[ expando ] || (node[ expando ] = {});
    
                                        // Support: IE <9 only
                                        // Defend against cloned attroperties (jQuery gh-1709)
                                        uniqueCache = outerCache[ node.uniqueID ] ||
                                            (outerCache[ node.uniqueID ] = {});
    
                                        cache = uniqueCache[ type ] || [];
                                        nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
                                        diff = nodeIndex;
                                    }
    
                                    // xml :nth-child(...)
                                    // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                                    if ( diff === false ) {
                                        // Use the same loop as above to seek `elem` from the start
                                        while ( (node = ++nodeIndex && node && node[ dir ] ||
                                            (diff = nodeIndex = 0) || start.pop()) ) {
    
                                            if ( ( ofType ?
                                                node.nodeName.toLowerCase() === name :
                                                node.nodeType === 1 ) &&
                                                ++diff ) {
    
                                                // Cache the index of each encountered element
                                                if ( useCache ) {
                                                    outerCache = node[ expando ] || (node[ expando ] = {});
    
                                                    // Support: IE <9 only
                                                    // Defend against cloned attroperties (jQuery gh-1709)
                                                    uniqueCache = outerCache[ node.uniqueID ] ||
                                                        (outerCache[ node.uniqueID ] = {});
    
                                                    uniqueCache[ type ] = [ dirruns, diff ];
                                                }
    
                                                if ( node === elem ) {
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }
    
                                // Incorporate the offset, then check against cycle size
                                diff -= last;
                                return diff === first || ( diff % first === 0 && diff / first >= 0 );
                            }
                        };
                },
    
                "PSEUDO": function( pseudo, argument ) {
                    // pseudo-class names are case-insensitive
                    // http://www.w3.org/TR/selectors/#pseudo-classes
                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                    // Remember that setFilters inherits from pseudos
                    var args,
                        fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
                            Sizzle.error( "unsupported pseudo: " + pseudo );
    
                    // The user may use createPseudo to indicate that
                    // arguments are needed to create the filter function
                    // just as Sizzle does
                    if ( fn[ expando ] ) {
                        return fn( argument );
                    }
    
                    // But maintain support for old signatures
                    if ( fn.length > 1 ) {
                        args = [ pseudo, pseudo, "", argument ];
                        return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
                            markFunction(function( seed, matches ) {
                                var idx,
                                    matched = fn( seed, argument ),
                                    i = matched.length;
                                while ( i-- ) {
                                    idx = indexOf( seed, matched[i] );
                                    seed[ idx ] = !( matches[ idx ] = matched[i] );
                                }
                            }) :
                            function( elem ) {
                                return fn( elem, 0, args );
                            };
                    }
    
                    return fn;
                }
            },
    
            pseudos: {
                // Potentially complex pseudos
                "not": markFunction(function( selector ) {
                    // Trim the selector passed to compile
                    // to avoid treating leading and trailing
                    // spaces as combinators
                    var input = [],
                        results = [],
                        matcher = compile( selector.replace( rtrim, "$1" ) );
    
                    return matcher[ expando ] ?
                        markFunction(function( seed, matches, context, xml ) {
                            var elem,
                                unmatched = matcher( seed, null, xml, [] ),
                                i = seed.length;
    
                            // Match elements unmatched by `matcher`
                            while ( i-- ) {
                                if ( (elem = unmatched[i]) ) {
                                    seed[i] = !(matches[i] = elem);
                                }
                            }
                        }) :
                        function( elem, context, xml ) {
                            input[0] = elem;
                            matcher( input, null, xml, results );
                            // Don't keep the element (issue #299)
                            input[0] = null;
                            return !results.pop();
                        };
                }),
    
                "has": markFunction(function( selector ) {
                    return function( elem ) {
                        return Sizzle( selector, elem ).length > 0;
                    };
                }),
    
                "contains": markFunction(function( text ) {
                    text = text.replace( runescape, funescape );
                    return function( elem ) {
                        return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
                    };
                }),
    
                // "Whether an element is represented by a :lang() selector
                // is based solely on the element's language value
                // being equal to the identifier C,
                // or beginning with the identifier C immediately followed by "-".
                // The matching of C against the element's language value is performed case-insensitively.
                // The identifier C does not have to be a valid language name."
                // http://www.w3.org/TR/selectors/#lang-pseudo
                "lang": markFunction( function( lang ) {
                    // lang value must be a valid identifier
                    if ( !ridentifier.test(lang || "") ) {
                        Sizzle.error( "unsupported lang: " + lang );
                    }
                    lang = lang.replace( runescape, funescape ).toLowerCase();
                    return function( elem ) {
                        var elemLang;
                        do {
                            if ( (elemLang = documentIsHTML ?
                                elem.lang :
                                elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {
    
                                elemLang = elemLang.toLowerCase();
                                return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
                            }
                        } while ( (elem = elem.parentNode) && elem.nodeType === 1 );
                        return false;
                    };
                }),
    
                // Miscellaneous
                "target": function( elem ) {
                    var hash = window.location && window.location.hash;
                    return hash && hash.slice( 1 ) === elem.id;
                },
    
                "root": function( elem ) {
                    return elem === docElem;
                },
    
                "focus": function( elem ) {
                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                },
    
                // Boolean properties
                "enabled": function( elem ) {
                    return elem.disabled === false;
                },
    
                "disabled": function( elem ) {
                    return elem.disabled === true;
                },
    
                "checked": function( elem ) {
                    // In CSS3, :checked should return both checked and selected elements
                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                    var nodeName = elem.nodeName.toLowerCase();
                    return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
                },
    
                "selected": function( elem ) {
                    // Accessing this property makes selected-by-default
                    // options in Safari work properly
                    if ( elem.parentNode ) {
                        elem.parentNode.selectedIndex;
                    }
    
                    return elem.selected === true;
                },
    
                // Contents
                "empty": function( elem ) {
                    // http://www.w3.org/TR/selectors/#empty-pseudo
                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                    //   but not by others (comment: 8; processing instruction: 7; etc.)
                    // nodeType < 6 works because attributes (2) do not appear as children
                    for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
                        if ( elem.nodeType < 6 ) {
                            return false;
                        }
                    }
                    return true;
                },
    
                "parent": function( elem ) {
                    return !Expr.pseudos["empty"]( elem );
                },
    
                // Element/input types
                "header": function( elem ) {
                    return rheader.test( elem.nodeName );
                },
    
                "input": function( elem ) {
                    return rinputs.test( elem.nodeName );
                },
    
                "button": function( elem ) {
                    var name = elem.nodeName.toLowerCase();
                    return name === "input" && elem.type === "button" || name === "button";
                },
    
                "text": function( elem ) {
                    var attr;
                    return elem.nodeName.toLowerCase() === "input" &&
                        elem.type === "text" &&
    
                        // Support: IE<8
                        // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
                        ( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
                },
    
                // Position-in-collection
                "first": createPositionalPseudo(function() {
                    return [ 0 ];
                }),
    
                "last": createPositionalPseudo(function( matchIndexes, length ) {
                    return [ length - 1 ];
                }),
    
                "eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
                    return [ argument < 0 ? argument + length : argument ];
                }),
    
                "even": createPositionalPseudo(function( matchIndexes, length ) {
                    var i = 0;
                    for ( ; i < length; i += 2 ) {
                        matchIndexes.push( i );
                    }
                    return matchIndexes;
                }),
    
                "odd": createPositionalPseudo(function( matchIndexes, length ) {
                    var i = 1;
                    for ( ; i < length; i += 2 ) {
                        matchIndexes.push( i );
                    }
                    return matchIndexes;
                }),
    
                "lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
                    var i = argument < 0 ? argument + length : argument;
                    for ( ; --i >= 0; ) {
                        matchIndexes.push( i );
                    }
                    return matchIndexes;
                }),
    
                "gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
                    var i = argument < 0 ? argument + length : argument;
                    for ( ; ++i < length; ) {
                        matchIndexes.push( i );
                    }
                    return matchIndexes;
                })
            }
        };
    
        Expr.pseudos["nth"] = Expr.pseudos["eq"];
    
        // Add button/input type pseudos
        for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
            Expr.pseudos[ i ] = createInputPseudo( i );
        }
        for ( i in { submit: true, reset: true } ) {
            Expr.pseudos[ i ] = createButtonPseudo( i );
        }
    
        // Easy API for creating new setFilters
        function setFilters() {}
        setFilters.prototype = Expr.filters = Expr.pseudos;
        Expr.setFilters = new setFilters();
    
        tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
            var matched, match, tokens, type,
                soFar, groups, preFilters,
                cached = tokenCache[ selector + " " ];
    
            if ( cached ) {
                return parseOnly ? 0 : cached.slice( 0 );
            }
    
            soFar = selector;
            groups = [];
            preFilters = Expr.preFilter;
    
            while ( soFar ) {
    
                // Comma and first run
                if ( !matched || (match = rcomma.exec( soFar )) ) {
                    if ( match ) {
                        // Don't consume trailing commas as valid
                        soFar = soFar.slice( match[0].length ) || soFar;
                    }
                    groups.push( (tokens = []) );
                }
    
                matched = false;
    
                // Combinators
                if ( (match = rcombinators.exec( soFar )) ) {
                    matched = match.shift();
                    tokens.push({
                        value: matched,
                        // Cast descendant combinators to space
                        type: match[0].replace( rtrim, " " )
                    });
                    soFar = soFar.slice( matched.length );
                }
    
                // Filters
                for ( type in Expr.filter ) {
                    if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
                        (match = preFilters[ type ]( match ))) ) {
                        matched = match.shift();
                        tokens.push({
                            value: matched,
                            type: type,
                            matches: match
                        });
                        soFar = soFar.slice( matched.length );
                    }
                }
    
                if ( !matched ) {
                    break;
                }
            }
    
            // Return the length of the invalid excess
            // if we're just parsing
            // Otherwise, throw an error or return tokens
            return parseOnly ?
                soFar.length :
                soFar ?
                    Sizzle.error( selector ) :
                    // Cache the tokens
                    tokenCache( selector, groups ).slice( 0 );
        };
    
        function toSelector( tokens ) {
            var i = 0,
                len = tokens.length,
                selector = "";
            for ( ; i < len; i++ ) {
                selector += tokens[i].value;
            }
            return selector;
        }
    
        function addCombinator( matcher, combinator, base ) {
            var dir = combinator.dir,
                checkNonElements = base && dir === "parentNode",
                doneName = done++;
    
            return combinator.first ?
                // Check against closest ancestor/preceding element
                function( elem, context, xml ) {
                    while ( (elem = elem[ dir ]) ) {
                        if ( elem.nodeType === 1 || checkNonElements ) {
                            return matcher( elem, context, xml );
                        }
                    }
                } :
    
                // Check against all ancestor/preceding elements
                function( elem, context, xml ) {
                    var oldCache, uniqueCache, outerCache,
                        newCache = [ dirruns, doneName ];
    
                    // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                    if ( xml ) {
                        while ( (elem = elem[ dir ]) ) {
                            if ( elem.nodeType === 1 || checkNonElements ) {
                                if ( matcher( elem, context, xml ) ) {
                                    return true;
                                }
                            }
                        }
                    } else {
                        while ( (elem = elem[ dir ]) ) {
                            if ( elem.nodeType === 1 || checkNonElements ) {
                                outerCache = elem[ expando ] || (elem[ expando ] = {});
    
                                // Support: IE <9 only
                                // Defend against cloned attroperties (jQuery gh-1709)
                                uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});
    
                                if ( (oldCache = uniqueCache[ dir ]) &&
                                    oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {
    
                                    // Assign to newCache so results back-propagate to previous elements
                                    return (newCache[ 2 ] = oldCache[ 2 ]);
                                } else {
                                    // Reuse newcache so results back-propagate to previous elements
                                    uniqueCache[ dir ] = newCache;
    
                                    // A match means we're done; a fail means we have to keep checking
                                    if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                };
        }
    
        function elementMatcher( matchers ) {
            return matchers.length > 1 ?
                function( elem, context, xml ) {
                    var i = matchers.length;
                    while ( i-- ) {
                        if ( !matchers[i]( elem, context, xml ) ) {
                            return false;
                        }
                    }
                    return true;
                } :
                matchers[0];
        }
    
        function multipleContexts( selector, contexts, results ) {
            var i = 0,
                len = contexts.length;
            for ( ; i < len; i++ ) {
                Sizzle( selector, contexts[i], results );
            }
            return results;
        }
    
        function condense( unmatched, map, filter, context, xml ) {
            var elem,
                newUnmatched = [],
                i = 0,
                len = unmatched.length,
                mapped = map != null;
    
            for ( ; i < len; i++ ) {
                if ( (elem = unmatched[i]) ) {
                    if ( !filter || filter( elem, context, xml ) ) {
                        newUnmatched.push( elem );
                        if ( mapped ) {
                            map.push( i );
                        }
                    }
                }
            }
    
            return newUnmatched;
        }
    
        function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
            if ( postFilter && !postFilter[ expando ] ) {
                postFilter = setMatcher( postFilter );
            }
            if ( postFinder && !postFinder[ expando ] ) {
                postFinder = setMatcher( postFinder, postSelector );
            }
            return markFunction(function( seed, results, context, xml ) {
                var temp, i, elem,
                    preMap = [],
                    postMap = [],
                    preexisting = results.length,
    
                    // Get initial elements from seed or context
                    elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),
    
                    // Prefilter to get matcher input, preserving a map for seed-results synchronization
                    matcherIn = preFilter && ( seed || !selector ) ?
                        condense( elems, preMap, preFilter, context, xml ) :
                        elems,
    
                    matcherOut = matcher ?
                        // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                        postFinder || ( seed ? preFilter : preexisting || postFilter ) ?
    
                            // ...intermediate processing is necessary
                            [] :
    
                            // ...otherwise use results directly
                            results :
                        matcherIn;
    
                // Find primary matches
                if ( matcher ) {
                    matcher( matcherIn, matcherOut, context, xml );
                }
    
                // Apply postFilter
                if ( postFilter ) {
                    temp = condense( matcherOut, postMap );
                    postFilter( temp, [], context, xml );
    
                    // Un-match failing elements by moving them back to matcherIn
                    i = temp.length;
                    while ( i-- ) {
                        if ( (elem = temp[i]) ) {
                            matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
                        }
                    }
                }
    
                if ( seed ) {
                    if ( postFinder || preFilter ) {
                        if ( postFinder ) {
                            // Get the final matcherOut by condensing this intermediate into postFinder contexts
                            temp = [];
                            i = matcherOut.length;
                            while ( i-- ) {
                                if ( (elem = matcherOut[i]) ) {
                                    // Restore matcherIn since elem is not yet a final match
                                    temp.push( (matcherIn[i] = elem) );
                                }
                            }
                            postFinder( null, (matcherOut = []), temp, xml );
                        }
    
                        // Move matched elements from seed to results to keep them synchronized
                        i = matcherOut.length;
                        while ( i-- ) {
                            if ( (elem = matcherOut[i]) &&
                                (temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {
    
                                seed[temp] = !(results[temp] = elem);
                            }
                        }
                    }
    
                // Add elements to results, through postFinder if defined
                } else {
                    matcherOut = condense(
                        matcherOut === results ?
                            matcherOut.splice( preexisting, matcherOut.length ) :
                            matcherOut
                    );
                    if ( postFinder ) {
                        postFinder( null, results, matcherOut, xml );
                    } else {
                        push.apply( results, matcherOut );
                    }
                }
            });
        }
    
        function matcherFromTokens( tokens ) {
            var checkContext, matcher, j,
                len = tokens.length,
                leadingRelative = Expr.relative[ tokens[0].type ],
                implicitRelative = leadingRelative || Expr.relative[" "],
                i = leadingRelative ? 1 : 0,
    
                // The foundational matcher ensures that elements are reachable from top-level context(s)
                matchContext = addCombinator( function( elem ) {
                    return elem === checkContext;
                }, implicitRelative, true ),
                matchAnyContext = addCombinator( function( elem ) {
                    return indexOf( checkContext, elem ) > -1;
                }, implicitRelative, true ),
                matchers = [ function( elem, context, xml ) {
                    var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
                        (checkContext = context).nodeType ?
                            matchContext( elem, context, xml ) :
                            matchAnyContext( elem, context, xml ) );
                    // Avoid hanging onto element (issue #299)
                    checkContext = null;
                    return ret;
                } ];
    
            for ( ; i < len; i++ ) {
                if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
                    matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
                } else {
                    matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );
    
                    // Return special upon seeing a positional matcher
                    if ( matcher[ expando ] ) {
                        // Find the next relative operator (if any) for proper handling
                        j = ++i;
                        for ( ; j < len; j++ ) {
                            if ( Expr.relative[ tokens[j].type ] ) {
                                break;
                            }
                        }
                        return setMatcher(
                            i > 1 && elementMatcher( matchers ),
                            i > 1 && toSelector(
                                // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                                tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
                            ).replace( rtrim, "$1" ),
                            matcher,
                            i < j && matcherFromTokens( tokens.slice( i, j ) ),
                            j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
                            j < len && toSelector( tokens )
                        );
                    }
                    matchers.push( matcher );
                }
            }
    
            return elementMatcher( matchers );
        }
    
        function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
            var bySet = setMatchers.length > 0,
                byElement = elementMatchers.length > 0,
                superMatcher = function( seed, context, xml, results, outermost ) {
                    var elem, j, matcher,
                        matchedCount = 0,
                        i = "0",
                        unmatched = seed && [],
                        setMatched = [],
                        contextBackup = outermostContext,
                        // We must always have either seed elements or outermost context
                        elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
                        // Use integer dirruns iff this is the outermost matcher
                        dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
                        len = elems.length;
    
                    if ( outermost ) {
                        outermostContext = context === document || context || outermost;
                    }
    
                    // Add elements passing elementMatchers directly to results
                    // Support: IE<9, Safari
                    // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                    for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
                        if ( byElement && elem ) {
                            j = 0;
                            if ( !context && elem.ownerDocument !== document ) {
                                setDocument( elem );
                                xml = !documentIsHTML;
                            }
                            while ( (matcher = elementMatchers[j++]) ) {
                                if ( matcher( elem, context || document, xml) ) {
                                    results.push( elem );
                                    break;
                                }
                            }
                            if ( outermost ) {
                                dirruns = dirrunsUnique;
                            }
                        }
    
                        // Track unmatched elements for set filters
                        if ( bySet ) {
                            // They will have gone through all possible matchers
                            if ( (elem = !matcher && elem) ) {
                                matchedCount--;
                            }
    
                            // Lengthen the array for every element, matched or not
                            if ( seed ) {
                                unmatched.push( elem );
                            }
                        }
                    }
    
                    // `i` is now the count of elements visited above, and adding it to `matchedCount`
                    // makes the latter nonnegative.
                    matchedCount += i;
    
                    // Apply set filters to unmatched elements
                    // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                    // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                    // no element matchers and no seed.
                    // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                    // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                    // numerically zero.
                    if ( bySet && i !== matchedCount ) {
                        j = 0;
                        while ( (matcher = setMatchers[j++]) ) {
                            matcher( unmatched, setMatched, context, xml );
                        }
    
                        if ( seed ) {
                            // Reintegrate element matches to eliminate the need for sorting
                            if ( matchedCount > 0 ) {
                                while ( i-- ) {
                                    if ( !(unmatched[i] || setMatched[i]) ) {
                                        setMatched[i] = pop.call( results );
                                    }
                                }
                            }
    
                            // Discard index placeholder values to get only actual matches
                            setMatched = condense( setMatched );
                        }
    
                        // Add matches to results
                        push.apply( results, setMatched );
    
                        // Seedless set matches succeeding multiple successful matchers stipulate sorting
                        if ( outermost && !seed && setMatched.length > 0 &&
                            ( matchedCount + setMatchers.length ) > 1 ) {
    
                            Sizzle.uniqueSort( results );
                        }
                    }
    
                    // Override manipulation of globals by nested matchers
                    if ( outermost ) {
                        dirruns = dirrunsUnique;
                        outermostContext = contextBackup;
                    }
    
                    return unmatched;
                };
    
            return bySet ?
                markFunction( superMatcher ) :
                superMatcher;
        }
    
        compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
            var i,
                setMatchers = [],
                elementMatchers = [],
                cached = compilerCache[ selector + " " ];
    
            if ( !cached ) {
                // Generate a function of recursive functions that can be used to check each element
                if ( !match ) {
                    match = tokenize( selector );
                }
                i = match.length;
                while ( i-- ) {
                    cached = matcherFromTokens( match[i] );
                    if ( cached[ expando ] ) {
                        setMatchers.push( cached );
                    } else {
                        elementMatchers.push( cached );
                    }
                }
    
                // Cache the compiled function
                cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
    
                // Save selector and tokenization
                cached.selector = selector;
            }
            return cached;
        };
    
        /**
         * A low-level selection function that works with Sizzle's compiled
         *  selector functions
         * @param {String|Function} selector A selector or a pre-compiled
         *  selector function built with Sizzle.compile
         * @param {Element} context
         * @param {Array} [results]
         * @param {Array} [seed] A set of elements to match against
         */
        select = Sizzle.select = function( selector, context, results, seed ) {
            var i, tokens, token, type, find,
                compiled = typeof selector === "function" && selector,
                match = !seed && tokenize( (selector = compiled.selector || selector) );
    
            results = results || [];
    
            // Try to minimize operations if there is only one selector in the list and no seed
            // (the latter of which guarantees us context)
            if ( match.length === 1 ) {
    
                // Reduce context if the leading compound selector is an ID
                tokens = match[0] = match[0].slice( 0 );
                if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
                        support.getById && context.nodeType === 9 && documentIsHTML &&
                        Expr.relative[ tokens[1].type ] ) {
    
                    context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
                    if ( !context ) {
                        return results;
    
                    // Precompiled matchers will still verify ancestry, so step up a level
                    } else if ( compiled ) {
                        context = context.parentNode;
                    }
    
                    selector = selector.slice( tokens.shift().value.length );
                }
    
                // Fetch a seed set for right-to-left matching
                i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
                while ( i-- ) {
                    token = tokens[i];
    
                    // Abort if we hit a combinator
                    if ( Expr.relative[ (type = token.type) ] ) {
                        break;
                    }
                    if ( (find = Expr.find[ type ]) ) {
                        // Search, expanding context for leading sibling combinators
                        if ( (seed = find(
                            token.matches[0].replace( runescape, funescape ),
                            rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
                        )) ) {
    
                            // If seed is empty or no tokens remain, we can return early
                            tokens.splice( i, 1 );
                            selector = seed.length && toSelector( tokens );
                            if ( !selector ) {
                                push.apply( results, seed );
                                return results;
                            }
    
                            break;
                        }
                    }
                }
            }
    
            // Compile and execute a filtering function if one is not provided
            // Provide `match` to avoid retokenization if we modified the selector above
            ( compiled || compile( selector, match ) )(
                seed,
                context,
                !documentIsHTML,
                results,
                !context || rsibling.test( selector ) && testContext( context.parentNode ) || context
            );
            return results;
        };
    
        // One-time assignments
    
        // Sort stability
        support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;
    
        // Support: Chrome 14-35+
        // Always assume duplicates if they aren't passed to the comparison function
        support.detectDuplicates = !!hasDuplicate;
    
        // Initialize against the default document
        setDocument();
    
        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
        // Detached nodes confoundingly follow *each other*
        support.sortDetached = assert(function( div1 ) {
            // Should return 1, but returns 4 (following)
            return div1.compareDocumentPosition( document.createElement("div") ) & 1;
        });
    
        // Support: IE<8
        // Prevent attribute/property "interpolation"
        // http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
        if ( !assert(function( div ) {
            div.innerHTML = "<a href='#'></a>";
            return div.firstChild.getAttribute("href") === "#" ;
        }) ) {
            addHandle( "type|href|height|width", function( elem, name, isXML ) {
                if ( !isXML ) {
                    return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
                }
            });
        }
    
        // Support: IE<9
        // Use defaultValue in place of getAttribute("value")
        if ( !support.attributes || !assert(function( div ) {
            div.innerHTML = "<input/>";
            div.firstChild.setAttribute( "value", "" );
            return div.firstChild.getAttribute( "value" ) === "";
        }) ) {
            addHandle( "value", function( elem, name, isXML ) {
                if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
                    return elem.defaultValue;
                }
            });
        }
    
        // Support: IE<9
        // Use getAttributeNode to fetch booleans when getAttribute lies
        if ( !assert(function( div ) {
            return div.getAttribute("disabled") == null;
        }) ) {
            addHandle( booleans, function( elem, name, isXML ) {
                var val;
                if ( !isXML ) {
                    return elem[ name ] === true ? name.toLowerCase() :
                            (val = elem.getAttributeNode( name )) && val.specified ?
                            val.value :
                        null;
                }
            });
        }
    
        return Sizzle;
    
        })( window );
    
    
    
        jQuery.find = Sizzle;
        jQuery.expr = Sizzle.selectors;
        jQuery.expr[ ":" ] = jQuery.expr.pseudos;
        jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
        jQuery.text = Sizzle.getText;
        jQuery.isXMLDoc = Sizzle.isXML;
        jQuery.contains = Sizzle.contains;
    
    
    
        var dir = function( elem, dir, until ) {
            var matched = [],
                truncate = until !== undefined;
    
            while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
                if ( elem.nodeType === 1 ) {
                    if ( truncate && jQuery( elem ).is( until ) ) {
                        break;
                    }
                    matched.push( elem );
                }
            }
            return matched;
        };
    
    
        var siblings = function( n, elem ) {
            var matched = [];
    
            for ( ; n; n = n.nextSibling ) {
                if ( n.nodeType === 1 && n !== elem ) {
                    matched.push( n );
                }
            }
    
            return matched;
        };
    
    
        var rneedsContext = jQuery.expr.match.needsContext;
    
        var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );
    
    
    
        var risSimple = /^.[^:#\[\.,]*$/;
    
        // Implement the identical functionality for filter and not
        function winnow( elements, qualifier, not ) {
            if ( jQuery.isFunction( qualifier ) ) {
                return jQuery.grep( elements, function( elem, i ) {
                    /* jshint -W018 */
                    return !!qualifier.call( elem, i, elem ) !== not;
                } );
    
            }
    
            if ( qualifier.nodeType ) {
                return jQuery.grep( elements, function( elem ) {
                    return ( elem === qualifier ) !== not;
                } );
    
            }
    
            if ( typeof qualifier === "string" ) {
                if ( risSimple.test( qualifier ) ) {
                    return jQuery.filter( qualifier, elements, not );
                }
    
                qualifier = jQuery.filter( qualifier, elements );
            }
    
            return jQuery.grep( elements, function( elem ) {
                return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
            } );
        }
    
        jQuery.filter = function( expr, elems, not ) {
            var elem = elems[ 0 ];
    
            if ( not ) {
                expr = ":not(" + expr + ")";
            }
    
            return elems.length === 1 && elem.nodeType === 1 ?
                jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
                jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
                    return elem.nodeType === 1;
                } ) );
        };
    
        jQuery.fn.extend( {
            find: function( selector ) {
                var i,
                    len = this.length,
                    ret = [],
                    self = this;
    
                if ( typeof selector !== "string" ) {
                    return this.pushStack( jQuery( selector ).filter( function() {
                        for ( i = 0; i < len; i++ ) {
                            if ( jQuery.contains( self[ i ], this ) ) {
                                return true;
                            }
                        }
                    } ) );
                }
    
                for ( i = 0; i < len; i++ ) {
                    jQuery.find( selector, self[ i ], ret );
                }
    
                // Needed because $( selector, context ) becomes $( context ).find( selector )
                ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
                ret.selector = this.selector ? this.selector + " " + selector : selector;
                return ret;
            },
            filter: function( selector ) {
                return this.pushStack( winnow( this, selector || [], false ) );
            },
            not: function( selector ) {
                return this.pushStack( winnow( this, selector || [], true ) );
            },
            is: function( selector ) {
                return !!winnow(
                    this,
    
                    // If this is a positional/relative selector, check membership in the returned set
                    // so $("p:first").is("p:last") won't return true for a doc with two "p".
                    typeof selector === "string" && rneedsContext.test( selector ) ?
                        jQuery( selector ) :
                        selector || [],
                    false
                ).length;
            }
        } );
    
    
        // Initialize a jQuery object
    
    
        // A central reference to the root jQuery(document)
        var rootjQuery,
    
            // A simple way to check for HTML strings
            // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
            // Strict HTML recognition (#11290: must start with <)
            rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
    
            init = jQuery.fn.init = function( selector, context, root ) {
                var match, elem;
    
                // HANDLE: $(""), $(null), $(undefined), $(false)
                if ( !selector ) {
                    return this;
                }
    
                // Method init() accepts an alternate rootjQuery
                // so migrate can support jQuery.sub (gh-2101)
                root = root || rootjQuery;
    
                // Handle HTML strings
                if ( typeof selector === "string" ) {
                    if ( selector[ 0 ] === "<" &&
                        selector[ selector.length - 1 ] === ">" &&
                        selector.length >= 3 ) {
    
                        // Assume that strings that start and end with <> are HTML and skip the regex check
                        match = [ null, selector, null ];
    
                    } else {
                        match = rquickExpr.exec( selector );
                    }
    
                    // Match html or make sure no context is specified for #id
                    if ( match && ( match[ 1 ] || !context ) ) {
    
                        // HANDLE: $(html) -> $(array)
                        if ( match[ 1 ] ) {
                            context = context instanceof jQuery ? context[ 0 ] : context;
    
                            // Option to run scripts is true for back-compat
                            // Intentionally let the error be thrown if parseHTML is not present
                            jQuery.merge( this, jQuery.parseHTML(
                                match[ 1 ],
                                context && context.nodeType ? context.ownerDocument || context : document,
                                true
                            ) );
    
                            // HANDLE: $(html, props)
                            if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
                                for ( match in context ) {
    
                                    // Properties of context are called as methods if possible
                                    if ( jQuery.isFunction( this[ match ] ) ) {
                                        this[ match ]( context[ match ] );
    
                                    // ...and otherwise set as attributes
                                    } else {
                                        this.attr( match, context[ match ] );
                                    }
                                }
                            }
    
                            return this;
    
                        // HANDLE: $(#id)
                        } else {
                            elem = document.getElementById( match[ 2 ] );
    
                            // Support: Blackberry 4.6
                            // gEBID returns nodes no longer in the document (#6963)
                            if ( elem && elem.parentNode ) {
    
                                // Inject the element directly into the jQuery object
                                this.length = 1;
                                this[ 0 ] = elem;
                            }
    
                            this.context = document;
                            this.selector = selector;
                            return this;
                        }
    
                    // HANDLE: $(expr, $(...))
                    } else if ( !context || context.jquery ) {
                        return ( context || root ).find( selector );
    
                    // HANDLE: $(expr, context)
                    // (which is just equivalent to: $(context).find(expr)
                    } else {
                        return this.constructor( context ).find( selector );
                    }
    
                // HANDLE: $(DOMElement)
                } else if ( selector.nodeType ) {
                    this.context = this[ 0 ] = selector;
                    this.length = 1;
                    return this;
    
                // HANDLE: $(function)
                // Shortcut for document ready
                } else if ( jQuery.isFunction( selector ) ) {
                    return root.ready !== undefined ?
                        root.ready( selector ) :
    
                        // Execute immediately if ready is not present
                        selector( jQuery );
                }
    
                if ( selector.selector !== undefined ) {
                    this.selector = selector.selector;
                    this.context = selector.context;
                }
    
                return jQuery.makeArray( selector, this );
            };
    
        // Give the init function the jQuery prototype for later instantiation
        init.prototype = jQuery.fn;
    
        // Initialize central reference
        rootjQuery = jQuery( document );
    
    
        var rparentsprev = /^(?:parents|prev(?:Until|All))/,
    
            // Methods guaranteed to produce a unique set when starting from a unique set
            guaranteedUnique = {
                children: true,
                contents: true,
                next: true,
                prev: true
            };
    
        jQuery.fn.extend( {
            has: function( target ) {
                var targets = jQuery( target, this ),
                    l = targets.length;
    
                return this.filter( function() {
                    var i = 0;
                    for ( ; i < l; i++ ) {
                        if ( jQuery.contains( this, targets[ i ] ) ) {
                            return true;
                        }
                    }
                } );
            },
    
            closest: function( selectors, context ) {
                var cur,
                    i = 0,
                    l = this.length,
                    matched = [],
                    pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
                        jQuery( selectors, context || this.context ) :
                        0;
    
                for ( ; i < l; i++ ) {
                    for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {
    
                        // Always skip document fragments
                        if ( cur.nodeType < 11 && ( pos ?
                            pos.index( cur ) > -1 :
    
                            // Don't pass non-elements to Sizzle
                            cur.nodeType === 1 &&
                                jQuery.find.matchesSelector( cur, selectors ) ) ) {
    
                            matched.push( cur );
                            break;
                        }
                    }
                }
    
                return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
            },
    
            // Determine the position of an element within the set
            index: function( elem ) {
    
                // No argument, return index in parent
                if ( !elem ) {
                    return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
                }
    
                // Index in selector
                if ( typeof elem === "string" ) {
                    return indexOf.call( jQuery( elem ), this[ 0 ] );
                }
    
                // Locate the position of the desired element
                return indexOf.call( this,
    
                    // If it receives a jQuery object, the first element is used
                    elem.jquery ? elem[ 0 ] : elem
                );
            },
    
            add: function( selector, context ) {
                return this.pushStack(
                    jQuery.uniqueSort(
                        jQuery.merge( this.get(), jQuery( selector, context ) )
                    )
                );
            },
    
            addBack: function( selector ) {
                return this.add( selector == null ?
                    this.prevObject : this.prevObject.filter( selector )
                );
            }
        } );
    
        function sibling( cur, dir ) {
            while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
            return cur;
        }
    
        jQuery.each( {
            parent: function( elem ) {
                var parent = elem.parentNode;
                return parent && parent.nodeType !== 11 ? parent : null;
            },
            parents: function( elem ) {
                return dir( elem, "parentNode" );
            },
            parentsUntil: function( elem, i, until ) {
                return dir( elem, "parentNode", until );
            },
            next: function( elem ) {
                return sibling( elem, "nextSibling" );
            },
            prev: function( elem ) {
                return sibling( elem, "previousSibling" );
            },
            nextAll: function( elem ) {
                return dir( elem, "nextSibling" );
            },
            prevAll: function( elem ) {
                return dir( elem, "previousSibling" );
            },
            nextUntil: function( elem, i, until ) {
                return dir( elem, "nextSibling", until );
            },
            prevUntil: function( elem, i, until ) {
                return dir( elem, "previousSibling", until );
            },
            siblings: function( elem ) {
                return siblings( ( elem.parentNode || {} ).firstChild, elem );
            },
            children: function( elem ) {
                return siblings( elem.firstChild );
            },
            contents: function( elem ) {
                return elem.contentDocument || jQuery.merge( [], elem.childNodes );
            }
        }, function( name, fn ) {
            jQuery.fn[ name ] = function( until, selector ) {
                var matched = jQuery.map( this, fn, until );
    
                if ( name.slice( -5 ) !== "Until" ) {
                    selector = until;
                }
    
                if ( selector && typeof selector === "string" ) {
                    matched = jQuery.filter( selector, matched );
                }
    
                if ( this.length > 1 ) {
    
                    // Remove duplicates
                    if ( !guaranteedUnique[ name ] ) {
                        jQuery.uniqueSort( matched );
                    }
    
                    // Reverse order for parents* and prev-derivatives
                    if ( rparentsprev.test( name ) ) {
                        matched.reverse();
                    }
                }
    
                return this.pushStack( matched );
            };
        } );
        var rnotwhite = ( /\S+/g );
    
    
    
        // Convert String-formatted options into Object-formatted ones
        function createOptions( options ) {
            var object = {};
            jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
                object[ flag ] = true;
            } );
            return object;
        }
    
        /*
         * Create a callback list using the following parameters:
         *
         *	options: an optional list of space-separated options that will change how
         *			the callback list behaves or a more traditional option object
         *
         * By default a callback list will act like an event callback list and can be
         * "fired" multiple times.
         *
         * Possible options:
         *
         *	once:			will ensure the callback list can only be fired once (like a Deferred)
         *
         *	memory:			will keep track of previous values and will call any callback added
         *					after the list has been fired right away with the latest "memorized"
         *					values (like a Deferred)
         *
         *	unique:			will ensure a callback can only be added once (no duplicate in the list)
         *
         *	stopOnFalse:	interrupt callings when a callback returns false
         *
         */
        jQuery.Callbacks = function( options ) {
    
            // Convert options from String-formatted to Object-formatted if needed
            // (we check in cache first)
            options = typeof options === "string" ?
                createOptions( options ) :
                jQuery.extend( {}, options );
    
            var // Flag to know if list is currently firing
                firing,
    
                // Last fire value for non-forgettable lists
                memory,
    
                // Flag to know if list was already fired
                fired,
    
                // Flag to prevent firing
                locked,
    
                // Actual callback list
                list = [],
    
                // Queue of execution data for repeatable lists
                queue = [],
    
                // Index of currently firing callback (modified by add/remove as needed)
                firingIndex = -1,
    
                // Fire callbacks
                fire = function() {
    
                    // Enforce single-firing
                    locked = options.once;
    
                    // Execute callbacks for all pending executions,
                    // respecting firingIndex overrides and runtime changes
                    fired = firing = true;
                    for ( ; queue.length; firingIndex = -1 ) {
                        memory = queue.shift();
                        while ( ++firingIndex < list.length ) {
    
                            // Run callback and check for early termination
                            if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
                                options.stopOnFalse ) {
    
                                // Jump to end and forget the data so .add doesn't re-fire
                                firingIndex = list.length;
                                memory = false;
                            }
                        }
                    }
    
                    // Forget the data if we're done with it
                    if ( !options.memory ) {
                        memory = false;
                    }
    
                    firing = false;
    
                    // Clean up if we're done firing for good
                    if ( locked ) {
    
                        // Keep an empty list if we have data for future add calls
                        if ( memory ) {
                            list = [];
    
                        // Otherwise, this object is spent
                        } else {
                            list = "";
                        }
                    }
                },
    
                // Actual Callbacks object
                self = {
    
                    // Add a callback or a collection of callbacks to the list
                    add: function() {
                        if ( list ) {
    
                            // If we have memory from a past run, we should fire after adding
                            if ( memory && !firing ) {
                                firingIndex = list.length - 1;
                                queue.push( memory );
                            }
    
                            ( function add( args ) {
                                jQuery.each( args, function( _, arg ) {
                                    if ( jQuery.isFunction( arg ) ) {
                                        if ( !options.unique || !self.has( arg ) ) {
                                            list.push( arg );
                                        }
                                    } else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {
    
                                        // Inspect recursively
                                        add( arg );
                                    }
                                } );
                            } )( arguments );
    
                            if ( memory && !firing ) {
                                fire();
                            }
                        }
                        return this;
                    },
    
                    // Remove a callback from the list
                    remove: function() {
                        jQuery.each( arguments, function( _, arg ) {
                            var index;
                            while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
                                list.splice( index, 1 );
    
                                // Handle firing indexes
                                if ( index <= firingIndex ) {
                                    firingIndex--;
                                }
                            }
                        } );
                        return this;
                    },
    
                    // Check if a given callback is in the list.
                    // If no argument is given, return whether or not list has callbacks attached.
                    has: function( fn ) {
                        return fn ?
                            jQuery.inArray( fn, list ) > -1 :
                            list.length > 0;
                    },
    
                    // Remove all callbacks from the list
                    empty: function() {
                        if ( list ) {
                            list = [];
                        }
                        return this;
                    },
    
                    // Disable .fire and .add
                    // Abort any current/pending executions
                    // Clear all callbacks and values
                    disable: function() {
                        locked = queue = [];
                        list = memory = "";
                        return this;
                    },
                    disabled: function() {
                        return !list;
                    },
    
                    // Disable .fire
                    // Also disable .add unless we have memory (since it would have no effect)
                    // Abort any pending executions
                    lock: function() {
                        locked = queue = [];
                        if ( !memory ) {
                            list = memory = "";
                        }
                        return this;
                    },
                    locked: function() {
                        return !!locked;
                    },
    
                    // Call all callbacks with the given context and arguments
                    fireWith: function( context, args ) {
                        if ( !locked ) {
                            args = args || [];
                            args = [ context, args.slice ? args.slice() : args ];
                            queue.push( args );
                            if ( !firing ) {
                                fire();
                            }
                        }
                        return this;
                    },
    
                    // Call all the callbacks with the given arguments
                    fire: function() {
                        self.fireWith( this, arguments );
                        return this;
                    },
    
                    // To know if the callbacks have already been called at least once
                    fired: function() {
                        return !!fired;
                    }
                };
    
            return self;
        };
    
    
        jQuery.extend( {
    
            Deferred: function( func ) {
                var tuples = [
    
                        // action, add listener, listener list, final state
                        [ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
                        [ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
                        [ "notify", "progress", jQuery.Callbacks( "memory" ) ]
                    ],
                    state = "pending",
                    promise = {
                        state: function() {
                            return state;
                        },
                        always: function() {
                            deferred.done( arguments ).fail( arguments );
                            return this;
                        },
                        then: function( /* fnDone, fnFail, fnProgress */ ) {
                            var fns = arguments;
                            return jQuery.Deferred( function( newDefer ) {
                                jQuery.each( tuples, function( i, tuple ) {
                                    var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
    
                                    // deferred[ done | fail | progress ] for forwarding actions to newDefer
                                    deferred[ tuple[ 1 ] ]( function() {
                                        var returned = fn && fn.apply( this, arguments );
                                        if ( returned && jQuery.isFunction( returned.promise ) ) {
                                            returned.promise()
                                                .progress( newDefer.notify )
                                                .done( newDefer.resolve )
                                                .fail( newDefer.reject );
                                        } else {
                                            newDefer[ tuple[ 0 ] + "With" ](
                                                this === promise ? newDefer.promise() : this,
                                                fn ? [ returned ] : arguments
                                            );
                                        }
                                    } );
                                } );
                                fns = null;
                            } ).promise();
                        },
    
                        // Get a promise for this deferred
                        // If obj is provided, the promise aspect is added to the object
                        promise: function( obj ) {
                            return obj != null ? jQuery.extend( obj, promise ) : promise;
                        }
                    },
                    deferred = {};
    
                // Keep pipe for back-compat
                promise.pipe = promise.then;
    
                // Add list-specific methods
                jQuery.each( tuples, function( i, tuple ) {
                    var list = tuple[ 2 ],
                        stateString = tuple[ 3 ];
    
                    // promise[ done | fail | progress ] = list.add
                    promise[ tuple[ 1 ] ] = list.add;
    
                    // Handle state
                    if ( stateString ) {
                        list.add( function() {
    
                            // state = [ resolved | rejected ]
                            state = stateString;
    
                        // [ reject_list | resolve_list ].disable; progress_list.lock
                        }, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
                    }
    
                    // deferred[ resolve | reject | notify ]
                    deferred[ tuple[ 0 ] ] = function() {
                        deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
                        return this;
                    };
                    deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
                } );
    
                // Make the deferred a promise
                promise.promise( deferred );
    
                // Call given func if any
                if ( func ) {
                    func.call( deferred, deferred );
                }
    
                // All done!
                return deferred;
            },
    
            // Deferred helper
            when: function( subordinate /* , ..., subordinateN */ ) {
                var i = 0,
                    resolveValues = slice.call( arguments ),
                    length = resolveValues.length,
    
                    // the count of uncompleted subordinates
                    remaining = length !== 1 ||
                        ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,
    
                    // the master Deferred.
                    // If resolveValues consist of only a single Deferred, just use that.
                    deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
    
                    // Update function for both resolve and progress values
                    updateFunc = function( i, contexts, values ) {
                        return function( value ) {
                            contexts[ i ] = this;
                            values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
                            if ( values === progressValues ) {
                                deferred.notifyWith( contexts, values );
                            } else if ( !( --remaining ) ) {
                                deferred.resolveWith( contexts, values );
                            }
                        };
                    },
    
                    progressValues, progressContexts, resolveContexts;
    
                // Add listeners to Deferred subordinates; treat others as resolved
                if ( length > 1 ) {
                    progressValues = new Array( length );
                    progressContexts = new Array( length );
                    resolveContexts = new Array( length );
                    for ( ; i < length; i++ ) {
                        if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
                            resolveValues[ i ].promise()
                                .progress( updateFunc( i, progressContexts, progressValues ) )
                                .done( updateFunc( i, resolveContexts, resolveValues ) )
                                .fail( deferred.reject );
                        } else {
                            --remaining;
                        }
                    }
                }
    
                // If we're not waiting on anything, resolve the master
                if ( !remaining ) {
                    deferred.resolveWith( resolveContexts, resolveValues );
                }
    
                return deferred.promise();
            }
        } );
    
    
        // The deferred used on DOM ready
        var readyList;
    
        jQuery.fn.ready = function( fn ) {
    
            // Add the callback
            jQuery.ready.promise().done( fn );
    
            return this;
        };
    
        jQuery.extend( {
    
            // Is the DOM ready to be used? Set to true once it occurs.
            isReady: false,
    
            // A counter to track how many items to wait for before
            // the ready event fires. See #6781
            readyWait: 1,
    
            // Hold (or release) the ready event
            holdReady: function( hold ) {
                if ( hold ) {
                    jQuery.readyWait++;
                } else {
                    jQuery.ready( true );
                }
            },
    
            // Handle when the DOM is ready
            ready: function( wait ) {
    
                // Abort if there are pending holds or we're already ready
                if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
                    return;
                }
    
                // Remember that the DOM is ready
                jQuery.isReady = true;
    
                // If a normal DOM Ready event fired, decrement, and wait if need be
                if ( wait !== true && --jQuery.readyWait > 0 ) {
                    return;
                }
    
                // If there are functions bound, to execute
                readyList.resolveWith( document, [ jQuery ] );
    
                // Trigger any bound ready events
                if ( jQuery.fn.triggerHandler ) {
                    jQuery( document ).triggerHandler( "ready" );
                    jQuery( document ).off( "ready" );
                }
            }
        } );
    
        /**
         * The ready event handler and self cleanup method
         */
        function completed() {
            document.removeEventListener( "DOMContentLoaded", completed );
            window.removeEventListener( "load", completed );
            jQuery.ready();
        }
    
        jQuery.ready.promise = function( obj ) {
            if ( !readyList ) {
    
                readyList = jQuery.Deferred();
    
                // Catch cases where $(document).ready() is called
                // after the browser event has already occurred.
                // Support: IE9-10 only
                // Older IE sometimes signals "interactive" too soon
                if ( document.readyState === "complete" ||
                    ( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {
    
                    // Handle it asynchronously to allow scripts the opportunity to delay ready
                    window.setTimeout( jQuery.ready );
    
                } else {
    
                    // Use the handy event callback
                    document.addEventListener( "DOMContentLoaded", completed );
    
                    // A fallback to window.onload, that will always work
                    window.addEventListener( "load", completed );
                }
            }
            return readyList.promise( obj );
        };
    
        // Kick off the DOM ready check even if the user does not
        jQuery.ready.promise();
    
    
    
    
        // Multifunctional method to get and set values of a collection
        // The value/s can optionally be executed if it's a function
        var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
            var i = 0,
                len = elems.length,
                bulk = key == null;
    
            // Sets many values
            if ( jQuery.type( key ) === "object" ) {
                chainable = true;
                for ( i in key ) {
                    access( elems, fn, i, key[ i ], true, emptyGet, raw );
                }
    
            // Sets one value
            } else if ( value !== undefined ) {
                chainable = true;
    
                if ( !jQuery.isFunction( value ) ) {
                    raw = true;
                }
    
                if ( bulk ) {
    
                    // Bulk operations run against the entire set
                    if ( raw ) {
                        fn.call( elems, value );
                        fn = null;
    
                    // ...except when executing function values
                    } else {
                        bulk = fn;
                        fn = function( elem, key, value ) {
                            return bulk.call( jQuery( elem ), value );
                        };
                    }
                }
    
                if ( fn ) {
                    for ( ; i < len; i++ ) {
                        fn(
                            elems[ i ], key, raw ?
                            value :
                            value.call( elems[ i ], i, fn( elems[ i ], key ) )
                        );
                    }
                }
            }
    
            return chainable ?
                elems :
    
                // Gets
                bulk ?
                    fn.call( elems ) :
                    len ? fn( elems[ 0 ], key ) : emptyGet;
        };
        var acceptData = function( owner ) {
    
            // Accepts only:
            //  - Node
            //    - Node.ELEMENT_NODE
            //    - Node.DOCUMENT_NODE
            //  - Object
            //    - Any
            /* jshint -W018 */
            return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
        };
    
    
    
    
        function Data() {
            this.expando = jQuery.expando + Data.uid++;
        }
    
        Data.uid = 1;
    
        Data.prototype = {
    
            register: function( owner, initial ) {
                var value = initial || {};
    
                // If it is a node unlikely to be stringify-ed or looped over
                // use plain assignment
                if ( owner.nodeType ) {
                    owner[ this.expando ] = value;
    
                // Otherwise secure it in a non-enumerable, non-writable property
                // configurability must be true to allow the property to be
                // deleted with the delete operator
                } else {
                    Object.defineProperty( owner, this.expando, {
                        value: value,
                        writable: true,
                        configurable: true
                    } );
                }
                return owner[ this.expando ];
            },
            cache: function( owner ) {
    
                // We can accept data for non-element nodes in modern browsers,
                // but we should not, see #8335.
                // Always return an empty object.
                if ( !acceptData( owner ) ) {
                    return {};
                }
    
                // Check if the owner object already has a cache
                var value = owner[ this.expando ];
    
                // If not, create one
                if ( !value ) {
                    value = {};
    
                    // We can accept data for non-element nodes in modern browsers,
                    // but we should not, see #8335.
                    // Always return an empty object.
                    if ( acceptData( owner ) ) {
    
                        // If it is a node unlikely to be stringify-ed or looped over
                        // use plain assignment
                        if ( owner.nodeType ) {
                            owner[ this.expando ] = value;
    
                        // Otherwise secure it in a non-enumerable property
                        // configurable must be true to allow the property to be
                        // deleted when data is removed
                        } else {
                            Object.defineProperty( owner, this.expando, {
                                value: value,
                                configurable: true
                            } );
                        }
                    }
                }
    
                return value;
            },
            set: function( owner, data, value ) {
                var prop,
                    cache = this.cache( owner );
    
                // Handle: [ owner, key, value ] args
                if ( typeof data === "string" ) {
                    cache[ data ] = value;
    
                // Handle: [ owner, { properties } ] args
                } else {
    
                    // Copy the properties one-by-one to the cache object
                    for ( prop in data ) {
                        cache[ prop ] = data[ prop ];
                    }
                }
                return cache;
            },
            get: function( owner, key ) {
                return key === undefined ?
                    this.cache( owner ) :
                    owner[ this.expando ] && owner[ this.expando ][ key ];
            },
            access: function( owner, key, value ) {
                var stored;
    
                // In cases where either:
                //
                //   1. No key was specified
                //   2. A string key was specified, but no value provided
                //
                // Take the "read" path and allow the get method to determine
                // which value to return, respectively either:
                //
                //   1. The entire cache object
                //   2. The data stored at the key
                //
                if ( key === undefined ||
                        ( ( key && typeof key === "string" ) && value === undefined ) ) {
    
                    stored = this.get( owner, key );
    
                    return stored !== undefined ?
                        stored : this.get( owner, jQuery.camelCase( key ) );
                }
    
                // When the key is not a string, or both a key and value
                // are specified, set or extend (existing objects) with either:
                //
                //   1. An object of properties
                //   2. A key and value
                //
                this.set( owner, key, value );
    
                // Since the "set" path can have two possible entry points
                // return the expected data based on which path was taken[*]
                return value !== undefined ? value : key;
            },
            remove: function( owner, key ) {
                var i, name, camel,
                    cache = owner[ this.expando ];
    
                if ( cache === undefined ) {
                    return;
                }
    
                if ( key === undefined ) {
                    this.register( owner );
    
                } else {
    
                    // Support array or space separated string of keys
                    if ( jQuery.isArray( key ) ) {
    
                        // If "name" is an array of keys...
                        // When data is initially created, via ("key", "val") signature,
                        // keys will be converted to camelCase.
                        // Since there is no way to tell _how_ a key was added, remove
                        // both plain key and camelCase key. #12786
                        // This will only penalize the array argument path.
                        name = key.concat( key.map( jQuery.camelCase ) );
                    } else {
                        camel = jQuery.camelCase( key );
    
                        // Try the string as a key before any manipulation
                        if ( key in cache ) {
                            name = [ key, camel ];
                        } else {
    
                            // If a key with the spaces exists, use it.
                            // Otherwise, create an array by matching non-whitespace
                            name = camel;
                            name = name in cache ?
                                [ name ] : ( name.match( rnotwhite ) || [] );
                        }
                    }
    
                    i = name.length;
    
                    while ( i-- ) {
                        delete cache[ name[ i ] ];
                    }
                }
    
                // Remove the expando if there's no more data
                if ( key === undefined || jQuery.isEmptyObject( cache ) ) {
    
                    // Support: Chrome <= 35-45+
                    // Webkit & Blink performance suffers when deleting properties
                    // from DOM nodes, so set to undefined instead
                    // https://code.google.com/p/chromium/issues/detail?id=378607
                    if ( owner.nodeType ) {
                        owner[ this.expando ] = undefined;
                    } else {
                        delete owner[ this.expando ];
                    }
                }
            },
            hasData: function( owner ) {
                var cache = owner[ this.expando ];
                return cache !== undefined && !jQuery.isEmptyObject( cache );
            }
        };
        var dataPriv = new Data();
    
        var dataUser = new Data();
    
    
    
        //	Implementation Summary
        //
        //	1. Enforce API surface and semantic compatibility with 1.9.x branch
        //	2. Improve the module's maintainability by reducing the storage
        //		paths to a single mechanism.
        //	3. Use the same single mechanism to support "private" and "user" data.
        //	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
        //	5. Avoid exposing implementation details on user objects (eg. expando properties)
        //	6. Provide a clear path for implementation upgrade to WeakMap in 2014
    
        var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
            rmultiDash = /[A-Z]/g;
    
        function dataAttr( elem, key, data ) {
            var name;
    
            // If nothing was found internally, try to fetch any
            // data from the HTML5 data-* attribute
            if ( data === undefined && elem.nodeType === 1 ) {
                name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
                data = elem.getAttribute( name );
    
                if ( typeof data === "string" ) {
                    try {
                        data = data === "true" ? true :
                            data === "false" ? false :
                            data === "null" ? null :
    
                            // Only convert to a number if it doesn't change the string
                            +data + "" === data ? +data :
                            rbrace.test( data ) ? jQuery.parseJSON( data ) :
                            data;
                    } catch ( e ) {}
    
                    // Make sure we set the data so it isn't changed later
                    dataUser.set( elem, key, data );
                } else {
                    data = undefined;
                }
            }
            return data;
        }
    
        jQuery.extend( {
            hasData: function( elem ) {
                return dataUser.hasData( elem ) || dataPriv.hasData( elem );
            },
    
            data: function( elem, name, data ) {
                return dataUser.access( elem, name, data );
            },
    
            removeData: function( elem, name ) {
                dataUser.remove( elem, name );
            },
    
            // TODO: Now that all calls to _data and _removeData have been replaced
            // with direct calls to dataPriv methods, these can be deprecated.
            _data: function( elem, name, data ) {
                return dataPriv.access( elem, name, data );
            },
    
            _removeData: function( elem, name ) {
                dataPriv.remove( elem, name );
            }
        } );
    
        jQuery.fn.extend( {
            data: function( key, value ) {
                var i, name, data,
                    elem = this[ 0 ],
                    attrs = elem && elem.attributes;
    
                // Gets all values
                if ( key === undefined ) {
                    if ( this.length ) {
                        data = dataUser.get( elem );
    
                        if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
                            i = attrs.length;
                            while ( i-- ) {
    
                                // Support: IE11+
                                // The attrs elements can be null (#14894)
                                if ( attrs[ i ] ) {
                                    name = attrs[ i ].name;
                                    if ( name.indexOf( "data-" ) === 0 ) {
                                        name = jQuery.camelCase( name.slice( 5 ) );
                                        dataAttr( elem, name, data[ name ] );
                                    }
                                }
                            }
                            dataPriv.set( elem, "hasDataAttrs", true );
                        }
                    }
    
                    return data;
                }
    
                // Sets multiple values
                if ( typeof key === "object" ) {
                    return this.each( function() {
                        dataUser.set( this, key );
                    } );
                }
    
                return access( this, function( value ) {
                    var data, camelKey;
    
                    // The calling jQuery object (element matches) is not empty
                    // (and therefore has an element appears at this[ 0 ]) and the
                    // `value` parameter was not undefined. An empty jQuery object
                    // will result in `undefined` for elem = this[ 0 ] which will
                    // throw an exception if an attempt to read a data cache is made.
                    if ( elem && value === undefined ) {
    
                        // Attempt to get data from the cache
                        // with the key as-is
                        data = dataUser.get( elem, key ) ||
    
                            // Try to find dashed key if it exists (gh-2779)
                            // This is for 2.2.x only
                            dataUser.get( elem, key.replace( rmultiDash, "-$&" ).toLowerCase() );
    
                        if ( data !== undefined ) {
                            return data;
                        }
    
                        camelKey = jQuery.camelCase( key );
    
                        // Attempt to get data from the cache
                        // with the key camelized
                        data = dataUser.get( elem, camelKey );
                        if ( data !== undefined ) {
                            return data;
                        }
    
                        // Attempt to "discover" the data in
                        // HTML5 custom data-* attrs
                        data = dataAttr( elem, camelKey, undefined );
                        if ( data !== undefined ) {
                            return data;
                        }
    
                        // We tried really hard, but the data doesn't exist.
                        return;
                    }
    
                    // Set the data...
                    camelKey = jQuery.camelCase( key );
                    this.each( function() {
    
                        // First, attempt to store a copy or reference of any
                        // data that might've been store with a camelCased key.
                        var data = dataUser.get( this, camelKey );
    
                        // For HTML5 data-* attribute interop, we have to
                        // store property names with dashes in a camelCase form.
                        // This might not apply to all properties...*
                        dataUser.set( this, camelKey, value );
    
                        // *... In the case of properties that might _actually_
                        // have dashes, we need to also store a copy of that
                        // unchanged property.
                        if ( key.indexOf( "-" ) > -1 && data !== undefined ) {
                            dataUser.set( this, key, value );
                        }
                    } );
                }, null, value, arguments.length > 1, null, true );
            },
    
            removeData: function( key ) {
                return this.each( function() {
                    dataUser.remove( this, key );
                } );
            }
        } );
    
    
        jQuery.extend( {
            queue: function( elem, type, data ) {
                var queue;
    
                if ( elem ) {
                    type = ( type || "fx" ) + "queue";
                    queue = dataPriv.get( elem, type );
    
                    // Speed up dequeue by getting out quickly if this is just a lookup
                    if ( data ) {
                        if ( !queue || jQuery.isArray( data ) ) {
                            queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
                        } else {
                            queue.push( data );
                        }
                    }
                    return queue || [];
                }
            },
    
            dequeue: function( elem, type ) {
                type = type || "fx";
    
                var queue = jQuery.queue( elem, type ),
                    startLength = queue.length,
                    fn = queue.shift(),
                    hooks = jQuery._queueHooks( elem, type ),
                    next = function() {
                        jQuery.dequeue( elem, type );
                    };
    
                // If the fx queue is dequeued, always remove the progress sentinel
                if ( fn === "inprogress" ) {
                    fn = queue.shift();
                    startLength--;
                }
    
                if ( fn ) {
    
                    // Add a progress sentinel to prevent the fx queue from being
                    // automatically dequeued
                    if ( type === "fx" ) {
                        queue.unshift( "inprogress" );
                    }
    
                    // Clear up the last queue stop function
                    delete hooks.stop;
                    fn.call( elem, next, hooks );
                }
    
                if ( !startLength && hooks ) {
                    hooks.empty.fire();
                }
            },
    
            // Not public - generate a queueHooks object, or return the current one
            _queueHooks: function( elem, type ) {
                var key = type + "queueHooks";
                return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
                    empty: jQuery.Callbacks( "once memory" ).add( function() {
                        dataPriv.remove( elem, [ type + "queue", key ] );
                    } )
                } );
            }
        } );
    
        jQuery.fn.extend( {
            queue: function( type, data ) {
                var setter = 2;
    
                if ( typeof type !== "string" ) {
                    data = type;
                    type = "fx";
                    setter--;
                }
    
                if ( arguments.length < setter ) {
                    return jQuery.queue( this[ 0 ], type );
                }
    
                return data === undefined ?
                    this :
                    this.each( function() {
                        var queue = jQuery.queue( this, type, data );
    
                        // Ensure a hooks for this queue
                        jQuery._queueHooks( this, type );
    
                        if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
                            jQuery.dequeue( this, type );
                        }
                    } );
            },
            dequeue: function( type ) {
                return this.each( function() {
                    jQuery.dequeue( this, type );
                } );
            },
            clearQueue: function( type ) {
                return this.queue( type || "fx", [] );
            },
    
            // Get a promise resolved when queues of a certain type
            // are emptied (fx is the type by default)
            promise: function( type, obj ) {
                var tmp,
                    count = 1,
                    defer = jQuery.Deferred(),
                    elements = this,
                    i = this.length,
                    resolve = function() {
                        if ( !( --count ) ) {
                            defer.resolveWith( elements, [ elements ] );
                        }
                    };
    
                if ( typeof type !== "string" ) {
                    obj = type;
                    type = undefined;
                }
                type = type || "fx";
    
                while ( i-- ) {
                    tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
                    if ( tmp && tmp.empty ) {
                        count++;
                        tmp.empty.add( resolve );
                    }
                }
                resolve();
                return defer.promise( obj );
            }
        } );
        var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;
    
        var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );
    
    
        var cssExpand = [ "Top", "Right", "Bottom", "Left" ];
    
        var isHidden = function( elem, el ) {
    
                // isHidden might be called from jQuery#filter function;
                // in that case, element will be second argument
                elem = el || elem;
                return jQuery.css( elem, "display" ) === "none" ||
                    !jQuery.contains( elem.ownerDocument, elem );
            };
    
    
    
        function adjustCSS( elem, prop, valueParts, tween ) {
            var adjusted,
                scale = 1,
                maxIterations = 20,
                currentValue = tween ?
                    function() { return tween.cur(); } :
                    function() { return jQuery.css( elem, prop, "" ); },
                initial = currentValue(),
                unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),
    
                // Starting value computation is required for potential unit mismatches
                initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
                    rcssNum.exec( jQuery.css( elem, prop ) );
    
            if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {
    
                // Trust units reported by jQuery.css
                unit = unit || initialInUnit[ 3 ];
    
                // Make sure we update the tween properties later on
                valueParts = valueParts || [];
    
                // Iteratively approximate from a nonzero starting point
                initialInUnit = +initial || 1;
    
                do {
    
                    // If previous iteration zeroed out, double until we get *something*.
                    // Use string for doubling so we don't accidentally see scale as unchanged below
                    scale = scale || ".5";
    
                    // Adjust and apply
                    initialInUnit = initialInUnit / scale;
                    jQuery.style( elem, prop, initialInUnit + unit );
    
                // Update scale, tolerating zero or NaN from tween.cur()
                // Break the loop if scale is unchanged or perfect, or if we've just had enough.
                } while (
                    scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
                );
            }
    
            if ( valueParts ) {
                initialInUnit = +initialInUnit || +initial || 0;
    
                // Apply relative offset (+=/-=) if specified
                adjusted = valueParts[ 1 ] ?
                    initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
                    +valueParts[ 2 ];
                if ( tween ) {
                    tween.unit = unit;
                    tween.start = initialInUnit;
                    tween.end = adjusted;
                }
            }
            return adjusted;
        }
        var rcheckableType = ( /^(?:checkbox|radio)$/i );
    
        var rtagName = ( /<([\w:-]+)/ );
    
        var rscriptType = ( /^$|\/(?:java|ecma)script/i );
    
    
    
        // We have to close these tags to support XHTML (#13200)
        var wrapMap = {
    
            // Support: IE9
            option: [ 1, "<select multiple='multiple'>", "</select>" ],
    
            // XHTML parsers do not magically insert elements in the
            // same way that tag soup parsers do. So we cannot shorten
            // this by omitting <tbody> or other required elements.
            thead: [ 1, "<table>", "</table>" ],
            col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
            tr: [ 2, "<table><tbody>", "</tbody></table>" ],
            td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
    
            _default: [ 0, "", "" ]
        };
    
        // Support: IE9
        wrapMap.optgroup = wrapMap.option;
    
        wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
        wrapMap.th = wrapMap.td;
    
    
        function getAll( context, tag ) {
    
            // Support: IE9-11+
            // Use typeof to avoid zero-argument method invocation on host objects (#15151)
            var ret = typeof context.getElementsByTagName !== "undefined" ?
                    context.getElementsByTagName( tag || "*" ) :
                    typeof context.querySelectorAll !== "undefined" ?
                        context.querySelectorAll( tag || "*" ) :
                    [];
    
            return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
                jQuery.merge( [ context ], ret ) :
                ret;
        }
    
    
        // Mark scripts as having already been evaluated
        function setGlobalEval( elems, refElements ) {
            var i = 0,
                l = elems.length;
    
            for ( ; i < l; i++ ) {
                dataPriv.set(
                    elems[ i ],
                    "globalEval",
                    !refElements || dataPriv.get( refElements[ i ], "globalEval" )
                );
            }
        }
    
    
        var rhtml = /<|&#?\w+;/;
    
        function buildFragment( elems, context, scripts, selection, ignored ) {
            var elem, tmp, tag, wrap, contains, j,
                fragment = context.createDocumentFragment(),
                nodes = [],
                i = 0,
                l = elems.length;
    
            for ( ; i < l; i++ ) {
                elem = elems[ i ];
    
                if ( elem || elem === 0 ) {
    
                    // Add nodes directly
                    if ( jQuery.type( elem ) === "object" ) {
    
                        // Support: Android<4.1, PhantomJS<2
                        // push.apply(_, arraylike) throws on ancient WebKit
                        jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );
    
                    // Convert non-html into a text node
                    } else if ( !rhtml.test( elem ) ) {
                        nodes.push( context.createTextNode( elem ) );
    
                    // Convert html into DOM nodes
                    } else {
                        tmp = tmp || fragment.appendChild( context.createElement( "div" ) );
    
                        // Deserialize a standard representation
                        tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
                        wrap = wrapMap[ tag ] || wrapMap._default;
                        tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];
    
                        // Descend through wrappers to the right content
                        j = wrap[ 0 ];
                        while ( j-- ) {
                            tmp = tmp.lastChild;
                        }
    
                        // Support: Android<4.1, PhantomJS<2
                        // push.apply(_, arraylike) throws on ancient WebKit
                        jQuery.merge( nodes, tmp.childNodes );
    
                        // Remember the top-level container
                        tmp = fragment.firstChild;
    
                        // Ensure the created nodes are orphaned (#12392)
                        tmp.textContent = "";
                    }
                }
            }
    
            // Remove wrapper from fragment
            fragment.textContent = "";
    
            i = 0;
            while ( ( elem = nodes[ i++ ] ) ) {
    
                // Skip elements already in the context collection (trac-4087)
                if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
                    if ( ignored ) {
                        ignored.push( elem );
                    }
                    continue;
                }
    
                contains = jQuery.contains( elem.ownerDocument, elem );
    
                // Append to fragment
                tmp = getAll( fragment.appendChild( elem ), "script" );
    
                // Preserve script evaluation history
                if ( contains ) {
                    setGlobalEval( tmp );
                }
    
                // Capture executables
                if ( scripts ) {
                    j = 0;
                    while ( ( elem = tmp[ j++ ] ) ) {
                        if ( rscriptType.test( elem.type || "" ) ) {
                            scripts.push( elem );
                        }
                    }
                }
            }
    
            return fragment;
        }
    
    
        ( function() {
            var fragment = document.createDocumentFragment(),
                div = fragment.appendChild( document.createElement( "div" ) ),
                input = document.createElement( "input" );
    
            // Support: Android 4.0-4.3, Safari<=5.1
            // Check state lost if the name is set (#11217)
            // Support: Windows Web Apps (WWA)
            // `name` and `type` must use .setAttribute for WWA (#14901)
            input.setAttribute( "type", "radio" );
            input.setAttribute( "checked", "checked" );
            input.setAttribute( "name", "t" );
    
            div.appendChild( input );
    
            // Support: Safari<=5.1, Android<4.2
            // Older WebKit doesn't clone checked state correctly in fragments
            support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;
    
            // Support: IE<=11+
            // Make sure textarea (and checkbox) defaultValue is properly cloned
            div.innerHTML = "<textarea>x</textarea>";
            support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
        } )();
    
    
        var
            rkeyEvent = /^key/,
            rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
            rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
    
        function returnTrue() {
            return true;
        }
    
        function returnFalse() {
            return false;
        }
    
        // Support: IE9
        // See #13393 for more info
        function safeActiveElement() {
            try {
                return document.activeElement;
            } catch ( err ) { }
        }
    
        function on( elem, types, selector, data, fn, one ) {
            var origFn, type;
    
            // Types can be a map of types/handlers
            if ( typeof types === "object" ) {
    
                // ( types-Object, selector, data )
                if ( typeof selector !== "string" ) {
    
                    // ( types-Object, data )
                    data = data || selector;
                    selector = undefined;
                }
                for ( type in types ) {
                    on( elem, type, selector, data, types[ type ], one );
                }
                return elem;
            }
    
            if ( data == null && fn == null ) {
    
                // ( types, fn )
                fn = selector;
                data = selector = undefined;
            } else if ( fn == null ) {
                if ( typeof selector === "string" ) {
    
                    // ( types, selector, fn )
                    fn = data;
                    data = undefined;
                } else {
    
                    // ( types, data, fn )
                    fn = data;
                    data = selector;
                    selector = undefined;
                }
            }
            if ( fn === false ) {
                fn = returnFalse;
            } else if ( !fn ) {
                return elem;
            }
    
            if ( one === 1 ) {
                origFn = fn;
                fn = function( event ) {
    
                    // Can use an empty set, since event contains the info
                    jQuery().off( event );
                    return origFn.apply( this, arguments );
                };
    
                // Use same guid so caller can remove using origFn
                fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
            }
            return elem.each( function() {
                jQuery.event.add( this, types, fn, data, selector );
            } );
        }
    
        /*
         * Helper functions for managing events -- not part of the public interface.
         * Props to Dean Edwards' addEvent library for many of the ideas.
         */
        jQuery.event = {
    
            global: {},
    
            add: function( elem, types, handler, data, selector ) {
    
                var handleObjIn, eventHandle, tmp,
                    events, t, handleObj,
                    special, handlers, type, namespaces, origType,
                    elemData = dataPriv.get( elem );
    
                // Don't attach events to noData or text/comment nodes (but allow plain objects)
                if ( !elemData ) {
                    return;
                }
    
                // Caller can pass in an object of custom data in lieu of the handler
                if ( handler.handler ) {
                    handleObjIn = handler;
                    handler = handleObjIn.handler;
                    selector = handleObjIn.selector;
                }
    
                // Make sure that the handler has a unique ID, used to find/remove it later
                if ( !handler.guid ) {
                    handler.guid = jQuery.guid++;
                }
    
                // Init the element's event structure and main handler, if this is the first
                if ( !( events = elemData.events ) ) {
                    events = elemData.events = {};
                }
                if ( !( eventHandle = elemData.handle ) ) {
                    eventHandle = elemData.handle = function( e ) {
    
                        // Discard the second event of a jQuery.event.trigger() and
                        // when an event is called after a page has unloaded
                        return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
                            jQuery.event.dispatch.apply( elem, arguments ) : undefined;
                    };
                }
    
                // Handle multiple events separated by a space
                types = ( types || "" ).match( rnotwhite ) || [ "" ];
                t = types.length;
                while ( t-- ) {
                    tmp = rtypenamespace.exec( types[ t ] ) || [];
                    type = origType = tmp[ 1 ];
                    namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();
    
                    // There *must* be a type, no attaching namespace-only handlers
                    if ( !type ) {
                        continue;
                    }
    
                    // If event changes its type, use the special event handlers for the changed type
                    special = jQuery.event.special[ type ] || {};
    
                    // If selector defined, determine special event api type, otherwise given type
                    type = ( selector ? special.delegateType : special.bindType ) || type;
    
                    // Update special based on newly reset type
                    special = jQuery.event.special[ type ] || {};
    
                    // handleObj is passed to all event handlers
                    handleObj = jQuery.extend( {
                        type: type,
                        origType: origType,
                        data: data,
                        handler: handler,
                        guid: handler.guid,
                        selector: selector,
                        needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
                        namespace: namespaces.join( "." )
                    }, handleObjIn );
    
                    // Init the event handler queue if we're the first
                    if ( !( handlers = events[ type ] ) ) {
                        handlers = events[ type ] = [];
                        handlers.delegateCount = 0;
    
                        // Only use addEventListener if the special events handler returns false
                        if ( !special.setup ||
                            special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
    
                            if ( elem.addEventListener ) {
                                elem.addEventListener( type, eventHandle );
                            }
                        }
                    }
    
                    if ( special.add ) {
                        special.add.call( elem, handleObj );
    
                        if ( !handleObj.handler.guid ) {
                            handleObj.handler.guid = handler.guid;
                        }
                    }
    
                    // Add to the element's handler list, delegates in front
                    if ( selector ) {
                        handlers.splice( handlers.delegateCount++, 0, handleObj );
                    } else {
                        handlers.push( handleObj );
                    }
    
                    // Keep track of which events have ever been used, for event optimization
                    jQuery.event.global[ type ] = true;
                }
    
            },
    
            // Detach an event or set of events from an element
            remove: function( elem, types, handler, selector, mappedTypes ) {
    
                var j, origCount, tmp,
                    events, t, handleObj,
                    special, handlers, type, namespaces, origType,
                    elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );
    
                if ( !elemData || !( events = elemData.events ) ) {
                    return;
                }
    
                // Once for each type.namespace in types; type may be omitted
                types = ( types || "" ).match( rnotwhite ) || [ "" ];
                t = types.length;
                while ( t-- ) {
                    tmp = rtypenamespace.exec( types[ t ] ) || [];
                    type = origType = tmp[ 1 ];
                    namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();
    
                    // Unbind all events (on this namespace, if provided) for the element
                    if ( !type ) {
                        for ( type in events ) {
                            jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
                        }
                        continue;
                    }
    
                    special = jQuery.event.special[ type ] || {};
                    type = ( selector ? special.delegateType : special.bindType ) || type;
                    handlers = events[ type ] || [];
                    tmp = tmp[ 2 ] &&
                        new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );
    
                    // Remove matching events
                    origCount = j = handlers.length;
                    while ( j-- ) {
                        handleObj = handlers[ j ];
    
                        if ( ( mappedTypes || origType === handleObj.origType ) &&
                            ( !handler || handler.guid === handleObj.guid ) &&
                            ( !tmp || tmp.test( handleObj.namespace ) ) &&
                            ( !selector || selector === handleObj.selector ||
                                selector === "**" && handleObj.selector ) ) {
                            handlers.splice( j, 1 );
    
                            if ( handleObj.selector ) {
                                handlers.delegateCount--;
                            }
                            if ( special.remove ) {
                                special.remove.call( elem, handleObj );
                            }
                        }
                    }
    
                    // Remove generic event handler if we removed something and no more handlers exist
                    // (avoids potential for endless recursion during removal of special event handlers)
                    if ( origCount && !handlers.length ) {
                        if ( !special.teardown ||
                            special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
    
                            jQuery.removeEvent( elem, type, elemData.handle );
                        }
    
                        delete events[ type ];
                    }
                }
    
                // Remove data and the expando if it's no longer used
                if ( jQuery.isEmptyObject( events ) ) {
                    dataPriv.remove( elem, "handle events" );
                }
            },
    
            dispatch: function( event ) {
    
                // Make a writable jQuery.Event from the native event object
                event = jQuery.event.fix( event );
    
                var i, j, ret, matched, handleObj,
                    handlerQueue = [],
                    args = slice.call( arguments ),
                    handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
                    special = jQuery.event.special[ event.type ] || {};
    
                // Use the fix-ed jQuery.Event rather than the (read-only) native event
                args[ 0 ] = event;
                event.delegateTarget = this;
    
                // Call the preDispatch hook for the mapped type, and let it bail if desired
                if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
                    return;
                }
    
                // Determine handlers
                handlerQueue = jQuery.event.handlers.call( this, event, handlers );
    
                // Run delegates first; they may want to stop propagation beneath us
                i = 0;
                while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
                    event.currentTarget = matched.elem;
    
                    j = 0;
                    while ( ( handleObj = matched.handlers[ j++ ] ) &&
                        !event.isImmediatePropagationStopped() ) {
    
                        // Triggered event must either 1) have no namespace, or 2) have namespace(s)
                        // a subset or equal to those in the bound event (both can have no namespace).
                        if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {
    
                            event.handleObj = handleObj;
                            event.data = handleObj.data;
    
                            ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
                                handleObj.handler ).apply( matched.elem, args );
    
                            if ( ret !== undefined ) {
                                if ( ( event.result = ret ) === false ) {
                                    event.preventDefault();
                                    event.stopPropagation();
                                }
                            }
                        }
                    }
                }
    
                // Call the postDispatch hook for the mapped type
                if ( special.postDispatch ) {
                    special.postDispatch.call( this, event );
                }
    
                return event.result;
            },
    
            handlers: function( event, handlers ) {
                var i, matches, sel, handleObj,
                    handlerQueue = [],
                    delegateCount = handlers.delegateCount,
                    cur = event.target;
    
                // Support (at least): Chrome, IE9
                // Find delegate handlers
                // Black-hole SVG <use> instance trees (#13180)
                //
                // Support: Firefox<=42+
                // Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
                if ( delegateCount && cur.nodeType &&
                    ( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {
    
                    for ( ; cur !== this; cur = cur.parentNode || this ) {
    
                        // Don't check non-elements (#13208)
                        // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
                        if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
                            matches = [];
                            for ( i = 0; i < delegateCount; i++ ) {
                                handleObj = handlers[ i ];
    
                                // Don't conflict with Object.prototype properties (#13203)
                                sel = handleObj.selector + " ";
    
                                if ( matches[ sel ] === undefined ) {
                                    matches[ sel ] = handleObj.needsContext ?
                                        jQuery( sel, this ).index( cur ) > -1 :
                                        jQuery.find( sel, this, null, [ cur ] ).length;
                                }
                                if ( matches[ sel ] ) {
                                    matches.push( handleObj );
                                }
                            }
                            if ( matches.length ) {
                                handlerQueue.push( { elem: cur, handlers: matches } );
                            }
                        }
                    }
                }
    
                // Add the remaining (directly-bound) handlers
                if ( delegateCount < handlers.length ) {
                    handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
                }
    
                return handlerQueue;
            },
    
            // Includes some event props shared by KeyEvent and MouseEvent
            props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
                "metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),
    
            fixHooks: {},
    
            keyHooks: {
                props: "char charCode key keyCode".split( " " ),
                filter: function( event, original ) {
    
                    // Add which for key events
                    if ( event.which == null ) {
                        event.which = original.charCode != null ? original.charCode : original.keyCode;
                    }
    
                    return event;
                }
            },
    
            mouseHooks: {
                props: ( "button buttons clientX clientY offsetX offsetY pageX pageY " +
                    "screenX screenY toElement" ).split( " " ),
                filter: function( event, original ) {
                    var eventDoc, doc, body,
                        button = original.button;
    
                    // Calculate pageX/Y if missing and clientX/Y available
                    if ( event.pageX == null && original.clientX != null ) {
                        eventDoc = event.target.ownerDocument || document;
                        doc = eventDoc.documentElement;
                        body = eventDoc.body;
    
                        event.pageX = original.clientX +
                            ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
                            ( doc && doc.clientLeft || body && body.clientLeft || 0 );
                        event.pageY = original.clientY +
                            ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
                            ( doc && doc.clientTop  || body && body.clientTop  || 0 );
                    }
    
                    // Add which for click: 1 === left; 2 === middle; 3 === right
                    // Note: button is not normalized, so don't use it
                    if ( !event.which && button !== undefined ) {
                        event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
                    }
    
                    return event;
                }
            },
    
            fix: function( event ) {
                if ( event[ jQuery.expando ] ) {
                    return event;
                }
    
                // Create a writable copy of the event object and normalize some properties
                var i, prop, copy,
                    type = event.type,
                    originalEvent = event,
                    fixHook = this.fixHooks[ type ];
    
                if ( !fixHook ) {
                    this.fixHooks[ type ] = fixHook =
                        rmouseEvent.test( type ) ? this.mouseHooks :
                        rkeyEvent.test( type ) ? this.keyHooks :
                        {};
                }
                copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;
    
                event = new jQuery.Event( originalEvent );
    
                i = copy.length;
                while ( i-- ) {
                    prop = copy[ i ];
                    event[ prop ] = originalEvent[ prop ];
                }
    
                // Support: Cordova 2.5 (WebKit) (#13255)
                // All events should have a target; Cordova deviceready doesn't
                if ( !event.target ) {
                    event.target = document;
                }
    
                // Support: Safari 6.0+, Chrome<28
                // Target should not be a text node (#504, #13143)
                if ( event.target.nodeType === 3 ) {
                    event.target = event.target.parentNode;
                }
    
                return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
            },
    
            special: {
                load: {
    
                    // Prevent triggered image.load events from bubbling to window.load
                    noBubble: true
                },
                focus: {
    
                    // Fire native event if possible so blur/focus sequence is correct
                    trigger: function() {
                        if ( this !== safeActiveElement() && this.focus ) {
                            this.focus();
                            return false;
                        }
                    },
                    delegateType: "focusin"
                },
                blur: {
                    trigger: function() {
                        if ( this === safeActiveElement() && this.blur ) {
                            this.blur();
                            return false;
                        }
                    },
                    delegateType: "focusout"
                },
                click: {
    
                    // For checkbox, fire native event so checked state will be right
                    trigger: function() {
                        if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
                            this.click();
                            return false;
                        }
                    },
    
                    // For cross-browser consistency, don't fire native .click() on links
                    _default: function( event ) {
                        return jQuery.nodeName( event.target, "a" );
                    }
                },
    
                beforeunload: {
                    postDispatch: function( event ) {
    
                        // Support: Firefox 20+
                        // Firefox doesn't alert if the returnValue field is not set.
                        if ( event.result !== undefined && event.originalEvent ) {
                            event.originalEvent.returnValue = event.result;
                        }
                    }
                }
            }
        };
    
        jQuery.removeEvent = function( elem, type, handle ) {
    
            // This "if" is needed for plain objects
            if ( elem.removeEventListener ) {
                elem.removeEventListener( type, handle );
            }
        };
    
        jQuery.Event = function( src, props ) {
    
            // Allow instantiation without the 'new' keyword
            if ( !( this instanceof jQuery.Event ) ) {
                return new jQuery.Event( src, props );
            }
    
            // Event object
            if ( src && src.type ) {
                this.originalEvent = src;
                this.type = src.type;
    
                // Events bubbling up the document may have been marked as prevented
                // by a handler lower down the tree; reflect the correct value.
                this.isDefaultPrevented = src.defaultPrevented ||
                        src.defaultPrevented === undefined &&
    
                        // Support: Android<4.0
                        src.returnValue === false ?
                    returnTrue :
                    returnFalse;
    
            // Event type
            } else {
                this.type = src;
            }
    
            // Put explicitly provided properties onto the event object
            if ( props ) {
                jQuery.extend( this, props );
            }
    
            // Create a timestamp if incoming event doesn't have one
            this.timeStamp = src && src.timeStamp || jQuery.now();
    
            // Mark it as fixed
            this[ jQuery.expando ] = true;
        };
    
        // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
        // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
        jQuery.Event.prototype = {
            constructor: jQuery.Event,
            isDefaultPrevented: returnFalse,
            isPropagationStopped: returnFalse,
            isImmediatePropagationStopped: returnFalse,
            isSimulated: false,
    
            preventDefault: function() {
                var e = this.originalEvent;
    
                this.isDefaultPrevented = returnTrue;
    
                if ( e && !this.isSimulated ) {
                    e.preventDefault();
                }
            },
            stopPropagation: function() {
                var e = this.originalEvent;
    
                this.isPropagationStopped = returnTrue;
    
                if ( e && !this.isSimulated ) {
                    e.stopPropagation();
                }
            },
            stopImmediatePropagation: function() {
                var e = this.originalEvent;
    
                this.isImmediatePropagationStopped = returnTrue;
    
                if ( e && !this.isSimulated ) {
                    e.stopImmediatePropagation();
                }
    
                this.stopPropagation();
            }
        };
    
        // Create mouseenter/leave events using mouseover/out and event-time checks
        // so that event delegation works in jQuery.
        // Do the same for pointerenter/pointerleave and pointerover/pointerout
        //
        // Support: Safari 7 only
        // Safari sends mouseenter too often; see:
        // https://code.google.com/p/chromium/issues/detail?id=470258
        // for the description of the bug (it existed in older Chrome versions as well).
        jQuery.each( {
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout"
        }, function( orig, fix ) {
            jQuery.event.special[ orig ] = {
                delegateType: fix,
                bindType: fix,
    
                handle: function( event ) {
                    var ret,
                        target = this,
                        related = event.relatedTarget,
                        handleObj = event.handleObj;
    
                    // For mouseenter/leave call the handler if related is outside the target.
                    // NB: No relatedTarget if the mouse left/entered the browser window
                    if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
                        event.type = handleObj.origType;
                        ret = handleObj.handler.apply( this, arguments );
                        event.type = fix;
                    }
                    return ret;
                }
            };
        } );
    
        jQuery.fn.extend( {
            on: function( types, selector, data, fn ) {
                return on( this, types, selector, data, fn );
            },
            one: function( types, selector, data, fn ) {
                return on( this, types, selector, data, fn, 1 );
            },
            off: function( types, selector, fn ) {
                var handleObj, type;
                if ( types && types.preventDefault && types.handleObj ) {
    
                    // ( event )  dispatched jQuery.Event
                    handleObj = types.handleObj;
                    jQuery( types.delegateTarget ).off(
                        handleObj.namespace ?
                            handleObj.origType + "." + handleObj.namespace :
                            handleObj.origType,
                        handleObj.selector,
                        handleObj.handler
                    );
                    return this;
                }
                if ( typeof types === "object" ) {
    
                    // ( types-object [, selector] )
                    for ( type in types ) {
                        this.off( type, selector, types[ type ] );
                    }
                    return this;
                }
                if ( selector === false || typeof selector === "function" ) {
    
                    // ( types [, fn] )
                    fn = selector;
                    selector = undefined;
                }
                if ( fn === false ) {
                    fn = returnFalse;
                }
                return this.each( function() {
                    jQuery.event.remove( this, types, fn, selector );
                } );
            }
        } );
    
    
        var
            rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
    
            // Support: IE 10-11, Edge 10240+
            // In IE/Edge using regex groups here causes severe slowdowns.
            // See https://connect.microsoft.com/IE/feedback/details/1736512/
            rnoInnerhtml = /<script|<style|<link/i,
    
            // checked="checked" or checked
            rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
            rscriptTypeMasked = /^true\/(.*)/,
            rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    
        // Manipulating tables requires a tbody
        function manipulationTarget( elem, content ) {
            return jQuery.nodeName( elem, "table" ) &&
                jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?
    
                elem.getElementsByTagName( "tbody" )[ 0 ] ||
                    elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
                elem;
        }
    
        // Replace/restore the type attribute of script elements for safe DOM manipulation
        function disableScript( elem ) {
            elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
            return elem;
        }
        function restoreScript( elem ) {
            var match = rscriptTypeMasked.exec( elem.type );
    
            if ( match ) {
                elem.type = match[ 1 ];
            } else {
                elem.removeAttribute( "type" );
            }
    
            return elem;
        }
    
        function cloneCopyEvent( src, dest ) {
            var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
    
            if ( dest.nodeType !== 1 ) {
                return;
            }
    
            // 1. Copy private data: events, handlers, etc.
            if ( dataPriv.hasData( src ) ) {
                pdataOld = dataPriv.access( src );
                pdataCur = dataPriv.set( dest, pdataOld );
                events = pdataOld.events;
    
                if ( events ) {
                    delete pdataCur.handle;
                    pdataCur.events = {};
    
                    for ( type in events ) {
                        for ( i = 0, l = events[ type ].length; i < l; i++ ) {
                            jQuery.event.add( dest, type, events[ type ][ i ] );
                        }
                    }
                }
            }
    
            // 2. Copy user data
            if ( dataUser.hasData( src ) ) {
                udataOld = dataUser.access( src );
                udataCur = jQuery.extend( {}, udataOld );
    
                dataUser.set( dest, udataCur );
            }
        }
    
        // Fix IE bugs, see support tests
        function fixInput( src, dest ) {
            var nodeName = dest.nodeName.toLowerCase();
    
            // Fails to persist the checked state of a cloned checkbox or radio button.
            if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
                dest.checked = src.checked;
    
            // Fails to return the selected option to the default selected state when cloning options
            } else if ( nodeName === "input" || nodeName === "textarea" ) {
                dest.defaultValue = src.defaultValue;
            }
        }
    
        function domManip( collection, args, callback, ignored ) {
    
            // Flatten any nested arrays
            args = concat.apply( [], args );
    
            var fragment, first, scripts, hasScripts, node, doc,
                i = 0,
                l = collection.length,
                iNoClone = l - 1,
                value = args[ 0 ],
                isFunction = jQuery.isFunction( value );
    
            // We can't cloneNode fragments that contain checked, in WebKit
            if ( isFunction ||
                    ( l > 1 && typeof value === "string" &&
                        !support.checkClone && rchecked.test( value ) ) ) {
                return collection.each( function( index ) {
                    var self = collection.eq( index );
                    if ( isFunction ) {
                        args[ 0 ] = value.call( this, index, self.html() );
                    }
                    domManip( self, args, callback, ignored );
                } );
            }
    
            if ( l ) {
                fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
                first = fragment.firstChild;
    
                if ( fragment.childNodes.length === 1 ) {
                    fragment = first;
                }
    
                // Require either new content or an interest in ignored elements to invoke the callback
                if ( first || ignored ) {
                    scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
                    hasScripts = scripts.length;
    
                    // Use the original fragment for the last item
                    // instead of the first because it can end up
                    // being emptied incorrectly in certain situations (#8070).
                    for ( ; i < l; i++ ) {
                        node = fragment;
    
                        if ( i !== iNoClone ) {
                            node = jQuery.clone( node, true, true );
    
                            // Keep references to cloned scripts for later restoration
                            if ( hasScripts ) {
    
                                // Support: Android<4.1, PhantomJS<2
                                // push.apply(_, arraylike) throws on ancient WebKit
                                jQuery.merge( scripts, getAll( node, "script" ) );
                            }
                        }
    
                        callback.call( collection[ i ], node, i );
                    }
    
                    if ( hasScripts ) {
                        doc = scripts[ scripts.length - 1 ].ownerDocument;
    
                        // Reenable scripts
                        jQuery.map( scripts, restoreScript );
    
                        // Evaluate executable scripts on first document insertion
                        for ( i = 0; i < hasScripts; i++ ) {
                            node = scripts[ i ];
                            if ( rscriptType.test( node.type || "" ) &&
                                !dataPriv.access( node, "globalEval" ) &&
                                jQuery.contains( doc, node ) ) {
    
                                if ( node.src ) {
    
                                    // Optional AJAX dependency, but won't run scripts if not present
                                    if ( jQuery._evalUrl ) {
                                        jQuery._evalUrl( node.src );
                                    }
                                } else {
                                    jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
                                }
                            }
                        }
                    }
                }
            }
    
            return collection;
        }
    
        function remove( elem, selector, keepData ) {
            var node,
                nodes = selector ? jQuery.filter( selector, elem ) : elem,
                i = 0;
    
            for ( ; ( node = nodes[ i ] ) != null; i++ ) {
                if ( !keepData && node.nodeType === 1 ) {
                    jQuery.cleanData( getAll( node ) );
                }
    
                if ( node.parentNode ) {
                    if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
                        setGlobalEval( getAll( node, "script" ) );
                    }
                    node.parentNode.removeChild( node );
                }
            }
    
            return elem;
        }
    
        jQuery.extend( {
            htmlPrefilter: function( html ) {
                return html.replace( rxhtmlTag, "<$1></$2>" );
            },
    
            clone: function( elem, dataAndEvents, deepDataAndEvents ) {
                var i, l, srcElements, destElements,
                    clone = elem.cloneNode( true ),
                    inPage = jQuery.contains( elem.ownerDocument, elem );
    
                // Fix IE cloning issues
                if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
                        !jQuery.isXMLDoc( elem ) ) {
    
                    // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
                    destElements = getAll( clone );
                    srcElements = getAll( elem );
    
                    for ( i = 0, l = srcElements.length; i < l; i++ ) {
                        fixInput( srcElements[ i ], destElements[ i ] );
                    }
                }
    
                // Copy the events from the original to the clone
                if ( dataAndEvents ) {
                    if ( deepDataAndEvents ) {
                        srcElements = srcElements || getAll( elem );
                        destElements = destElements || getAll( clone );
    
                        for ( i = 0, l = srcElements.length; i < l; i++ ) {
                            cloneCopyEvent( srcElements[ i ], destElements[ i ] );
                        }
                    } else {
                        cloneCopyEvent( elem, clone );
                    }
                }
    
                // Preserve script evaluation history
                destElements = getAll( clone, "script" );
                if ( destElements.length > 0 ) {
                    setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
                }
    
                // Return the cloned set
                return clone;
            },
    
            cleanData: function( elems ) {
                var data, elem, type,
                    special = jQuery.event.special,
                    i = 0;
    
                for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
                    if ( acceptData( elem ) ) {
                        if ( ( data = elem[ dataPriv.expando ] ) ) {
                            if ( data.events ) {
                                for ( type in data.events ) {
                                    if ( special[ type ] ) {
                                        jQuery.event.remove( elem, type );
    
                                    // This is a shortcut to avoid jQuery.event.remove's overhead
                                    } else {
                                        jQuery.removeEvent( elem, type, data.handle );
                                    }
                                }
                            }
    
                            // Support: Chrome <= 35-45+
                            // Assign undefined instead of using delete, see Data#remove
                            elem[ dataPriv.expando ] = undefined;
                        }
                        if ( elem[ dataUser.expando ] ) {
    
                            // Support: Chrome <= 35-45+
                            // Assign undefined instead of using delete, see Data#remove
                            elem[ dataUser.expando ] = undefined;
                        }
                    }
                }
            }
        } );
    
        jQuery.fn.extend( {
    
            // Keep domManip exposed until 3.0 (gh-2225)
            domManip: domManip,
    
            detach: function( selector ) {
                return remove( this, selector, true );
            },
    
            remove: function( selector ) {
                return remove( this, selector );
            },
    
            text: function( value ) {
                return access( this, function( value ) {
                    return value === undefined ?
                        jQuery.text( this ) :
                        this.empty().each( function() {
                            if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                                this.textContent = value;
                            }
                        } );
                }, null, value, arguments.length );
            },
    
            append: function() {
                return domManip( this, arguments, function( elem ) {
                    if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                        var target = manipulationTarget( this, elem );
                        target.appendChild( elem );
                    }
                } );
            },
    
            prepend: function() {
                return domManip( this, arguments, function( elem ) {
                    if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                        var target = manipulationTarget( this, elem );
                        target.insertBefore( elem, target.firstChild );
                    }
                } );
            },
    
            before: function() {
                return domManip( this, arguments, function( elem ) {
                    if ( this.parentNode ) {
                        this.parentNode.insertBefore( elem, this );
                    }
                } );
            },
    
            after: function() {
                return domManip( this, arguments, function( elem ) {
                    if ( this.parentNode ) {
                        this.parentNode.insertBefore( elem, this.nextSibling );
                    }
                } );
            },
    
            empty: function() {
                var elem,
                    i = 0;
    
                for ( ; ( elem = this[ i ] ) != null; i++ ) {
                    if ( elem.nodeType === 1 ) {
    
                        // Prevent memory leaks
                        jQuery.cleanData( getAll( elem, false ) );
    
                        // Remove any remaining nodes
                        elem.textContent = "";
                    }
                }
    
                return this;
            },
    
            clone: function( dataAndEvents, deepDataAndEvents ) {
                dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
                deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
    
                return this.map( function() {
                    return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
                } );
            },
    
            html: function( value ) {
                return access( this, function( value ) {
                    var elem = this[ 0 ] || {},
                        i = 0,
                        l = this.length;
    
                    if ( value === undefined && elem.nodeType === 1 ) {
                        return elem.innerHTML;
                    }
    
                    // See if we can take a shortcut and just use innerHTML
                    if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
                        !wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {
    
                        value = jQuery.htmlPrefilter( value );
    
                        try {
                            for ( ; i < l; i++ ) {
                                elem = this[ i ] || {};
    
                                // Remove element nodes and prevent memory leaks
                                if ( elem.nodeType === 1 ) {
                                    jQuery.cleanData( getAll( elem, false ) );
                                    elem.innerHTML = value;
                                }
                            }
    
                            elem = 0;
    
                        // If using innerHTML throws an exception, use the fallback method
                        } catch ( e ) {}
                    }
    
                    if ( elem ) {
                        this.empty().append( value );
                    }
                }, null, value, arguments.length );
            },
    
            replaceWith: function() {
                var ignored = [];
    
                // Make the changes, replacing each non-ignored context element with the new content
                return domManip( this, arguments, function( elem ) {
                    var parent = this.parentNode;
    
                    if ( jQuery.inArray( this, ignored ) < 0 ) {
                        jQuery.cleanData( getAll( this ) );
                        if ( parent ) {
                            parent.replaceChild( elem, this );
                        }
                    }
    
                // Force callback invocation
                }, ignored );
            }
        } );
    
        jQuery.each( {
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function( name, original ) {
            jQuery.fn[ name ] = function( selector ) {
                var elems,
                    ret = [],
                    insert = jQuery( selector ),
                    last = insert.length - 1,
                    i = 0;
    
                for ( ; i <= last; i++ ) {
                    elems = i === last ? this : this.clone( true );
                    jQuery( insert[ i ] )[ original ]( elems );
    
                    // Support: QtWebKit
                    // .get() because push.apply(_, arraylike) throws
                    push.apply( ret, elems.get() );
                }
    
                return this.pushStack( ret );
            };
        } );
    
    
        var iframe,
            elemdisplay = {
    
                // Support: Firefox
                // We have to pre-define these values for FF (#10227)
                HTML: "block",
                BODY: "block"
            };
    
        /**
         * Retrieve the actual display of a element
         * @param {String} name nodeName of the element
         * @param {Object} doc Document object
         */
    
        // Called only from within defaultDisplay
        function actualDisplay( name, doc ) {
            var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),
    
                display = jQuery.css( elem[ 0 ], "display" );
    
            // We don't have any data stored on the element,
            // so use "detach" method as fast way to get rid of the element
            elem.detach();
    
            return display;
        }
    
        /**
         * Try to determine the default display value of an element
         * @param {String} nodeName
         */
        function defaultDisplay( nodeName ) {
            var doc = document,
                display = elemdisplay[ nodeName ];
    
            if ( !display ) {
                display = actualDisplay( nodeName, doc );
    
                // If the simple way fails, read from inside an iframe
                if ( display === "none" || !display ) {
    
                    // Use the already-created iframe if possible
                    iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
                        .appendTo( doc.documentElement );
    
                    // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
                    doc = iframe[ 0 ].contentDocument;
    
                    // Support: IE
                    doc.write();
                    doc.close();
    
                    display = actualDisplay( nodeName, doc );
                    iframe.detach();
                }
    
                // Store the correct default display
                elemdisplay[ nodeName ] = display;
            }
    
            return display;
        }
        var rmargin = ( /^margin/ );
    
        var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );
    
        var getStyles = function( elem ) {
    
                // Support: IE<=11+, Firefox<=30+ (#15098, #14150)
                // IE throws on elements created in popups
                // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
                var view = elem.ownerDocument.defaultView;
    
                if ( !view || !view.opener ) {
                    view = window;
                }
    
                return view.getComputedStyle( elem );
            };
    
        var swap = function( elem, options, callback, args ) {
            var ret, name,
                old = {};
    
            // Remember the old values, and insert the new ones
            for ( name in options ) {
                old[ name ] = elem.style[ name ];
                elem.style[ name ] = options[ name ];
            }
    
            ret = callback.apply( elem, args || [] );
    
            // Revert the old values
            for ( name in options ) {
                elem.style[ name ] = old[ name ];
            }
    
            return ret;
        };
    
    
        var documentElement = document.documentElement;
    
    
    
        ( function() {
            var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
                container = document.createElement( "div" ),
                div = document.createElement( "div" );
    
            // Finish early in limited (non-browser) environments
            if ( !div.style ) {
                return;
            }
    
            // Support: IE9-11+
            // Style of cloned element affects source element cloned (#8908)
            div.style.backgroundClip = "content-box";
            div.cloneNode( true ).style.backgroundClip = "";
            support.clearCloneStyle = div.style.backgroundClip === "content-box";
    
            container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
                "padding:0;margin-top:1px;position:absolute";
            container.appendChild( div );
    
            // Executing both pixelPosition & boxSizingReliable tests require only one layout
            // so they're executed at the same time to save the second computation.
            function computeStyleTests() {
                div.style.cssText =
    
                    // Support: Firefox<29, Android 2.3
                    // Vendor-prefix box-sizing
                    "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" +
                    "position:relative;display:block;" +
                    "margin:auto;border:1px;padding:1px;" +
                    "top:1%;width:50%";
                div.innerHTML = "";
                documentElement.appendChild( container );
    
                var divStyle = window.getComputedStyle( div );
                pixelPositionVal = divStyle.top !== "1%";
                reliableMarginLeftVal = divStyle.marginLeft === "2px";
                boxSizingReliableVal = divStyle.width === "4px";
    
                // Support: Android 4.0 - 4.3 only
                // Some styles come back with percentage values, even though they shouldn't
                div.style.marginRight = "50%";
                pixelMarginRightVal = divStyle.marginRight === "4px";
    
                documentElement.removeChild( container );
            }
    
            jQuery.extend( support, {
                pixelPosition: function() {
    
                    // This test is executed only once but we still do memoizing
                    // since we can use the boxSizingReliable pre-computing.
                    // No need to check if the test was already performed, though.
                    computeStyleTests();
                    return pixelPositionVal;
                },
                boxSizingReliable: function() {
                    if ( boxSizingReliableVal == null ) {
                        computeStyleTests();
                    }
                    return boxSizingReliableVal;
                },
                pixelMarginRight: function() {
    
                    // Support: Android 4.0-4.3
                    // We're checking for boxSizingReliableVal here instead of pixelMarginRightVal
                    // since that compresses better and they're computed together anyway.
                    if ( boxSizingReliableVal == null ) {
                        computeStyleTests();
                    }
                    return pixelMarginRightVal;
                },
                reliableMarginLeft: function() {
    
                    // Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
                    if ( boxSizingReliableVal == null ) {
                        computeStyleTests();
                    }
                    return reliableMarginLeftVal;
                },
                reliableMarginRight: function() {
    
                    // Support: Android 2.3
                    // Check if div with explicit width and no margin-right incorrectly
                    // gets computed margin-right based on width of container. (#3333)
                    // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
                    // This support function is only executed once so no memoizing is needed.
                    var ret,
                        marginDiv = div.appendChild( document.createElement( "div" ) );
    
                    // Reset CSS: box-sizing; display; margin; border; padding
                    marginDiv.style.cssText = div.style.cssText =
    
                        // Support: Android 2.3
                        // Vendor-prefix box-sizing
                        "-webkit-box-sizing:content-box;box-sizing:content-box;" +
                        "display:block;margin:0;border:0;padding:0";
                    marginDiv.style.marginRight = marginDiv.style.width = "0";
                    div.style.width = "1px";
                    documentElement.appendChild( container );
    
                    ret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );
    
                    documentElement.removeChild( container );
                    div.removeChild( marginDiv );
    
                    return ret;
                }
            } );
        } )();
    
    
        function curCSS( elem, name, computed ) {
            var width, minWidth, maxWidth, ret,
                style = elem.style;
    
            computed = computed || getStyles( elem );
            ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;
    
            // Support: Opera 12.1x only
            // Fall back to style even without computed
            // computed is undefined for elems on document fragments
            if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
                ret = jQuery.style( elem, name );
            }
    
            // Support: IE9
            // getPropertyValue is only needed for .css('filter') (#12537)
            if ( computed ) {
    
                // A tribute to the "awesome hack by Dean Edwards"
                // Android Browser returns percentage for some values,
                // but width seems to be reliably pixels.
                // This is against the CSSOM draft spec:
                // http://dev.w3.org/csswg/cssom/#resolved-values
                if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {
    
                    // Remember the original values
                    width = style.width;
                    minWidth = style.minWidth;
                    maxWidth = style.maxWidth;
    
                    // Put in the new values to get a computed value out
                    style.minWidth = style.maxWidth = style.width = ret;
                    ret = computed.width;
    
                    // Revert the changed values
                    style.width = width;
                    style.minWidth = minWidth;
                    style.maxWidth = maxWidth;
                }
            }
    
            return ret !== undefined ?
    
                // Support: IE9-11+
                // IE returns zIndex value as an integer.
                ret + "" :
                ret;
        }
    
    
        function addGetHookIf( conditionFn, hookFn ) {
    
            // Define the hook, we'll check on the first run if it's really needed.
            return {
                get: function() {
                    if ( conditionFn() ) {
    
                        // Hook not needed (or it's not possible to use it due
                        // to missing dependency), remove it.
                        delete this.get;
                        return;
                    }
    
                    // Hook needed; redefine it so that the support test is not executed again.
                    return ( this.get = hookFn ).apply( this, arguments );
                }
            };
        }
    
    
        var
    
            // Swappable if display is none or starts with table
            // except "table", "table-cell", or "table-caption"
            // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
            rdisplayswap = /^(none|table(?!-c[ea]).+)/,
    
            cssShow = { position: "absolute", visibility: "hidden", display: "block" },
            cssNormalTransform = {
                letterSpacing: "0",
                fontWeight: "400"
            },
    
            cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
            emptyStyle = document.createElement( "div" ).style;
    
        // Return a css property mapped to a potentially vendor prefixed property
        function vendorPropName( name ) {
    
            // Shortcut for names that are not vendor prefixed
            if ( name in emptyStyle ) {
                return name;
            }
    
            // Check for vendor prefixed names
            var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
                i = cssPrefixes.length;
    
            while ( i-- ) {
                name = cssPrefixes[ i ] + capName;
                if ( name in emptyStyle ) {
                    return name;
                }
            }
        }
    
        function setPositiveNumber( elem, value, subtract ) {
    
            // Any relative (+/-) values have already been
            // normalized at this point
            var matches = rcssNum.exec( value );
            return matches ?
    
                // Guard against undefined "subtract", e.g., when used as in cssHooks
                Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
                value;
        }
    
        function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
            var i = extra === ( isBorderBox ? "border" : "content" ) ?
    
                // If we already have the right measurement, avoid augmentation
                4 :
    
                // Otherwise initialize for horizontal or vertical properties
                name === "width" ? 1 : 0,
    
                val = 0;
    
            for ( ; i < 4; i += 2 ) {
    
                // Both box models exclude margin, so add it if we want it
                if ( extra === "margin" ) {
                    val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
                }
    
                if ( isBorderBox ) {
    
                    // border-box includes padding, so remove it if we want content
                    if ( extra === "content" ) {
                        val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
                    }
    
                    // At this point, extra isn't border nor margin, so remove border
                    if ( extra !== "margin" ) {
                        val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
                    }
                } else {
    
                    // At this point, extra isn't content, so add padding
                    val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
    
                    // At this point, extra isn't content nor padding, so add border
                    if ( extra !== "padding" ) {
                        val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
                    }
                }
            }
    
            return val;
        }
    
        function getWidthOrHeight( elem, name, extra ) {
    
            // Start with offset property, which is equivalent to the border-box value
            var valueIsBorderBox = true,
                val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
                styles = getStyles( elem ),
                isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";
    
            // Some non-html elements return undefined for offsetWidth, so check for null/undefined
            // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
            // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
            if ( val <= 0 || val == null ) {
    
                // Fall back to computed then uncomputed css if necessary
                val = curCSS( elem, name, styles );
                if ( val < 0 || val == null ) {
                    val = elem.style[ name ];
                }
    
                // Computed unit is not pixels. Stop here and return.
                if ( rnumnonpx.test( val ) ) {
                    return val;
                }
    
                // Check for style in case a browser which returns unreliable values
                // for getComputedStyle silently falls back to the reliable elem.style
                valueIsBorderBox = isBorderBox &&
                    ( support.boxSizingReliable() || val === elem.style[ name ] );
    
                // Normalize "", auto, and prepare for extra
                val = parseFloat( val ) || 0;
            }
    
            // Use the active box-sizing model to add/subtract irrelevant styles
            return ( val +
                augmentWidthOrHeight(
                    elem,
                    name,
                    extra || ( isBorderBox ? "border" : "content" ),
                    valueIsBorderBox,
                    styles
                )
            ) + "px";
        }
    
        function showHide( elements, show ) {
            var display, elem, hidden,
                values = [],
                index = 0,
                length = elements.length;
    
            for ( ; index < length; index++ ) {
                elem = elements[ index ];
                if ( !elem.style ) {
                    continue;
                }
    
                values[ index ] = dataPriv.get( elem, "olddisplay" );
                display = elem.style.display;
                if ( show ) {
    
                    // Reset the inline display of this element to learn if it is
                    // being hidden by cascaded rules or not
                    if ( !values[ index ] && display === "none" ) {
                        elem.style.display = "";
                    }
    
                    // Set elements which have been overridden with display: none
                    // in a stylesheet to whatever the default browser style is
                    // for such an element
                    if ( elem.style.display === "" && isHidden( elem ) ) {
                        values[ index ] = dataPriv.access(
                            elem,
                            "olddisplay",
                            defaultDisplay( elem.nodeName )
                        );
                    }
                } else {
                    hidden = isHidden( elem );
    
                    if ( display !== "none" || !hidden ) {
                        dataPriv.set(
                            elem,
                            "olddisplay",
                            hidden ? display : jQuery.css( elem, "display" )
                        );
                    }
                }
            }
    
            // Set the display of most of the elements in a second loop
            // to avoid the constant reflow
            for ( index = 0; index < length; index++ ) {
                elem = elements[ index ];
                if ( !elem.style ) {
                    continue;
                }
                if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
                    elem.style.display = show ? values[ index ] || "" : "none";
                }
            }
    
            return elements;
        }
    
        jQuery.extend( {
    
            // Add in style property hooks for overriding the default
            // behavior of getting and setting a style property
            cssHooks: {
                opacity: {
                    get: function( elem, computed ) {
                        if ( computed ) {
    
                            // We should always get a number back from opacity
                            var ret = curCSS( elem, "opacity" );
                            return ret === "" ? "1" : ret;
                        }
                    }
                }
            },
    
            // Don't automatically add "px" to these possibly-unitless properties
            cssNumber: {
                "animationIterationCount": true,
                "columnCount": true,
                "fillOpacity": true,
                "flexGrow": true,
                "flexShrink": true,
                "fontWeight": true,
                "lineHeight": true,
                "opacity": true,
                "order": true,
                "orphans": true,
                "widows": true,
                "zIndex": true,
                "zoom": true
            },
    
            // Add in properties whose names you wish to fix before
            // setting or getting the value
            cssProps: {
                "float": "cssFloat"
            },
    
            // Get and set the style property on a DOM Node
            style: function( elem, name, value, extra ) {
    
                // Don't set styles on text and comment nodes
                if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
                    return;
                }
    
                // Make sure that we're working with the right name
                var ret, type, hooks,
                    origName = jQuery.camelCase( name ),
                    style = elem.style;
    
                name = jQuery.cssProps[ origName ] ||
                    ( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );
    
                // Gets hook for the prefixed version, then unprefixed version
                hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
    
                // Check if we're setting a value
                if ( value !== undefined ) {
                    type = typeof value;
    
                    // Convert "+=" or "-=" to relative numbers (#7345)
                    if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
                        value = adjustCSS( elem, name, ret );
    
                        // Fixes bug #9237
                        type = "number";
                    }
    
                    // Make sure that null and NaN values aren't set (#7116)
                    if ( value == null || value !== value ) {
                        return;
                    }
    
                    // If a number was passed in, add the unit (except for certain CSS properties)
                    if ( type === "number" ) {
                        value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
                    }
    
                    // Support: IE9-11+
                    // background-* props affect original clone's values
                    if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
                        style[ name ] = "inherit";
                    }
    
                    // If a hook was provided, use that value, otherwise just set the specified value
                    if ( !hooks || !( "set" in hooks ) ||
                        ( value = hooks.set( elem, value, extra ) ) !== undefined ) {
    
                        style[ name ] = value;
                    }
    
                } else {
    
                    // If a hook was provided get the non-computed value from there
                    if ( hooks && "get" in hooks &&
                        ( ret = hooks.get( elem, false, extra ) ) !== undefined ) {
    
                        return ret;
                    }
    
                    // Otherwise just get the value from the style object
                    return style[ name ];
                }
            },
    
            css: function( elem, name, extra, styles ) {
                var val, num, hooks,
                    origName = jQuery.camelCase( name );
    
                // Make sure that we're working with the right name
                name = jQuery.cssProps[ origName ] ||
                    ( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );
    
                // Try prefixed name followed by the unprefixed name
                hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
    
                // If a hook was provided get the computed value from there
                if ( hooks && "get" in hooks ) {
                    val = hooks.get( elem, true, extra );
                }
    
                // Otherwise, if a way to get the computed value exists, use that
                if ( val === undefined ) {
                    val = curCSS( elem, name, styles );
                }
    
                // Convert "normal" to computed value
                if ( val === "normal" && name in cssNormalTransform ) {
                    val = cssNormalTransform[ name ];
                }
    
                // Make numeric if forced or a qualifier was provided and val looks numeric
                if ( extra === "" || extra ) {
                    num = parseFloat( val );
                    return extra === true || isFinite( num ) ? num || 0 : val;
                }
                return val;
            }
        } );
    
        jQuery.each( [ "height", "width" ], function( i, name ) {
            jQuery.cssHooks[ name ] = {
                get: function( elem, computed, extra ) {
                    if ( computed ) {
    
                        // Certain elements can have dimension info if we invisibly show them
                        // but it must have a current display style that would benefit
                        return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
                            elem.offsetWidth === 0 ?
                                swap( elem, cssShow, function() {
                                    return getWidthOrHeight( elem, name, extra );
                                } ) :
                                getWidthOrHeight( elem, name, extra );
                    }
                },
    
                set: function( elem, value, extra ) {
                    var matches,
                        styles = extra && getStyles( elem ),
                        subtract = extra && augmentWidthOrHeight(
                            elem,
                            name,
                            extra,
                            jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
                            styles
                        );
    
                    // Convert to pixels if value adjustment is needed
                    if ( subtract && ( matches = rcssNum.exec( value ) ) &&
                        ( matches[ 3 ] || "px" ) !== "px" ) {
    
                        elem.style[ name ] = value;
                        value = jQuery.css( elem, name );
                    }
    
                    return setPositiveNumber( elem, value, subtract );
                }
            };
        } );
    
        jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
            function( elem, computed ) {
                if ( computed ) {
                    return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
                        elem.getBoundingClientRect().left -
                            swap( elem, { marginLeft: 0 }, function() {
                                return elem.getBoundingClientRect().left;
                            } )
                        ) + "px";
                }
            }
        );
    
        // Support: Android 2.3
        jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
            function( elem, computed ) {
                if ( computed ) {
                    return swap( elem, { "display": "inline-block" },
                        curCSS, [ elem, "marginRight" ] );
                }
            }
        );
    
        // These hooks are used by animate to expand properties
        jQuery.each( {
            margin: "",
            padding: "",
            border: "Width"
        }, function( prefix, suffix ) {
            jQuery.cssHooks[ prefix + suffix ] = {
                expand: function( value ) {
                    var i = 0,
                        expanded = {},
    
                        // Assumes a single number if not a string
                        parts = typeof value === "string" ? value.split( " " ) : [ value ];
    
                    for ( ; i < 4; i++ ) {
                        expanded[ prefix + cssExpand[ i ] + suffix ] =
                            parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
                    }
    
                    return expanded;
                }
            };
    
            if ( !rmargin.test( prefix ) ) {
                jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
            }
        } );
    
        jQuery.fn.extend( {
            css: function( name, value ) {
                return access( this, function( elem, name, value ) {
                    var styles, len,
                        map = {},
                        i = 0;
    
                    if ( jQuery.isArray( name ) ) {
                        styles = getStyles( elem );
                        len = name.length;
    
                        for ( ; i < len; i++ ) {
                            map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
                        }
    
                        return map;
                    }
    
                    return value !== undefined ?
                        jQuery.style( elem, name, value ) :
                        jQuery.css( elem, name );
                }, name, value, arguments.length > 1 );
            },
            show: function() {
                return showHide( this, true );
            },
            hide: function() {
                return showHide( this );
            },
            toggle: function( state ) {
                if ( typeof state === "boolean" ) {
                    return state ? this.show() : this.hide();
                }
    
                return this.each( function() {
                    if ( isHidden( this ) ) {
                        jQuery( this ).show();
                    } else {
                        jQuery( this ).hide();
                    }
                } );
            }
        } );
    
    
        function Tween( elem, options, prop, end, easing ) {
            return new Tween.prototype.init( elem, options, prop, end, easing );
        }
        jQuery.Tween = Tween;
    
        Tween.prototype = {
            constructor: Tween,
            init: function( elem, options, prop, end, easing, unit ) {
                this.elem = elem;
                this.prop = prop;
                this.easing = easing || jQuery.easing._default;
                this.options = options;
                this.start = this.now = this.cur();
                this.end = end;
                this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
            },
            cur: function() {
                var hooks = Tween.propHooks[ this.prop ];
    
                return hooks && hooks.get ?
                    hooks.get( this ) :
                    Tween.propHooks._default.get( this );
            },
            run: function( percent ) {
                var eased,
                    hooks = Tween.propHooks[ this.prop ];
    
                if ( this.options.duration ) {
                    this.pos = eased = jQuery.easing[ this.easing ](
                        percent, this.options.duration * percent, 0, 1, this.options.duration
                    );
                } else {
                    this.pos = eased = percent;
                }
                this.now = ( this.end - this.start ) * eased + this.start;
    
                if ( this.options.step ) {
                    this.options.step.call( this.elem, this.now, this );
                }
    
                if ( hooks && hooks.set ) {
                    hooks.set( this );
                } else {
                    Tween.propHooks._default.set( this );
                }
                return this;
            }
        };
    
        Tween.prototype.init.prototype = Tween.prototype;
    
        Tween.propHooks = {
            _default: {
                get: function( tween ) {
                    var result;
    
                    // Use a property on the element directly when it is not a DOM element,
                    // or when there is no matching style property that exists.
                    if ( tween.elem.nodeType !== 1 ||
                        tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
                        return tween.elem[ tween.prop ];
                    }
    
                    // Passing an empty string as a 3rd parameter to .css will automatically
                    // attempt a parseFloat and fallback to a string if the parse fails.
                    // Simple values such as "10px" are parsed to Float;
                    // complex values such as "rotate(1rad)" are returned as-is.
                    result = jQuery.css( tween.elem, tween.prop, "" );
    
                    // Empty strings, null, undefined and "auto" are converted to 0.
                    return !result || result === "auto" ? 0 : result;
                },
                set: function( tween ) {
    
                    // Use step hook for back compat.
                    // Use cssHook if its there.
                    // Use .style if available and use plain properties where available.
                    if ( jQuery.fx.step[ tween.prop ] ) {
                        jQuery.fx.step[ tween.prop ]( tween );
                    } else if ( tween.elem.nodeType === 1 &&
                        ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
                            jQuery.cssHooks[ tween.prop ] ) ) {
                        jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
                    } else {
                        tween.elem[ tween.prop ] = tween.now;
                    }
                }
            }
        };
    
        // Support: IE9
        // Panic based approach to setting things on disconnected nodes
        Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
            set: function( tween ) {
                if ( tween.elem.nodeType && tween.elem.parentNode ) {
                    tween.elem[ tween.prop ] = tween.now;
                }
            }
        };
    
        jQuery.easing = {
            linear: function( p ) {
                return p;
            },
            swing: function( p ) {
                return 0.5 - Math.cos( p * Math.PI ) / 2;
            },
            _default: "swing"
        };
    
        jQuery.fx = Tween.prototype.init;
    
        // Back Compat <1.8 extension point
        jQuery.fx.step = {};
    
    
    
    
        var
            fxNow, timerId,
            rfxtypes = /^(?:toggle|show|hide)$/,
            rrun = /queueHooks$/;
    
        // Animations created synchronously will run synchronously
        function createFxNow() {
            window.setTimeout( function() {
                fxNow = undefined;
            } );
            return ( fxNow = jQuery.now() );
        }
    
        // Generate parameters to create a standard animation
        function genFx( type, includeWidth ) {
            var which,
                i = 0,
                attrs = { height: type };
    
            // If we include width, step value is 1 to do all cssExpand values,
            // otherwise step value is 2 to skip over Left and Right
            includeWidth = includeWidth ? 1 : 0;
            for ( ; i < 4 ; i += 2 - includeWidth ) {
                which = cssExpand[ i ];
                attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
            }
    
            if ( includeWidth ) {
                attrs.opacity = attrs.width = type;
            }
    
            return attrs;
        }
    
        function createTween( value, prop, animation ) {
            var tween,
                collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
                index = 0,
                length = collection.length;
            for ( ; index < length; index++ ) {
                if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {
    
                    // We're done with this property
                    return tween;
                }
            }
        }
    
        function defaultPrefilter( elem, props, opts ) {
            /* jshint validthis: true */
            var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
                anim = this,
                orig = {},
                style = elem.style,
                hidden = elem.nodeType && isHidden( elem ),
                dataShow = dataPriv.get( elem, "fxshow" );
    
            // Handle queue: false promises
            if ( !opts.queue ) {
                hooks = jQuery._queueHooks( elem, "fx" );
                if ( hooks.unqueued == null ) {
                    hooks.unqueued = 0;
                    oldfire = hooks.empty.fire;
                    hooks.empty.fire = function() {
                        if ( !hooks.unqueued ) {
                            oldfire();
                        }
                    };
                }
                hooks.unqueued++;
    
                anim.always( function() {
    
                    // Ensure the complete handler is called before this completes
                    anim.always( function() {
                        hooks.unqueued--;
                        if ( !jQuery.queue( elem, "fx" ).length ) {
                            hooks.empty.fire();
                        }
                    } );
                } );
            }
    
            // Height/width overflow pass
            if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
    
                // Make sure that nothing sneaks out
                // Record all 3 overflow attributes because IE9-10 do not
                // change the overflow attribute when overflowX and
                // overflowY are set to the same value
                opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];
    
                // Set display property to inline-block for height/width
                // animations on inline elements that are having width/height animated
                display = jQuery.css( elem, "display" );
    
                // Test default display if display is currently "none"
                checkDisplay = display === "none" ?
                    dataPriv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;
    
                if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
                    style.display = "inline-block";
                }
            }
    
            if ( opts.overflow ) {
                style.overflow = "hidden";
                anim.always( function() {
                    style.overflow = opts.overflow[ 0 ];
                    style.overflowX = opts.overflow[ 1 ];
                    style.overflowY = opts.overflow[ 2 ];
                } );
            }
    
            // show/hide pass
            for ( prop in props ) {
                value = props[ prop ];
                if ( rfxtypes.exec( value ) ) {
                    delete props[ prop ];
                    toggle = toggle || value === "toggle";
                    if ( value === ( hidden ? "hide" : "show" ) ) {
    
                        // If there is dataShow left over from a stopped hide or show
                        // and we are going to proceed with show, we should pretend to be hidden
                        if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
                            hidden = true;
                        } else {
                            continue;
                        }
                    }
                    orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
    
                // Any non-fx value stops us from restoring the original display value
                } else {
                    display = undefined;
                }
            }
    
            if ( !jQuery.isEmptyObject( orig ) ) {
                if ( dataShow ) {
                    if ( "hidden" in dataShow ) {
                        hidden = dataShow.hidden;
                    }
                } else {
                    dataShow = dataPriv.access( elem, "fxshow", {} );
                }
    
                // Store state if its toggle - enables .stop().toggle() to "reverse"
                if ( toggle ) {
                    dataShow.hidden = !hidden;
                }
                if ( hidden ) {
                    jQuery( elem ).show();
                } else {
                    anim.done( function() {
                        jQuery( elem ).hide();
                    } );
                }
                anim.done( function() {
                    var prop;
    
                    dataPriv.remove( elem, "fxshow" );
                    for ( prop in orig ) {
                        jQuery.style( elem, prop, orig[ prop ] );
                    }
                } );
                for ( prop in orig ) {
                    tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
    
                    if ( !( prop in dataShow ) ) {
                        dataShow[ prop ] = tween.start;
                        if ( hidden ) {
                            tween.end = tween.start;
                            tween.start = prop === "width" || prop === "height" ? 1 : 0;
                        }
                    }
                }
    
            // If this is a noop like .hide().hide(), restore an overwritten display value
            } else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
                style.display = display;
            }
        }
    
        function propFilter( props, specialEasing ) {
            var index, name, easing, value, hooks;
    
            // camelCase, specialEasing and expand cssHook pass
            for ( index in props ) {
                name = jQuery.camelCase( index );
                easing = specialEasing[ name ];
                value = props[ index ];
                if ( jQuery.isArray( value ) ) {
                    easing = value[ 1 ];
                    value = props[ index ] = value[ 0 ];
                }
    
                if ( index !== name ) {
                    props[ name ] = value;
                    delete props[ index ];
                }
    
                hooks = jQuery.cssHooks[ name ];
                if ( hooks && "expand" in hooks ) {
                    value = hooks.expand( value );
                    delete props[ name ];
    
                    // Not quite $.extend, this won't overwrite existing keys.
                    // Reusing 'index' because we have the correct "name"
                    for ( index in value ) {
                        if ( !( index in props ) ) {
                            props[ index ] = value[ index ];
                            specialEasing[ index ] = easing;
                        }
                    }
                } else {
                    specialEasing[ name ] = easing;
                }
            }
        }
    
        function Animation( elem, properties, options ) {
            var result,
                stopped,
                index = 0,
                length = Animation.prefilters.length,
                deferred = jQuery.Deferred().always( function() {
    
                    // Don't match elem in the :animated selector
                    delete tick.elem;
                } ),
                tick = function() {
                    if ( stopped ) {
                        return false;
                    }
                    var currentTime = fxNow || createFxNow(),
                        remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
    
                        // Support: Android 2.3
                        // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
                        temp = remaining / animation.duration || 0,
                        percent = 1 - temp,
                        index = 0,
                        length = animation.tweens.length;
    
                    for ( ; index < length ; index++ ) {
                        animation.tweens[ index ].run( percent );
                    }
    
                    deferred.notifyWith( elem, [ animation, percent, remaining ] );
    
                    if ( percent < 1 && length ) {
                        return remaining;
                    } else {
                        deferred.resolveWith( elem, [ animation ] );
                        return false;
                    }
                },
                animation = deferred.promise( {
                    elem: elem,
                    props: jQuery.extend( {}, properties ),
                    opts: jQuery.extend( true, {
                        specialEasing: {},
                        easing: jQuery.easing._default
                    }, options ),
                    originalProperties: properties,
                    originalOptions: options,
                    startTime: fxNow || createFxNow(),
                    duration: options.duration,
                    tweens: [],
                    createTween: function( prop, end ) {
                        var tween = jQuery.Tween( elem, animation.opts, prop, end,
                                animation.opts.specialEasing[ prop ] || animation.opts.easing );
                        animation.tweens.push( tween );
                        return tween;
                    },
                    stop: function( gotoEnd ) {
                        var index = 0,
    
                            // If we are going to the end, we want to run all the tweens
                            // otherwise we skip this part
                            length = gotoEnd ? animation.tweens.length : 0;
                        if ( stopped ) {
                            return this;
                        }
                        stopped = true;
                        for ( ; index < length ; index++ ) {
                            animation.tweens[ index ].run( 1 );
                        }
    
                        // Resolve when we played the last frame; otherwise, reject
                        if ( gotoEnd ) {
                            deferred.notifyWith( elem, [ animation, 1, 0 ] );
                            deferred.resolveWith( elem, [ animation, gotoEnd ] );
                        } else {
                            deferred.rejectWith( elem, [ animation, gotoEnd ] );
                        }
                        return this;
                    }
                } ),
                props = animation.props;
    
            propFilter( props, animation.opts.specialEasing );
    
            for ( ; index < length ; index++ ) {
                result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
                if ( result ) {
                    if ( jQuery.isFunction( result.stop ) ) {
                        jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
                            jQuery.proxy( result.stop, result );
                    }
                    return result;
                }
            }
    
            jQuery.map( props, createTween, animation );
    
            if ( jQuery.isFunction( animation.opts.start ) ) {
                animation.opts.start.call( elem, animation );
            }
    
            jQuery.fx.timer(
                jQuery.extend( tick, {
                    elem: elem,
                    anim: animation,
                    queue: animation.opts.queue
                } )
            );
    
            // attach callbacks from options
            return animation.progress( animation.opts.progress )
                .done( animation.opts.done, animation.opts.complete )
                .fail( animation.opts.fail )
                .always( animation.opts.always );
        }
    
        jQuery.Animation = jQuery.extend( Animation, {
            tweeners: {
                "*": [ function( prop, value ) {
                    var tween = this.createTween( prop, value );
                    adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
                    return tween;
                } ]
            },
    
            tweener: function( props, callback ) {
                if ( jQuery.isFunction( props ) ) {
                    callback = props;
                    props = [ "*" ];
                } else {
                    props = props.match( rnotwhite );
                }
    
                var prop,
                    index = 0,
                    length = props.length;
    
                for ( ; index < length ; index++ ) {
                    prop = props[ index ];
                    Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
                    Animation.tweeners[ prop ].unshift( callback );
                }
            },
    
            prefilters: [ defaultPrefilter ],
    
            prefilter: function( callback, prepend ) {
                if ( prepend ) {
                    Animation.prefilters.unshift( callback );
                } else {
                    Animation.prefilters.push( callback );
                }
            }
        } );
    
        jQuery.speed = function( speed, easing, fn ) {
            var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
                complete: fn || !fn && easing ||
                    jQuery.isFunction( speed ) && speed,
                duration: speed,
                easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
            };
    
            opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ?
                opt.duration : opt.duration in jQuery.fx.speeds ?
                    jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;
    
            // Normalize opt.queue - true/undefined/null -> "fx"
            if ( opt.queue == null || opt.queue === true ) {
                opt.queue = "fx";
            }
    
            // Queueing
            opt.old = opt.complete;
    
            opt.complete = function() {
                if ( jQuery.isFunction( opt.old ) ) {
                    opt.old.call( this );
                }
    
                if ( opt.queue ) {
                    jQuery.dequeue( this, opt.queue );
                }
            };
    
            return opt;
        };
    
        jQuery.fn.extend( {
            fadeTo: function( speed, to, easing, callback ) {
    
                // Show any hidden elements after setting opacity to 0
                return this.filter( isHidden ).css( "opacity", 0 ).show()
    
                    // Animate to the value specified
                    .end().animate( { opacity: to }, speed, easing, callback );
            },
            animate: function( prop, speed, easing, callback ) {
                var empty = jQuery.isEmptyObject( prop ),
                    optall = jQuery.speed( speed, easing, callback ),
                    doAnimation = function() {
    
                        // Operate on a copy of prop so per-property easing won't be lost
                        var anim = Animation( this, jQuery.extend( {}, prop ), optall );
    
                        // Empty animations, or finishing resolves immediately
                        if ( empty || dataPriv.get( this, "finish" ) ) {
                            anim.stop( true );
                        }
                    };
                    doAnimation.finish = doAnimation;
    
                return empty || optall.queue === false ?
                    this.each( doAnimation ) :
                    this.queue( optall.queue, doAnimation );
            },
            stop: function( type, clearQueue, gotoEnd ) {
                var stopQueue = function( hooks ) {
                    var stop = hooks.stop;
                    delete hooks.stop;
                    stop( gotoEnd );
                };
    
                if ( typeof type !== "string" ) {
                    gotoEnd = clearQueue;
                    clearQueue = type;
                    type = undefined;
                }
                if ( clearQueue && type !== false ) {
                    this.queue( type || "fx", [] );
                }
    
                return this.each( function() {
                    var dequeue = true,
                        index = type != null && type + "queueHooks",
                        timers = jQuery.timers,
                        data = dataPriv.get( this );
    
                    if ( index ) {
                        if ( data[ index ] && data[ index ].stop ) {
                            stopQueue( data[ index ] );
                        }
                    } else {
                        for ( index in data ) {
                            if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
                                stopQueue( data[ index ] );
                            }
                        }
                    }
    
                    for ( index = timers.length; index--; ) {
                        if ( timers[ index ].elem === this &&
                            ( type == null || timers[ index ].queue === type ) ) {
    
                            timers[ index ].anim.stop( gotoEnd );
                            dequeue = false;
                            timers.splice( index, 1 );
                        }
                    }
    
                    // Start the next in the queue if the last step wasn't forced.
                    // Timers currently will call their complete callbacks, which
                    // will dequeue but only if they were gotoEnd.
                    if ( dequeue || !gotoEnd ) {
                        jQuery.dequeue( this, type );
                    }
                } );
            },
            finish: function( type ) {
                if ( type !== false ) {
                    type = type || "fx";
                }
                return this.each( function() {
                    var index,
                        data = dataPriv.get( this ),
                        queue = data[ type + "queue" ],
                        hooks = data[ type + "queueHooks" ],
                        timers = jQuery.timers,
                        length = queue ? queue.length : 0;
    
                    // Enable finishing flag on private data
                    data.finish = true;
    
                    // Empty the queue first
                    jQuery.queue( this, type, [] );
    
                    if ( hooks && hooks.stop ) {
                        hooks.stop.call( this, true );
                    }
    
                    // Look for any active animations, and finish them
                    for ( index = timers.length; index--; ) {
                        if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
                            timers[ index ].anim.stop( true );
                            timers.splice( index, 1 );
                        }
                    }
    
                    // Look for any animations in the old queue and finish them
                    for ( index = 0; index < length; index++ ) {
                        if ( queue[ index ] && queue[ index ].finish ) {
                            queue[ index ].finish.call( this );
                        }
                    }
    
                    // Turn off finishing flag
                    delete data.finish;
                } );
            }
        } );
    
        jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
            var cssFn = jQuery.fn[ name ];
            jQuery.fn[ name ] = function( speed, easing, callback ) {
                return speed == null || typeof speed === "boolean" ?
                    cssFn.apply( this, arguments ) :
                    this.animate( genFx( name, true ), speed, easing, callback );
            };
        } );
    
        // Generate shortcuts for custom animations
        jQuery.each( {
            slideDown: genFx( "show" ),
            slideUp: genFx( "hide" ),
            slideToggle: genFx( "toggle" ),
            fadeIn: { opacity: "show" },
            fadeOut: { opacity: "hide" },
            fadeToggle: { opacity: "toggle" }
        }, function( name, props ) {
            jQuery.fn[ name ] = function( speed, easing, callback ) {
                return this.animate( props, speed, easing, callback );
            };
        } );
    
        jQuery.timers = [];
        jQuery.fx.tick = function() {
            var timer,
                i = 0,
                timers = jQuery.timers;
    
            fxNow = jQuery.now();
    
            for ( ; i < timers.length; i++ ) {
                timer = timers[ i ];
    
                // Checks the timer has not already been removed
                if ( !timer() && timers[ i ] === timer ) {
                    timers.splice( i--, 1 );
                }
            }
    
            if ( !timers.length ) {
                jQuery.fx.stop();
            }
            fxNow = undefined;
        };
    
        jQuery.fx.timer = function( timer ) {
            jQuery.timers.push( timer );
            if ( timer() ) {
                jQuery.fx.start();
            } else {
                jQuery.timers.pop();
            }
        };
    
        jQuery.fx.interval = 13;
        jQuery.fx.start = function() {
            if ( !timerId ) {
                timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
            }
        };
    
        jQuery.fx.stop = function() {
            window.clearInterval( timerId );
    
            timerId = null;
        };
    
        jQuery.fx.speeds = {
            slow: 600,
            fast: 200,
    
            // Default speed
            _default: 400
        };
    
    
        // Based off of the plugin by Clint Helfers, with permission.
        // http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
        jQuery.fn.delay = function( time, type ) {
            time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
            type = type || "fx";
    
            return this.queue( type, function( next, hooks ) {
                var timeout = window.setTimeout( next, time );
                hooks.stop = function() {
                    window.clearTimeout( timeout );
                };
            } );
        };
    
    
        ( function() {
            var input = document.createElement( "input" ),
                select = document.createElement( "select" ),
                opt = select.appendChild( document.createElement( "option" ) );
    
            input.type = "checkbox";
    
            // Support: iOS<=5.1, Android<=4.2+
            // Default value for a checkbox should be "on"
            support.checkOn = input.value !== "";
    
            // Support: IE<=11+
            // Must access selectedIndex to make default options select
            support.optSelected = opt.selected;
    
            // Support: Android<=2.3
            // Options inside disabled selects are incorrectly marked as disabled
            select.disabled = true;
            support.optDisabled = !opt.disabled;
    
            // Support: IE<=11+
            // An input loses its value after becoming a radio
            input = document.createElement( "input" );
            input.value = "t";
            input.type = "radio";
            support.radioValue = input.value === "t";
        } )();
    
    
        var boolHook,
            attrHandle = jQuery.expr.attrHandle;
    
        jQuery.fn.extend( {
            attr: function( name, value ) {
                return access( this, jQuery.attr, name, value, arguments.length > 1 );
            },
    
            removeAttr: function( name ) {
                return this.each( function() {
                    jQuery.removeAttr( this, name );
                } );
            }
        } );
    
        jQuery.extend( {
            attr: function( elem, name, value ) {
                var ret, hooks,
                    nType = elem.nodeType;
    
                // Don't get/set attributes on text, comment and attribute nodes
                if ( nType === 3 || nType === 8 || nType === 2 ) {
                    return;
                }
    
                // Fallback to prop when attributes are not supported
                if ( typeof elem.getAttribute === "undefined" ) {
                    return jQuery.prop( elem, name, value );
                }
    
                // All attributes are lowercase
                // Grab necessary hook if one is defined
                if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
                    name = name.toLowerCase();
                    hooks = jQuery.attrHooks[ name ] ||
                        ( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
                }
    
                if ( value !== undefined ) {
                    if ( value === null ) {
                        jQuery.removeAttr( elem, name );
                        return;
                    }
    
                    if ( hooks && "set" in hooks &&
                        ( ret = hooks.set( elem, value, name ) ) !== undefined ) {
                        return ret;
                    }
    
                    elem.setAttribute( name, value + "" );
                    return value;
                }
    
                if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
                    return ret;
                }
    
                ret = jQuery.find.attr( elem, name );
    
                // Non-existent attributes return null, we normalize to undefined
                return ret == null ? undefined : ret;
            },
    
            attrHooks: {
                type: {
                    set: function( elem, value ) {
                        if ( !support.radioValue && value === "radio" &&
                            jQuery.nodeName( elem, "input" ) ) {
                            var val = elem.value;
                            elem.setAttribute( "type", value );
                            if ( val ) {
                                elem.value = val;
                            }
                            return value;
                        }
                    }
                }
            },
    
            removeAttr: function( elem, value ) {
                var name, propName,
                    i = 0,
                    attrNames = value && value.match( rnotwhite );
    
                if ( attrNames && elem.nodeType === 1 ) {
                    while ( ( name = attrNames[ i++ ] ) ) {
                        propName = jQuery.propFix[ name ] || name;
    
                        // Boolean attributes get special treatment (#10870)
                        if ( jQuery.expr.match.bool.test( name ) ) {
    
                            // Set corresponding property to false
                            elem[ propName ] = false;
                        }
    
                        elem.removeAttribute( name );
                    }
                }
            }
        } );
    
        // Hooks for boolean attributes
        boolHook = {
            set: function( elem, value, name ) {
                if ( value === false ) {
    
                    // Remove boolean attributes when set to false
                    jQuery.removeAttr( elem, name );
                } else {
                    elem.setAttribute( name, name );
                }
                return name;
            }
        };
        jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
            var getter = attrHandle[ name ] || jQuery.find.attr;
    
            attrHandle[ name ] = function( elem, name, isXML ) {
                var ret, handle;
                if ( !isXML ) {
    
                    // Avoid an infinite loop by temporarily removing this function from the getter
                    handle = attrHandle[ name ];
                    attrHandle[ name ] = ret;
                    ret = getter( elem, name, isXML ) != null ?
                        name.toLowerCase() :
                        null;
                    attrHandle[ name ] = handle;
                }
                return ret;
            };
        } );
    
    
    
    
        var rfocusable = /^(?:input|select|textarea|button)$/i,
            rclickable = /^(?:a|area)$/i;
    
        jQuery.fn.extend( {
            prop: function( name, value ) {
                return access( this, jQuery.prop, name, value, arguments.length > 1 );
            },
    
            removeProp: function( name ) {
                return this.each( function() {
                    delete this[ jQuery.propFix[ name ] || name ];
                } );
            }
        } );
    
        jQuery.extend( {
            prop: function( elem, name, value ) {
                var ret, hooks,
                    nType = elem.nodeType;
    
                // Don't get/set properties on text, comment and attribute nodes
                if ( nType === 3 || nType === 8 || nType === 2 ) {
                    return;
                }
    
                if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
    
                    // Fix name and attach hooks
                    name = jQuery.propFix[ name ] || name;
                    hooks = jQuery.propHooks[ name ];
                }
    
                if ( value !== undefined ) {
                    if ( hooks && "set" in hooks &&
                        ( ret = hooks.set( elem, value, name ) ) !== undefined ) {
                        return ret;
                    }
    
                    return ( elem[ name ] = value );
                }
    
                if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
                    return ret;
                }
    
                return elem[ name ];
            },
    
            propHooks: {
                tabIndex: {
                    get: function( elem ) {
    
                        // elem.tabIndex doesn't always return the
                        // correct value when it hasn't been explicitly set
                        // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                        // Use proper attribute retrieval(#12072)
                        var tabindex = jQuery.find.attr( elem, "tabindex" );
    
                        return tabindex ?
                            parseInt( tabindex, 10 ) :
                            rfocusable.test( elem.nodeName ) ||
                                rclickable.test( elem.nodeName ) && elem.href ?
                                    0 :
                                    -1;
                    }
                }
            },
    
            propFix: {
                "for": "htmlFor",
                "class": "className"
            }
        } );
    
        // Support: IE <=11 only
        // Accessing the selectedIndex property
        // forces the browser to respect setting selected
        // on the option
        // The getter ensures a default option is selected
        // when in an optgroup
        if ( !support.optSelected ) {
            jQuery.propHooks.selected = {
                get: function( elem ) {
                    var parent = elem.parentNode;
                    if ( parent && parent.parentNode ) {
                        parent.parentNode.selectedIndex;
                    }
                    return null;
                },
                set: function( elem ) {
                    var parent = elem.parentNode;
                    if ( parent ) {
                        parent.selectedIndex;
    
                        if ( parent.parentNode ) {
                            parent.parentNode.selectedIndex;
                        }
                    }
                }
            };
        }
    
        jQuery.each( [
            "tabIndex",
            "readOnly",
            "maxLength",
            "cellSpacing",
            "cellPadding",
            "rowSpan",
            "colSpan",
            "useMap",
            "frameBorder",
            "contentEditable"
        ], function() {
            jQuery.propFix[ this.toLowerCase() ] = this;
        } );
    
    
    
    
        var rclass = /[\t\r\n\f]/g;
    
        function getClass( elem ) {
            return elem.getAttribute && elem.getAttribute( "class" ) || "";
        }
    
        jQuery.fn.extend( {
            addClass: function( value ) {
                var classes, elem, cur, curValue, clazz, j, finalValue,
                    i = 0;
    
                if ( jQuery.isFunction( value ) ) {
                    return this.each( function( j ) {
                        jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
                    } );
                }
    
                if ( typeof value === "string" && value ) {
                    classes = value.match( rnotwhite ) || [];
    
                    while ( ( elem = this[ i++ ] ) ) {
                        curValue = getClass( elem );
                        cur = elem.nodeType === 1 &&
                            ( " " + curValue + " " ).replace( rclass, " " );
    
                        if ( cur ) {
                            j = 0;
                            while ( ( clazz = classes[ j++ ] ) ) {
                                if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
                                    cur += clazz + " ";
                                }
                            }
    
                            // Only assign if different to avoid unneeded rendering.
                            finalValue = jQuery.trim( cur );
                            if ( curValue !== finalValue ) {
                                elem.setAttribute( "class", finalValue );
                            }
                        }
                    }
                }
    
                return this;
            },
    
            removeClass: function( value ) {
                var classes, elem, cur, curValue, clazz, j, finalValue,
                    i = 0;
    
                if ( jQuery.isFunction( value ) ) {
                    return this.each( function( j ) {
                        jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
                    } );
                }
    
                if ( !arguments.length ) {
                    return this.attr( "class", "" );
                }
    
                if ( typeof value === "string" && value ) {
                    classes = value.match( rnotwhite ) || [];
    
                    while ( ( elem = this[ i++ ] ) ) {
                        curValue = getClass( elem );
    
                        // This expression is here for better compressibility (see addClass)
                        cur = elem.nodeType === 1 &&
                            ( " " + curValue + " " ).replace( rclass, " " );
    
                        if ( cur ) {
                            j = 0;
                            while ( ( clazz = classes[ j++ ] ) ) {
    
                                // Remove *all* instances
                                while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
                                    cur = cur.replace( " " + clazz + " ", " " );
                                }
                            }
    
                            // Only assign if different to avoid unneeded rendering.
                            finalValue = jQuery.trim( cur );
                            if ( curValue !== finalValue ) {
                                elem.setAttribute( "class", finalValue );
                            }
                        }
                    }
                }
    
                return this;
            },
    
            toggleClass: function( value, stateVal ) {
                var type = typeof value;
    
                if ( typeof stateVal === "boolean" && type === "string" ) {
                    return stateVal ? this.addClass( value ) : this.removeClass( value );
                }
    
                if ( jQuery.isFunction( value ) ) {
                    return this.each( function( i ) {
                        jQuery( this ).toggleClass(
                            value.call( this, i, getClass( this ), stateVal ),
                            stateVal
                        );
                    } );
                }
    
                return this.each( function() {
                    var className, i, self, classNames;
    
                    if ( type === "string" ) {
    
                        // Toggle individual class names
                        i = 0;
                        self = jQuery( this );
                        classNames = value.match( rnotwhite ) || [];
    
                        while ( ( className = classNames[ i++ ] ) ) {
    
                            // Check each className given, space separated list
                            if ( self.hasClass( className ) ) {
                                self.removeClass( className );
                            } else {
                                self.addClass( className );
                            }
                        }
    
                    // Toggle whole class name
                    } else if ( value === undefined || type === "boolean" ) {
                        className = getClass( this );
                        if ( className ) {
    
                            // Store className if set
                            dataPriv.set( this, "__className__", className );
                        }
    
                        // If the element has a class name or if we're passed `false`,
                        // then remove the whole classname (if there was one, the above saved it).
                        // Otherwise bring back whatever was previously saved (if anything),
                        // falling back to the empty string if nothing was stored.
                        if ( this.setAttribute ) {
                            this.setAttribute( "class",
                                className || value === false ?
                                "" :
                                dataPriv.get( this, "__className__" ) || ""
                            );
                        }
                    }
                } );
            },
    
            hasClass: function( selector ) {
                var className, elem,
                    i = 0;
    
                className = " " + selector + " ";
                while ( ( elem = this[ i++ ] ) ) {
                    if ( elem.nodeType === 1 &&
                        ( " " + getClass( elem ) + " " ).replace( rclass, " " )
                            .indexOf( className ) > -1
                    ) {
                        return true;
                    }
                }
    
                return false;
            }
        } );
    
    
    
    
        var rreturn = /\r/g,
            rspaces = /[\x20\t\r\n\f]+/g;
    
        jQuery.fn.extend( {
            val: function( value ) {
                var hooks, ret, isFunction,
                    elem = this[ 0 ];
    
                if ( !arguments.length ) {
                    if ( elem ) {
                        hooks = jQuery.valHooks[ elem.type ] ||
                            jQuery.valHooks[ elem.nodeName.toLowerCase() ];
    
                        if ( hooks &&
                            "get" in hooks &&
                            ( ret = hooks.get( elem, "value" ) ) !== undefined
                        ) {
                            return ret;
                        }
    
                        ret = elem.value;
    
                        return typeof ret === "string" ?
    
                            // Handle most common string cases
                            ret.replace( rreturn, "" ) :
    
                            // Handle cases where value is null/undef or number
                            ret == null ? "" : ret;
                    }
    
                    return;
                }
    
                isFunction = jQuery.isFunction( value );
    
                return this.each( function( i ) {
                    var val;
    
                    if ( this.nodeType !== 1 ) {
                        return;
                    }
    
                    if ( isFunction ) {
                        val = value.call( this, i, jQuery( this ).val() );
                    } else {
                        val = value;
                    }
    
                    // Treat null/undefined as ""; convert numbers to string
                    if ( val == null ) {
                        val = "";
    
                    } else if ( typeof val === "number" ) {
                        val += "";
    
                    } else if ( jQuery.isArray( val ) ) {
                        val = jQuery.map( val, function( value ) {
                            return value == null ? "" : value + "";
                        } );
                    }
    
                    hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];
    
                    // If set returns undefined, fall back to normal setting
                    if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
                        this.value = val;
                    }
                } );
            }
        } );
    
        jQuery.extend( {
            valHooks: {
                option: {
                    get: function( elem ) {
    
                        var val = jQuery.find.attr( elem, "value" );
                        return val != null ?
                            val :
    
                            // Support: IE10-11+
                            // option.text throws exceptions (#14686, #14858)
                            // Strip and collapse whitespace
                            // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                            jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
                    }
                },
                select: {
                    get: function( elem ) {
                        var value, option,
                            options = elem.options,
                            index = elem.selectedIndex,
                            one = elem.type === "select-one" || index < 0,
                            values = one ? null : [],
                            max = one ? index + 1 : options.length,
                            i = index < 0 ?
                                max :
                                one ? index : 0;
    
                        // Loop through all the selected options
                        for ( ; i < max; i++ ) {
                            option = options[ i ];
    
                            // IE8-9 doesn't update selected after form reset (#2551)
                            if ( ( option.selected || i === index ) &&
    
                                    // Don't return options that are disabled or in a disabled optgroup
                                    ( support.optDisabled ?
                                        !option.disabled : option.getAttribute( "disabled" ) === null ) &&
                                    ( !option.parentNode.disabled ||
                                        !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {
    
                                // Get the specific value for the option
                                value = jQuery( option ).val();
    
                                // We don't need an array for one selects
                                if ( one ) {
                                    return value;
                                }
    
                                // Multi-Selects return an array
                                values.push( value );
                            }
                        }
    
                        return values;
                    },
    
                    set: function( elem, value ) {
                        var optionSet, option,
                            options = elem.options,
                            values = jQuery.makeArray( value ),
                            i = options.length;
    
                        while ( i-- ) {
                            option = options[ i ];
                            if ( option.selected =
                                jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
                            ) {
                                optionSet = true;
                            }
                        }
    
                        // Force browsers to behave consistently when non-matching value is set
                        if ( !optionSet ) {
                            elem.selectedIndex = -1;
                        }
                        return values;
                    }
                }
            }
        } );
    
        // Radios and checkboxes getter/setter
        jQuery.each( [ "radio", "checkbox" ], function() {
            jQuery.valHooks[ this ] = {
                set: function( elem, value ) {
                    if ( jQuery.isArray( value ) ) {
                        return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
                    }
                }
            };
            if ( !support.checkOn ) {
                jQuery.valHooks[ this ].get = function( elem ) {
                    return elem.getAttribute( "value" ) === null ? "on" : elem.value;
                };
            }
        } );
    
    
    
    
        // Return jQuery for attributes-only inclusion
    
    
        var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
    
        jQuery.extend( jQuery.event, {
    
            trigger: function( event, data, elem, onlyHandlers ) {
    
                var i, cur, tmp, bubbleType, ontype, handle, special,
                    eventPath = [ elem || document ],
                    type = hasOwn.call( event, "type" ) ? event.type : event,
                    namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];
    
                cur = tmp = elem = elem || document;
    
                // Don't do events on text and comment nodes
                if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
                    return;
                }
    
                // focus/blur morphs to focusin/out; ensure we're not firing them right now
                if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
                    return;
                }
    
                if ( type.indexOf( "." ) > -1 ) {
    
                    // Namespaced trigger; create a regexp to match event type in handle()
                    namespaces = type.split( "." );
                    type = namespaces.shift();
                    namespaces.sort();
                }
                ontype = type.indexOf( ":" ) < 0 && "on" + type;
    
                // Caller can pass in a jQuery.Event object, Object, or just an event type string
                event = event[ jQuery.expando ] ?
                    event :
                    new jQuery.Event( type, typeof event === "object" && event );
    
                // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
                event.isTrigger = onlyHandlers ? 2 : 3;
                event.namespace = namespaces.join( "." );
                event.rnamespace = event.namespace ?
                    new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
                    null;
    
                // Clean up the event in case it is being reused
                event.result = undefined;
                if ( !event.target ) {
                    event.target = elem;
                }
    
                // Clone any incoming data and prepend the event, creating the handler arg list
                data = data == null ?
                    [ event ] :
                    jQuery.makeArray( data, [ event ] );
    
                // Allow special events to draw outside the lines
                special = jQuery.event.special[ type ] || {};
                if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
                    return;
                }
    
                // Determine event propagation path in advance, per W3C events spec (#9951)
                // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
                if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {
    
                    bubbleType = special.delegateType || type;
                    if ( !rfocusMorph.test( bubbleType + type ) ) {
                        cur = cur.parentNode;
                    }
                    for ( ; cur; cur = cur.parentNode ) {
                        eventPath.push( cur );
                        tmp = cur;
                    }
    
                    // Only add window if we got to document (e.g., not plain obj or detached DOM)
                    if ( tmp === ( elem.ownerDocument || document ) ) {
                        eventPath.push( tmp.defaultView || tmp.parentWindow || window );
                    }
                }
    
                // Fire handlers on the event path
                i = 0;
                while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
    
                    event.type = i > 1 ?
                        bubbleType :
                        special.bindType || type;
    
                    // jQuery handler
                    handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
                        dataPriv.get( cur, "handle" );
                    if ( handle ) {
                        handle.apply( cur, data );
                    }
    
                    // Native handler
                    handle = ontype && cur[ ontype ];
                    if ( handle && handle.apply && acceptData( cur ) ) {
                        event.result = handle.apply( cur, data );
                        if ( event.result === false ) {
                            event.preventDefault();
                        }
                    }
                }
                event.type = type;
    
                // If nobody prevented the default action, do it now
                if ( !onlyHandlers && !event.isDefaultPrevented() ) {
    
                    if ( ( !special._default ||
                        special._default.apply( eventPath.pop(), data ) === false ) &&
                        acceptData( elem ) ) {
    
                        // Call a native DOM method on the target with the same name name as the event.
                        // Don't do default actions on window, that's where global variables be (#6170)
                        if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {
    
                            // Don't re-trigger an onFOO event when we call its FOO() method
                            tmp = elem[ ontype ];
    
                            if ( tmp ) {
                                elem[ ontype ] = null;
                            }
    
                            // Prevent re-triggering of the same event, since we already bubbled it above
                            jQuery.event.triggered = type;
                            elem[ type ]();
                            jQuery.event.triggered = undefined;
    
                            if ( tmp ) {
                                elem[ ontype ] = tmp;
                            }
                        }
                    }
                }
    
                return event.result;
            },
    
            // Piggyback on a donor event to simulate a different one
            // Used only for `focus(in | out)` events
            simulate: function( type, elem, event ) {
                var e = jQuery.extend(
                    new jQuery.Event(),
                    event,
                    {
                        type: type,
                        isSimulated: true
                    }
                );
    
                jQuery.event.trigger( e, null, elem );
            }
    
        } );
    
        jQuery.fn.extend( {
    
            trigger: function( type, data ) {
                return this.each( function() {
                    jQuery.event.trigger( type, data, this );
                } );
            },
            triggerHandler: function( type, data ) {
                var elem = this[ 0 ];
                if ( elem ) {
                    return jQuery.event.trigger( type, data, elem, true );
                }
            }
        } );
    
    
        jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
            "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
            "change select submit keydown keypress keyup error contextmenu" ).split( " " ),
            function( i, name ) {
    
            // Handle event binding
            jQuery.fn[ name ] = function( data, fn ) {
                return arguments.length > 0 ?
                    this.on( name, null, data, fn ) :
                    this.trigger( name );
            };
        } );
    
        jQuery.fn.extend( {
            hover: function( fnOver, fnOut ) {
                return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
            }
        } );
    
    
    
    
        support.focusin = "onfocusin" in window;
    
    
        // Support: Firefox
        // Firefox doesn't have focus(in | out) events
        // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
        //
        // Support: Chrome, Safari
        // focus(in | out) events fire after focus & blur events,
        // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
        // Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
        if ( !support.focusin ) {
            jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {
    
                // Attach a single capturing handler on the document while someone wants focusin/focusout
                var handler = function( event ) {
                    jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
                };
    
                jQuery.event.special[ fix ] = {
                    setup: function() {
                        var doc = this.ownerDocument || this,
                            attaches = dataPriv.access( doc, fix );
    
                        if ( !attaches ) {
                            doc.addEventListener( orig, handler, true );
                        }
                        dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
                    },
                    teardown: function() {
                        var doc = this.ownerDocument || this,
                            attaches = dataPriv.access( doc, fix ) - 1;
    
                        if ( !attaches ) {
                            doc.removeEventListener( orig, handler, true );
                            dataPriv.remove( doc, fix );
    
                        } else {
                            dataPriv.access( doc, fix, attaches );
                        }
                    }
                };
            } );
        }
        var location = window.location;
    
        var nonce = jQuery.now();
    
        var rquery = ( /\?/ );
    
    
    
        // Support: Android 2.3
        // Workaround failure to string-cast null input
        jQuery.parseJSON = function( data ) {
            return JSON.parse( data + "" );
        };
    
    
        // Cross-browser xml parsing
        jQuery.parseXML = function( data ) {
            var xml;
            if ( !data || typeof data !== "string" ) {
                return null;
            }
    
            // Support: IE9
            try {
                xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
            } catch ( e ) {
                xml = undefined;
            }
    
            if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
                jQuery.error( "Invalid XML: " + data );
            }
            return xml;
        };
    
    
        var
            rhash = /#.*$/,
            rts = /([?&])_=[^&]*/,
            rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
    
            // #7653, #8125, #8152: local protocol detection
            rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
            rnoContent = /^(?:GET|HEAD)$/,
            rprotocol = /^\/\//,
    
            /* Prefilters
             * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
             * 2) These are called:
             *    - BEFORE asking for a transport
             *    - AFTER param serialization (s.data is a string if s.processData is true)
             * 3) key is the dataType
             * 4) the catchall symbol "*" can be used
             * 5) execution will start with transport dataType and THEN continue down to "*" if needed
             */
            prefilters = {},
    
            /* Transports bindings
             * 1) key is the dataType
             * 2) the catchall symbol "*" can be used
             * 3) selection will start with transport dataType and THEN go to "*" if needed
             */
            transports = {},
    
            // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
            allTypes = "*/".concat( "*" ),
    
            // Anchor tag for parsing the document origin
            originAnchor = document.createElement( "a" );
            originAnchor.href = location.href;
    
        // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
        function addToPrefiltersOrTransports( structure ) {
    
            // dataTypeExpression is optional and defaults to "*"
            return function( dataTypeExpression, func ) {
    
                if ( typeof dataTypeExpression !== "string" ) {
                    func = dataTypeExpression;
                    dataTypeExpression = "*";
                }
    
                var dataType,
                    i = 0,
                    dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];
    
                if ( jQuery.isFunction( func ) ) {
    
                    // For each dataType in the dataTypeExpression
                    while ( ( dataType = dataTypes[ i++ ] ) ) {
    
                        // Prepend if requested
                        if ( dataType[ 0 ] === "+" ) {
                            dataType = dataType.slice( 1 ) || "*";
                            ( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );
    
                        // Otherwise append
                        } else {
                            ( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
                        }
                    }
                }
            };
        }
    
        // Base inspection function for prefilters and transports
        function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
    
            var inspected = {},
                seekingTransport = ( structure === transports );
    
            function inspect( dataType ) {
                var selected;
                inspected[ dataType ] = true;
                jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
                    var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
                    if ( typeof dataTypeOrTransport === "string" &&
                        !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
    
                        options.dataTypes.unshift( dataTypeOrTransport );
                        inspect( dataTypeOrTransport );
                        return false;
                    } else if ( seekingTransport ) {
                        return !( selected = dataTypeOrTransport );
                    }
                } );
                return selected;
            }
    
            return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
        }
    
        // A special extend for ajax options
        // that takes "flat" options (not to be deep extended)
        // Fixes #9887
        function ajaxExtend( target, src ) {
            var key, deep,
                flatOptions = jQuery.ajaxSettings.flatOptions || {};
    
            for ( key in src ) {
                if ( src[ key ] !== undefined ) {
                    ( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
                }
            }
            if ( deep ) {
                jQuery.extend( true, target, deep );
            }
    
            return target;
        }
    
        /* Handles responses to an ajax request:
         * - finds the right dataType (mediates between content-type and expected dataType)
         * - returns the corresponding response
         */
        function ajaxHandleResponses( s, jqXHR, responses ) {
    
            var ct, type, finalDataType, firstDataType,
                contents = s.contents,
                dataTypes = s.dataTypes;
    
            // Remove auto dataType and get content-type in the process
            while ( dataTypes[ 0 ] === "*" ) {
                dataTypes.shift();
                if ( ct === undefined ) {
                    ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
                }
            }
    
            // Check if we're dealing with a known content-type
            if ( ct ) {
                for ( type in contents ) {
                    if ( contents[ type ] && contents[ type ].test( ct ) ) {
                        dataTypes.unshift( type );
                        break;
                    }
                }
            }
    
            // Check to see if we have a response for the expected dataType
            if ( dataTypes[ 0 ] in responses ) {
                finalDataType = dataTypes[ 0 ];
            } else {
    
                // Try convertible dataTypes
                for ( type in responses ) {
                    if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
                        finalDataType = type;
                        break;
                    }
                    if ( !firstDataType ) {
                        firstDataType = type;
                    }
                }
    
                // Or just use first one
                finalDataType = finalDataType || firstDataType;
            }
    
            // If we found a dataType
            // We add the dataType to the list if needed
            // and return the corresponding response
            if ( finalDataType ) {
                if ( finalDataType !== dataTypes[ 0 ] ) {
                    dataTypes.unshift( finalDataType );
                }
                return responses[ finalDataType ];
            }
        }
    
        /* Chain conversions given the request and the original response
         * Also sets the responseXXX fields on the jqXHR instance
         */
        function ajaxConvert( s, response, jqXHR, isSuccess ) {
            var conv2, current, conv, tmp, prev,
                converters = {},
    
                // Work with a copy of dataTypes in case we need to modify it for conversion
                dataTypes = s.dataTypes.slice();
    
            // Create converters map with lowercased keys
            if ( dataTypes[ 1 ] ) {
                for ( conv in s.converters ) {
                    converters[ conv.toLowerCase() ] = s.converters[ conv ];
                }
            }
    
            current = dataTypes.shift();
    
            // Convert to each sequential dataType
            while ( current ) {
    
                if ( s.responseFields[ current ] ) {
                    jqXHR[ s.responseFields[ current ] ] = response;
                }
    
                // Apply the dataFilter if provided
                if ( !prev && isSuccess && s.dataFilter ) {
                    response = s.dataFilter( response, s.dataType );
                }
    
                prev = current;
                current = dataTypes.shift();
    
                if ( current ) {
    
                // There's only work to do if current dataType is non-auto
                    if ( current === "*" ) {
    
                        current = prev;
    
                    // Convert response if prev dataType is non-auto and differs from current
                    } else if ( prev !== "*" && prev !== current ) {
    
                        // Seek a direct converter
                        conv = converters[ prev + " " + current ] || converters[ "* " + current ];
    
                        // If none found, seek a pair
                        if ( !conv ) {
                            for ( conv2 in converters ) {
    
                                // If conv2 outputs current
                                tmp = conv2.split( " " );
                                if ( tmp[ 1 ] === current ) {
    
                                    // If prev can be converted to accepted input
                                    conv = converters[ prev + " " + tmp[ 0 ] ] ||
                                        converters[ "* " + tmp[ 0 ] ];
                                    if ( conv ) {
    
                                        // Condense equivalence converters
                                        if ( conv === true ) {
                                            conv = converters[ conv2 ];
    
                                        // Otherwise, insert the intermediate dataType
                                        } else if ( converters[ conv2 ] !== true ) {
                                            current = tmp[ 0 ];
                                            dataTypes.unshift( tmp[ 1 ] );
                                        }
                                        break;
                                    }
                                }
                            }
                        }
    
                        // Apply converter (if not an equivalence)
                        if ( conv !== true ) {
    
                            // Unless errors are allowed to bubble, catch and return them
                            if ( conv && s.throws ) {
                                response = conv( response );
                            } else {
                                try {
                                    response = conv( response );
                                } catch ( e ) {
                                    return {
                                        state: "parsererror",
                                        error: conv ? e : "No conversion from " + prev + " to " + current
                                    };
                                }
                            }
                        }
                    }
                }
            }
    
            return { state: "success", data: response };
        }
    
        jQuery.extend( {
    
            // Counter for holding the number of active queries
            active: 0,
    
            // Last-Modified header cache for next request
            lastModified: {},
            etag: {},
    
            ajaxSettings: {
                url: location.href,
                type: "GET",
                isLocal: rlocalProtocol.test( location.protocol ),
                global: true,
                processData: true,
                async: true,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                /*
                timeout: 0,
                data: null,
                dataType: null,
                username: null,
                password: null,
                cache: null,
                throws: false,
                traditional: false,
                headers: {},
                */
    
                accepts: {
                    "*": allTypes,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
    
                contents: {
                    xml: /\bxml\b/,
                    html: /\bhtml/,
                    json: /\bjson\b/
                },
    
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
    
                // Data converters
                // Keys separate source (or catchall "*") and destination types with a single space
                converters: {
    
                    // Convert anything to text
                    "* text": String,
    
                    // Text to html (true = no transformation)
                    "text html": true,
    
                    // Evaluate text as a json expression
                    "text json": jQuery.parseJSON,
    
                    // Parse text as xml
                    "text xml": jQuery.parseXML
                },
    
                // For options that shouldn't be deep extended:
                // you can add your own custom options here if
                // and when you create one that shouldn't be
                // deep extended (see ajaxExtend)
                flatOptions: {
                    url: true,
                    context: true
                }
            },
    
            // Creates a full fledged settings object into target
            // with both ajaxSettings and settings fields.
            // If target is omitted, writes into ajaxSettings.
            ajaxSetup: function( target, settings ) {
                return settings ?
    
                    // Building a settings object
                    ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :
    
                    // Extending ajaxSettings
                    ajaxExtend( jQuery.ajaxSettings, target );
            },
    
            ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
            ajaxTransport: addToPrefiltersOrTransports( transports ),
    
            // Main method
            ajax: function( url, options ) {
    
                // If url is an object, simulate pre-1.5 signature
                if ( typeof url === "object" ) {
                    options = url;
                    url = undefined;
                }
    
                // Force options to be an object
                options = options || {};
    
                var transport,
    
                    // URL without anti-cache param
                    cacheURL,
    
                    // Response headers
                    responseHeadersString,
                    responseHeaders,
    
                    // timeout handle
                    timeoutTimer,
    
                    // Url cleanup var
                    urlAnchor,
    
                    // To know if global events are to be dispatched
                    fireGlobals,
    
                    // Loop variable
                    i,
    
                    // Create the final options object
                    s = jQuery.ajaxSetup( {}, options ),
    
                    // Callbacks context
                    callbackContext = s.context || s,
    
                    // Context for global events is callbackContext if it is a DOM node or jQuery collection
                    globalEventContext = s.context &&
                        ( callbackContext.nodeType || callbackContext.jquery ) ?
                            jQuery( callbackContext ) :
                            jQuery.event,
    
                    // Deferreds
                    deferred = jQuery.Deferred(),
                    completeDeferred = jQuery.Callbacks( "once memory" ),
    
                    // Status-dependent callbacks
                    statusCode = s.statusCode || {},
    
                    // Headers (they are sent all at once)
                    requestHeaders = {},
                    requestHeadersNames = {},
    
                    // The jqXHR state
                    state = 0,
    
                    // Default abort message
                    strAbort = "canceled",
    
                    // Fake xhr
                    jqXHR = {
                        readyState: 0,
    
                        // Builds headers hashtable if needed
                        getResponseHeader: function( key ) {
                            var match;
                            if ( state === 2 ) {
                                if ( !responseHeaders ) {
                                    responseHeaders = {};
                                    while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
                                        responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
                                    }
                                }
                                match = responseHeaders[ key.toLowerCase() ];
                            }
                            return match == null ? null : match;
                        },
    
                        // Raw string
                        getAllResponseHeaders: function() {
                            return state === 2 ? responseHeadersString : null;
                        },
    
                        // Caches the header
                        setRequestHeader: function( name, value ) {
                            var lname = name.toLowerCase();
                            if ( !state ) {
                                name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
                                requestHeaders[ name ] = value;
                            }
                            return this;
                        },
    
                        // Overrides response content-type header
                        overrideMimeType: function( type ) {
                            if ( !state ) {
                                s.mimeType = type;
                            }
                            return this;
                        },
    
                        // Status-dependent callbacks
                        statusCode: function( map ) {
                            var code;
                            if ( map ) {
                                if ( state < 2 ) {
                                    for ( code in map ) {
    
                                        // Lazy-add the new callback in a way that preserves old ones
                                        statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
                                    }
                                } else {
    
                                    // Execute the appropriate callbacks
                                    jqXHR.always( map[ jqXHR.status ] );
                                }
                            }
                            return this;
                        },
    
                        // Cancel the request
                        abort: function( statusText ) {
                            var finalText = statusText || strAbort;
                            if ( transport ) {
                                transport.abort( finalText );
                            }
                            done( 0, finalText );
                            return this;
                        }
                    };
    
                // Attach deferreds
                deferred.promise( jqXHR ).complete = completeDeferred.add;
                jqXHR.success = jqXHR.done;
                jqXHR.error = jqXHR.fail;
    
                // Remove hash character (#7531: and string promotion)
                // Add protocol if not provided (prefilters might expect it)
                // Handle falsy url in the settings object (#10093: consistency with old signature)
                // We also use the url parameter if available
                s.url = ( ( url || s.url || location.href ) + "" ).replace( rhash, "" )
                    .replace( rprotocol, location.protocol + "//" );
    
                // Alias method option to type as per ticket #12004
                s.type = options.method || options.type || s.method || s.type;
    
                // Extract dataTypes list
                s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];
    
                // A cross-domain request is in order when the origin doesn't match the current origin.
                if ( s.crossDomain == null ) {
                    urlAnchor = document.createElement( "a" );
    
                    // Support: IE8-11+
                    // IE throws exception if url is malformed, e.g. http://example.com:80x/
                    try {
                        urlAnchor.href = s.url;
    
                        // Support: IE8-11+
                        // Anchor's host property isn't correctly set when s.url is relative
                        urlAnchor.href = urlAnchor.href;
                        s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
                            urlAnchor.protocol + "//" + urlAnchor.host;
                    } catch ( e ) {
    
                        // If there is an error parsing the URL, assume it is crossDomain,
                        // it can be rejected by the transport if it is invalid
                        s.crossDomain = true;
                    }
                }
    
                // Convert data if not already a string
                if ( s.data && s.processData && typeof s.data !== "string" ) {
                    s.data = jQuery.param( s.data, s.traditional );
                }
    
                // Apply prefilters
                inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );
    
                // If request was aborted inside a prefilter, stop there
                if ( state === 2 ) {
                    return jqXHR;
                }
    
                // We can fire global events as of now if asked to
                // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
                fireGlobals = jQuery.event && s.global;
    
                // Watch for a new set of requests
                if ( fireGlobals && jQuery.active++ === 0 ) {
                    jQuery.event.trigger( "ajaxStart" );
                }
    
                // Uppercase the type
                s.type = s.type.toUpperCase();
    
                // Determine if request has content
                s.hasContent = !rnoContent.test( s.type );
    
                // Save the URL in case we're toying with the If-Modified-Since
                // and/or If-None-Match header later on
                cacheURL = s.url;
    
                // More options handling for requests with no content
                if ( !s.hasContent ) {
    
                    // If data is available, append data to url
                    if ( s.data ) {
                        cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
    
                        // #9682: remove data so that it's not used in an eventual retry
                        delete s.data;
                    }
    
                    // Add anti-cache in url if needed
                    if ( s.cache === false ) {
                        s.url = rts.test( cacheURL ) ?
    
                            // If there is already a '_' parameter, set its value
                            cacheURL.replace( rts, "$1_=" + nonce++ ) :
    
                            // Otherwise add one to the end
                            cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
                    }
                }
    
                // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                if ( s.ifModified ) {
                    if ( jQuery.lastModified[ cacheURL ] ) {
                        jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
                    }
                    if ( jQuery.etag[ cacheURL ] ) {
                        jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
                    }
                }
    
                // Set the correct header, if data is being sent
                if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
                    jqXHR.setRequestHeader( "Content-Type", s.contentType );
                }
    
                // Set the Accepts header for the server, depending on the dataType
                jqXHR.setRequestHeader(
                    "Accept",
                    s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
                        s.accepts[ s.dataTypes[ 0 ] ] +
                            ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
                        s.accepts[ "*" ]
                );
    
                // Check for headers option
                for ( i in s.headers ) {
                    jqXHR.setRequestHeader( i, s.headers[ i ] );
                }
    
                // Allow custom headers/mimetypes and early abort
                if ( s.beforeSend &&
                    ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
    
                    // Abort if not done already and return
                    return jqXHR.abort();
                }
    
                // Aborting is no longer a cancellation
                strAbort = "abort";
    
                // Install callbacks on deferreds
                for ( i in { success: 1, error: 1, complete: 1 } ) {
                    jqXHR[ i ]( s[ i ] );
                }
    
                // Get transport
                transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );
    
                // If no transport, we auto-abort
                if ( !transport ) {
                    done( -1, "No Transport" );
                } else {
                    jqXHR.readyState = 1;
    
                    // Send global event
                    if ( fireGlobals ) {
                        globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
                    }
    
                    // If request was aborted inside ajaxSend, stop there
                    if ( state === 2 ) {
                        return jqXHR;
                    }
    
                    // Timeout
                    if ( s.async && s.timeout > 0 ) {
                        timeoutTimer = window.setTimeout( function() {
                            jqXHR.abort( "timeout" );
                        }, s.timeout );
                    }
    
                    try {
                        state = 1;
                        transport.send( requestHeaders, done );
                    } catch ( e ) {
    
                        // Propagate exception as error if not done
                        if ( state < 2 ) {
                            done( -1, e );
    
                        // Simply rethrow otherwise
                        } else {
                            throw e;
                        }
                    }
                }
    
                // Callback for when everything is done
                function done( status, nativeStatusText, responses, headers ) {
                    var isSuccess, success, error, response, modified,
                        statusText = nativeStatusText;
    
                    // Called once
                    if ( state === 2 ) {
                        return;
                    }
    
                    // State is "done" now
                    state = 2;
    
                    // Clear timeout if it exists
                    if ( timeoutTimer ) {
                        window.clearTimeout( timeoutTimer );
                    }
    
                    // Dereference transport for early garbage collection
                    // (no matter how long the jqXHR object will be used)
                    transport = undefined;
    
                    // Cache response headers
                    responseHeadersString = headers || "";
    
                    // Set readyState
                    jqXHR.readyState = status > 0 ? 4 : 0;
    
                    // Determine if successful
                    isSuccess = status >= 200 && status < 300 || status === 304;
    
                    // Get response data
                    if ( responses ) {
                        response = ajaxHandleResponses( s, jqXHR, responses );
                    }
    
                    // Convert no matter what (that way responseXXX fields are always set)
                    response = ajaxConvert( s, response, jqXHR, isSuccess );
    
                    // If successful, handle type chaining
                    if ( isSuccess ) {
    
                        // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                        if ( s.ifModified ) {
                            modified = jqXHR.getResponseHeader( "Last-Modified" );
                            if ( modified ) {
                                jQuery.lastModified[ cacheURL ] = modified;
                            }
                            modified = jqXHR.getResponseHeader( "etag" );
                            if ( modified ) {
                                jQuery.etag[ cacheURL ] = modified;
                            }
                        }
    
                        // if no content
                        if ( status === 204 || s.type === "HEAD" ) {
                            statusText = "nocontent";
    
                        // if not modified
                        } else if ( status === 304 ) {
                            statusText = "notmodified";
    
                        // If we have data, let's convert it
                        } else {
                            statusText = response.state;
                            success = response.data;
                            error = response.error;
                            isSuccess = !error;
                        }
                    } else {
    
                        // Extract error from statusText and normalize for non-aborts
                        error = statusText;
                        if ( status || !statusText ) {
                            statusText = "error";
                            if ( status < 0 ) {
                                status = 0;
                            }
                        }
                    }
    
                    // Set data for the fake xhr object
                    jqXHR.status = status;
                    jqXHR.statusText = ( nativeStatusText || statusText ) + "";
    
                    // Success/Error
                    if ( isSuccess ) {
                        deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
                    } else {
                        deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
                    }
    
                    // Status-dependent callbacks
                    jqXHR.statusCode( statusCode );
                    statusCode = undefined;
    
                    if ( fireGlobals ) {
                        globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
                            [ jqXHR, s, isSuccess ? success : error ] );
                    }
    
                    // Complete
                    completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );
    
                    if ( fireGlobals ) {
                        globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
    
                        // Handle the global AJAX counter
                        if ( !( --jQuery.active ) ) {
                            jQuery.event.trigger( "ajaxStop" );
                        }
                    }
                }
    
                return jqXHR;
            },
    
            getJSON: function( url, data, callback ) {
                return jQuery.get( url, data, callback, "json" );
            },
    
            getScript: function( url, callback ) {
                return jQuery.get( url, undefined, callback, "script" );
            }
        } );
    
        jQuery.each( [ "get", "post" ], function( i, method ) {
            jQuery[ method ] = function( url, data, callback, type ) {
    
                // Shift arguments if data argument was omitted
                if ( jQuery.isFunction( data ) ) {
                    type = type || callback;
                    callback = data;
                    data = undefined;
                }
    
                // The url can be an options object (which then must have .url)
                return jQuery.ajax( jQuery.extend( {
                    url: url,
                    type: method,
                    dataType: type,
                    data: data,
                    success: callback
                }, jQuery.isPlainObject( url ) && url ) );
            };
        } );
    
    
        jQuery._evalUrl = function( url ) {
            return jQuery.ajax( {
                url: url,
    
                // Make this explicit, since user can override this through ajaxSetup (#11264)
                type: "GET",
                dataType: "script",
                async: false,
                global: false,
                "throws": true
            } );
        };
    
    
        jQuery.fn.extend( {
            wrapAll: function( html ) {
                var wrap;
    
                if ( jQuery.isFunction( html ) ) {
                    return this.each( function( i ) {
                        jQuery( this ).wrapAll( html.call( this, i ) );
                    } );
                }
    
                if ( this[ 0 ] ) {
    
                    // The elements to wrap the target around
                    wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );
    
                    if ( this[ 0 ].parentNode ) {
                        wrap.insertBefore( this[ 0 ] );
                    }
    
                    wrap.map( function() {
                        var elem = this;
    
                        while ( elem.firstElementChild ) {
                            elem = elem.firstElementChild;
                        }
    
                        return elem;
                    } ).append( this );
                }
    
                return this;
            },
    
            wrapInner: function( html ) {
                if ( jQuery.isFunction( html ) ) {
                    return this.each( function( i ) {
                        jQuery( this ).wrapInner( html.call( this, i ) );
                    } );
                }
    
                return this.each( function() {
                    var self = jQuery( this ),
                        contents = self.contents();
    
                    if ( contents.length ) {
                        contents.wrapAll( html );
    
                    } else {
                        self.append( html );
                    }
                } );
            },
    
            wrap: function( html ) {
                var isFunction = jQuery.isFunction( html );
    
                return this.each( function( i ) {
                    jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
                } );
            },
    
            unwrap: function() {
                return this.parent().each( function() {
                    if ( !jQuery.nodeName( this, "body" ) ) {
                        jQuery( this ).replaceWith( this.childNodes );
                    }
                } ).end();
            }
        } );
    
    
        jQuery.expr.filters.hidden = function( elem ) {
            return !jQuery.expr.filters.visible( elem );
        };
        jQuery.expr.filters.visible = function( elem ) {
    
            // Support: Opera <= 12.12
            // Opera reports offsetWidths and offsetHeights less than zero on some elements
            // Use OR instead of AND as the element is not visible if either is true
            // See tickets #10406 and #13132
            return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;
        };
    
    
    
    
        var r20 = /%20/g,
            rbracket = /\[\]$/,
            rCRLF = /\r?\n/g,
            rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
            rsubmittable = /^(?:input|select|textarea|keygen)/i;
    
        function buildParams( prefix, obj, traditional, add ) {
            var name;
    
            if ( jQuery.isArray( obj ) ) {
    
                // Serialize array item.
                jQuery.each( obj, function( i, v ) {
                    if ( traditional || rbracket.test( prefix ) ) {
    
                        // Treat each array item as a scalar.
                        add( prefix, v );
    
                    } else {
    
                        // Item is non-scalar (array or object), encode its numeric index.
                        buildParams(
                            prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
                            v,
                            traditional,
                            add
                        );
                    }
                } );
    
            } else if ( !traditional && jQuery.type( obj ) === "object" ) {
    
                // Serialize object item.
                for ( name in obj ) {
                    buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
                }
    
            } else {
    
                // Serialize scalar item.
                add( prefix, obj );
            }
        }
    
        // Serialize an array of form elements or a set of
        // key/values into a query string
        jQuery.param = function( a, traditional ) {
            var prefix,
                s = [],
                add = function( key, value ) {
    
                    // If value is a function, invoke it and return its value
                    value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
                    s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
                };
    
            // Set traditional to true for jQuery <= 1.3.2 behavior.
            if ( traditional === undefined ) {
                traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
            }
    
            // If an array was passed in, assume that it is an array of form elements.
            if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
    
                // Serialize the form elements
                jQuery.each( a, function() {
                    add( this.name, this.value );
                } );
    
            } else {
    
                // If traditional, encode the "old" way (the way 1.3.2 or older
                // did it), otherwise encode params recursively.
                for ( prefix in a ) {
                    buildParams( prefix, a[ prefix ], traditional, add );
                }
            }
    
            // Return the resulting serialization
            return s.join( "&" ).replace( r20, "+" );
        };
    
        jQuery.fn.extend( {
            serialize: function() {
                return jQuery.param( this.serializeArray() );
            },
            serializeArray: function() {
                return this.map( function() {
    
                    // Can add propHook for "elements" to filter or add form elements
                    var elements = jQuery.prop( this, "elements" );
                    return elements ? jQuery.makeArray( elements ) : this;
                } )
                .filter( function() {
                    var type = this.type;
    
                    // Use .is( ":disabled" ) so that fieldset[disabled] works
                    return this.name && !jQuery( this ).is( ":disabled" ) &&
                        rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
                        ( this.checked || !rcheckableType.test( type ) );
                } )
                .map( function( i, elem ) {
                    var val = jQuery( this ).val();
    
                    return val == null ?
                        null :
                        jQuery.isArray( val ) ?
                            jQuery.map( val, function( val ) {
                                return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
                            } ) :
                            { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
                } ).get();
            }
        } );
    
    
        jQuery.ajaxSettings.xhr = function() {
            try {
                return new window.XMLHttpRequest();
            } catch ( e ) {}
        };
    
        var xhrSuccessStatus = {
    
                // File protocol always yields status code 0, assume 200
                0: 200,
    
                // Support: IE9
                // #1450: sometimes IE returns 1223 when it should be 204
                1223: 204
            },
            xhrSupported = jQuery.ajaxSettings.xhr();
    
        support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
        support.ajax = xhrSupported = !!xhrSupported;
    
        jQuery.ajaxTransport( function( options ) {
            var callback, errorCallback;
    
            // Cross domain only allowed if supported through XMLHttpRequest
            if ( support.cors || xhrSupported && !options.crossDomain ) {
                return {
                    send: function( headers, complete ) {
                        var i,
                            xhr = options.xhr();
    
                        xhr.open(
                            options.type,
                            options.url,
                            options.async,
                            options.username,
                            options.password
                        );
    
                        // Apply custom fields if provided
                        if ( options.xhrFields ) {
                            for ( i in options.xhrFields ) {
                                xhr[ i ] = options.xhrFields[ i ];
                            }
                        }
    
                        // Override mime type if needed
                        if ( options.mimeType && xhr.overrideMimeType ) {
                            xhr.overrideMimeType( options.mimeType );
                        }
    
                        // X-Requested-With header
                        // For cross-domain requests, seeing as conditions for a preflight are
                        // akin to a jigsaw puzzle, we simply never set it to be sure.
                        // (it can always be set on a per-request basis or even using ajaxSetup)
                        // For same-domain requests, won't change header if already provided.
                        if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
                            headers[ "X-Requested-With" ] = "XMLHttpRequest";
                        }
    
                        // Set headers
                        for ( i in headers ) {
                            xhr.setRequestHeader( i, headers[ i ] );
                        }
    
                        // Callback
                        callback = function( type ) {
                            return function() {
                                if ( callback ) {
                                    callback = errorCallback = xhr.onload =
                                        xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;
    
                                    if ( type === "abort" ) {
                                        xhr.abort();
                                    } else if ( type === "error" ) {
    
                                        // Support: IE9
                                        // On a manual native abort, IE9 throws
                                        // errors on any property access that is not readyState
                                        if ( typeof xhr.status !== "number" ) {
                                            complete( 0, "error" );
                                        } else {
                                            complete(
    
                                                // File: protocol always yields status 0; see #8605, #14207
                                                xhr.status,
                                                xhr.statusText
                                            );
                                        }
                                    } else {
                                        complete(
                                            xhrSuccessStatus[ xhr.status ] || xhr.status,
                                            xhr.statusText,
    
                                            // Support: IE9 only
                                            // IE9 has no XHR2 but throws on binary (trac-11426)
                                            // For XHR2 non-text, let the caller handle it (gh-2498)
                                            ( xhr.responseType || "text" ) !== "text"  ||
                                            typeof xhr.responseText !== "string" ?
                                                { binary: xhr.response } :
                                                { text: xhr.responseText },
                                            xhr.getAllResponseHeaders()
                                        );
                                    }
                                }
                            };
                        };
    
                        // Listen to events
                        xhr.onload = callback();
                        errorCallback = xhr.onerror = callback( "error" );
    
                        // Support: IE9
                        // Use onreadystatechange to replace onabort
                        // to handle uncaught aborts
                        if ( xhr.onabort !== undefined ) {
                            xhr.onabort = errorCallback;
                        } else {
                            xhr.onreadystatechange = function() {
    
                                // Check readyState before timeout as it changes
                                if ( xhr.readyState === 4 ) {
    
                                    // Allow onerror to be called first,
                                    // but that will not handle a native abort
                                    // Also, save errorCallback to a variable
                                    // as xhr.onerror cannot be accessed
                                    window.setTimeout( function() {
                                        if ( callback ) {
                                            errorCallback();
                                        }
                                    } );
                                }
                            };
                        }
    
                        // Create the abort callback
                        callback = callback( "abort" );
    
                        try {
    
                            // Do send the request (this may raise an exception)
                            xhr.send( options.hasContent && options.data || null );
                        } catch ( e ) {
    
                            // #14683: Only rethrow if this hasn't been notified as an error yet
                            if ( callback ) {
                                throw e;
                            }
                        }
                    },
    
                    abort: function() {
                        if ( callback ) {
                            callback();
                        }
                    }
                };
            }
        } );
    
    
    
    
        // Install script dataType
        jQuery.ajaxSetup( {
            accepts: {
                script: "text/javascript, application/javascript, " +
                    "application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /\b(?:java|ecma)script\b/
            },
            converters: {
                "text script": function( text ) {
                    jQuery.globalEval( text );
                    return text;
                }
            }
        } );
    
        // Handle cache's special case and crossDomain
        jQuery.ajaxPrefilter( "script", function( s ) {
            if ( s.cache === undefined ) {
                s.cache = false;
            }
            if ( s.crossDomain ) {
                s.type = "GET";
            }
        } );
    
        // Bind script tag hack transport
        jQuery.ajaxTransport( "script", function( s ) {
    
            // This transport only deals with cross domain requests
            if ( s.crossDomain ) {
                var script, callback;
                return {
                    send: function( _, complete ) {
                        script = jQuery( "<script>" ).prop( {
                            charset: s.scriptCharset,
                            src: s.url
                        } ).on(
                            "load error",
                            callback = function( evt ) {
                                script.remove();
                                callback = null;
                                if ( evt ) {
                                    complete( evt.type === "error" ? 404 : 200, evt.type );
                                }
                            }
                        );
    
                        // Use native DOM manipulation to avoid our domManip AJAX trickery
                        document.head.appendChild( script[ 0 ] );
                    },
                    abort: function() {
                        if ( callback ) {
                            callback();
                        }
                    }
                };
            }
        } );
    
    
    
    
        var oldCallbacks = [],
            rjsonp = /(=)\?(?=&|$)|\?\?/;
    
        // Default jsonp settings
        jQuery.ajaxSetup( {
            jsonp: "callback",
            jsonpCallback: function() {
                var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
                this[ callback ] = true;
                return callback;
            }
        } );
    
        // Detect, normalize options and install callbacks for jsonp requests
        jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
    
            var callbackName, overwritten, responseContainer,
                jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
                    "url" :
                    typeof s.data === "string" &&
                        ( s.contentType || "" )
                            .indexOf( "application/x-www-form-urlencoded" ) === 0 &&
                        rjsonp.test( s.data ) && "data"
                );
    
            // Handle iff the expected data type is "jsonp" or we have a parameter to set
            if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {
    
                // Get callback name, remembering preexisting value associated with it
                callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
                    s.jsonpCallback() :
                    s.jsonpCallback;
    
                // Insert callback into url or form data
                if ( jsonProp ) {
                    s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
                } else if ( s.jsonp !== false ) {
                    s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
                }
    
                // Use data converter to retrieve json after script execution
                s.converters[ "script json" ] = function() {
                    if ( !responseContainer ) {
                        jQuery.error( callbackName + " was not called" );
                    }
                    return responseContainer[ 0 ];
                };
    
                // Force json dataType
                s.dataTypes[ 0 ] = "json";
    
                // Install callback
                overwritten = window[ callbackName ];
                window[ callbackName ] = function() {
                    responseContainer = arguments;
                };
    
                // Clean-up function (fires after converters)
                jqXHR.always( function() {
    
                    // If previous value didn't exist - remove it
                    if ( overwritten === undefined ) {
                        jQuery( window ).removeProp( callbackName );
    
                    // Otherwise restore preexisting value
                    } else {
                        window[ callbackName ] = overwritten;
                    }
    
                    // Save back as free
                    if ( s[ callbackName ] ) {
    
                        // Make sure that re-using the options doesn't screw things around
                        s.jsonpCallback = originalSettings.jsonpCallback;
    
                        // Save the callback name for future use
                        oldCallbacks.push( callbackName );
                    }
    
                    // Call if it was a function and we have a response
                    if ( responseContainer && jQuery.isFunction( overwritten ) ) {
                        overwritten( responseContainer[ 0 ] );
                    }
    
                    responseContainer = overwritten = undefined;
                } );
    
                // Delegate to script
                return "script";
            }
        } );
    
    
    
    
        // Argument "data" should be string of html
        // context (optional): If specified, the fragment will be created in this context,
        // defaults to document
        // keepScripts (optional): If true, will include scripts passed in the html string
        jQuery.parseHTML = function( data, context, keepScripts ) {
            if ( !data || typeof data !== "string" ) {
                return null;
            }
            if ( typeof context === "boolean" ) {
                keepScripts = context;
                context = false;
            }
            context = context || document;
    
            var parsed = rsingleTag.exec( data ),
                scripts = !keepScripts && [];
    
            // Single tag
            if ( parsed ) {
                return [ context.createElement( parsed[ 1 ] ) ];
            }
    
            parsed = buildFragment( [ data ], context, scripts );
    
            if ( scripts && scripts.length ) {
                jQuery( scripts ).remove();
            }
    
            return jQuery.merge( [], parsed.childNodes );
        };
    
    
        // Keep a copy of the old load method
        var _load = jQuery.fn.load;
    
        /**
         * Load a url into a page
         */
        jQuery.fn.load = function( url, params, callback ) {
            if ( typeof url !== "string" && _load ) {
                return _load.apply( this, arguments );
            }
    
            var selector, type, response,
                self = this,
                off = url.indexOf( " " );
    
            if ( off > -1 ) {
                selector = jQuery.trim( url.slice( off ) );
                url = url.slice( 0, off );
            }
    
            // If it's a function
            if ( jQuery.isFunction( params ) ) {
    
                // We assume that it's the callback
                callback = params;
                params = undefined;
    
            // Otherwise, build a param string
            } else if ( params && typeof params === "object" ) {
                type = "POST";
            }
    
            // If we have elements to modify, make the request
            if ( self.length > 0 ) {
                jQuery.ajax( {
                    url: url,
    
                    // If "type" variable is undefined, then "GET" method will be used.
                    // Make value of this field explicit since
                    // user can override it through ajaxSetup method
                    type: type || "GET",
                    dataType: "html",
                    data: params
                } ).done( function( responseText ) {
    
                    // Save response for use in complete callback
                    response = arguments;
    
                    self.html( selector ?
    
                        // If a selector was specified, locate the right elements in a dummy div
                        // Exclude scripts to avoid IE 'Permission Denied' errors
                        jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :
    
                        // Otherwise use the full result
                        responseText );
    
                // If the request succeeds, this function gets "data", "status", "jqXHR"
                // but they are ignored because response was set above.
                // If it fails, this function gets "jqXHR", "status", "error"
                } ).always( callback && function( jqXHR, status ) {
                    self.each( function() {
                        callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
                    } );
                } );
            }
    
            return this;
        };
    
    
    
    
        // Attach a bunch of functions for handling common AJAX events
        jQuery.each( [
            "ajaxStart",
            "ajaxStop",
            "ajaxComplete",
            "ajaxError",
            "ajaxSuccess",
            "ajaxSend"
        ], function( i, type ) {
            jQuery.fn[ type ] = function( fn ) {
                return this.on( type, fn );
            };
        } );
    
    
    
    
        jQuery.expr.filters.animated = function( elem ) {
            return jQuery.grep( jQuery.timers, function( fn ) {
                return elem === fn.elem;
            } ).length;
        };
    
    
    
    
        /**
         * Gets a window from an element
         */
        function getWindow( elem ) {
            return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
        }
    
        jQuery.offset = {
            setOffset: function( elem, options, i ) {
                var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
                    position = jQuery.css( elem, "position" ),
                    curElem = jQuery( elem ),
                    props = {};
    
                // Set position first, in-case top/left are set even on static elem
                if ( position === "static" ) {
                    elem.style.position = "relative";
                }
    
                curOffset = curElem.offset();
                curCSSTop = jQuery.css( elem, "top" );
                curCSSLeft = jQuery.css( elem, "left" );
                calculatePosition = ( position === "absolute" || position === "fixed" ) &&
                    ( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;
    
                // Need to be able to calculate position if either
                // top or left is auto and position is either absolute or fixed
                if ( calculatePosition ) {
                    curPosition = curElem.position();
                    curTop = curPosition.top;
                    curLeft = curPosition.left;
    
                } else {
                    curTop = parseFloat( curCSSTop ) || 0;
                    curLeft = parseFloat( curCSSLeft ) || 0;
                }
    
                if ( jQuery.isFunction( options ) ) {
    
                    // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
                    options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
                }
    
                if ( options.top != null ) {
                    props.top = ( options.top - curOffset.top ) + curTop;
                }
                if ( options.left != null ) {
                    props.left = ( options.left - curOffset.left ) + curLeft;
                }
    
                if ( "using" in options ) {
                    options.using.call( elem, props );
    
                } else {
                    curElem.css( props );
                }
            }
        };
    
        jQuery.fn.extend( {
            offset: function( options ) {
                if ( arguments.length ) {
                    return options === undefined ?
                        this :
                        this.each( function( i ) {
                            jQuery.offset.setOffset( this, options, i );
                        } );
                }
    
                var docElem, win,
                    elem = this[ 0 ],
                    box = { top: 0, left: 0 },
                    doc = elem && elem.ownerDocument;
    
                if ( !doc ) {
                    return;
                }
    
                docElem = doc.documentElement;
    
                // Make sure it's not a disconnected DOM node
                if ( !jQuery.contains( docElem, elem ) ) {
                    return box;
                }
    
                box = elem.getBoundingClientRect();
                win = getWindow( doc );
                return {
                    top: box.top + win.pageYOffset - docElem.clientTop,
                    left: box.left + win.pageXOffset - docElem.clientLeft
                };
            },
    
            position: function() {
                if ( !this[ 0 ] ) {
                    return;
                }
    
                var offsetParent, offset,
                    elem = this[ 0 ],
                    parentOffset = { top: 0, left: 0 };
    
                // Fixed elements are offset from window (parentOffset = {top:0, left: 0},
                // because it is its only offset parent
                if ( jQuery.css( elem, "position" ) === "fixed" ) {
    
                    // Assume getBoundingClientRect is there when computed position is fixed
                    offset = elem.getBoundingClientRect();
    
                } else {
    
                    // Get *real* offsetParent
                    offsetParent = this.offsetParent();
    
                    // Get correct offsets
                    offset = this.offset();
                    if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
                        parentOffset = offsetParent.offset();
                    }
    
                    // Add offsetParent borders
                    parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
                    parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
                }
    
                // Subtract parent offsets and element margins
                return {
                    top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
                    left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
                };
            },
    
            // This method will return documentElement in the following cases:
            // 1) For the element inside the iframe without offsetParent, this method will return
            //    documentElement of the parent window
            // 2) For the hidden or detached element
            // 3) For body or html element, i.e. in case of the html node - it will return itself
            //
            // but those exceptions were never presented as a real life use-cases
            // and might be considered as more preferable results.
            //
            // This logic, however, is not guaranteed and can change at any point in the future
            offsetParent: function() {
                return this.map( function() {
                    var offsetParent = this.offsetParent;
    
                    while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
                        offsetParent = offsetParent.offsetParent;
                    }
    
                    return offsetParent || documentElement;
                } );
            }
        } );
    
        // Create scrollLeft and scrollTop methods
        jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
            var top = "pageYOffset" === prop;
    
            jQuery.fn[ method ] = function( val ) {
                return access( this, function( elem, method, val ) {
                    var win = getWindow( elem );
    
                    if ( val === undefined ) {
                        return win ? win[ prop ] : elem[ method ];
                    }
    
                    if ( win ) {
                        win.scrollTo(
                            !top ? val : win.pageXOffset,
                            top ? val : win.pageYOffset
                        );
    
                    } else {
                        elem[ method ] = val;
                    }
                }, method, val, arguments.length );
            };
        } );
    
        // Support: Safari<7-8+, Chrome<37-44+
        // Add the top/left cssHooks using jQuery.fn.position
        // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
        // Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
        // getComputedStyle returns percent when specified for top/left/bottom/right;
        // rather than make the css module depend on the offset module, just check for it here
        jQuery.each( [ "top", "left" ], function( i, prop ) {
            jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
                function( elem, computed ) {
                    if ( computed ) {
                        computed = curCSS( elem, prop );
    
                        // If curCSS returns percentage, fallback to offset
                        return rnumnonpx.test( computed ) ?
                            jQuery( elem ).position()[ prop ] + "px" :
                            computed;
                    }
                }
            );
        } );
    
    
        // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
        jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
            jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
                function( defaultExtra, funcName ) {
    
                // Margin is only for outerHeight, outerWidth
                jQuery.fn[ funcName ] = function( margin, value ) {
                    var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
                        extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
    
                    return access( this, function( elem, type, value ) {
                        var doc;
    
                        if ( jQuery.isWindow( elem ) ) {
    
                            // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
                            // isn't a whole lot we can do. See pull request at this URL for discussion:
                            // https://github.com/jquery/jquery/pull/764
                            return elem.document.documentElement[ "client" + name ];
                        }
    
                        // Get document width or height
                        if ( elem.nodeType === 9 ) {
                            doc = elem.documentElement;
    
                            // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
                            // whichever is greatest
                            return Math.max(
                                elem.body[ "scroll" + name ], doc[ "scroll" + name ],
                                elem.body[ "offset" + name ], doc[ "offset" + name ],
                                doc[ "client" + name ]
                            );
                        }
    
                        return value === undefined ?
    
                            // Get width or height on the element, requesting but not forcing parseFloat
                            jQuery.css( elem, type, extra ) :
    
                            // Set width or height on the element
                            jQuery.style( elem, type, value, extra );
                    }, type, chainable ? margin : undefined, chainable, null );
                };
            } );
        } );
    
    
        jQuery.fn.extend( {
    
            bind: function( types, data, fn ) {
                return this.on( types, null, data, fn );
            },
            unbind: function( types, fn ) {
                return this.off( types, null, fn );
            },
    
            delegate: function( selector, types, data, fn ) {
                return this.on( types, selector, data, fn );
            },
            undelegate: function( selector, types, fn ) {
    
                // ( namespace ) or ( selector, types [, fn] )
                return arguments.length === 1 ?
                    this.off( selector, "**" ) :
                    this.off( types, selector || "**", fn );
            },
            size: function() {
                return this.length;
            }
        } );
    
        jQuery.fn.andSelf = jQuery.fn.addBack;
    
    
    
    
        // Register as a named AMD module, since jQuery can be concatenated with other
        // files that may use define, but not via a proper concatenation script that
        // understands anonymous AMD modules. A named AMD is safest and most robust
        // way to register. Lowercase jquery is used because AMD module names are
        // derived from file names, and jQuery is normally delivered in a lowercase
        // file name. Do this after creating the global so that if an AMD module wants
        // to call noConflict to hide this version of jQuery, it will work.
    
        // Note that for maximum portability, libraries that are not jQuery should
        // declare themselves as anonymous modules, and avoid setting a global if an
        // AMD loader is present. jQuery is a special case. For more information, see
        // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
    
        if ( true ) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
                return jQuery;
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        }
    
    
    
        var
    
            // Map over jQuery in case of overwrite
            _jQuery = window.jQuery,
    
            // Map over the $ in case of overwrite
            _$ = window.$;
    
        jQuery.noConflict = function( deep ) {
            if ( window.$ === jQuery ) {
                window.$ = _$;
            }
    
            if ( deep && window.jQuery === jQuery ) {
                window.jQuery = _jQuery;
            }
    
            return jQuery;
        };
    
        // Expose jQuery and $ identifiers, even in AMD
        // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
        // and CommonJS for browser emulators (#13566)
        if ( !noGlobal ) {
            window.jQuery = window.$ = jQuery;
        }
    
        return jQuery;
        }));
    
    
    /***/ }),
    /* 3 */
    /***/ (function(module, exports, __webpack_require__) {
    
        /* WEBPACK VAR INJECTION */(function(module) {//! moment.js
        //! version : 2.18.1
        //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        //! license : MIT
        //! momentjs.com
    
        ;(function (global, factory) {
             true ? module.exports = factory() :
            typeof define === 'function' && define.amd ? define(factory) :
            global.moment = factory()
        }(this, (function () { 'use strict';
    
        var hookCallback;
    
        function hooks () {
            return hookCallback.apply(null, arguments);
        }
    
        // This is done to register the method called with moment()
        // without creating circular dependencies.
        function setHookCallback (callback) {
            hookCallback = callback;
        }
    
        function isArray(input) {
            return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
        }
    
        function isObject(input) {
            // IE8 will treat undefined and null as object if it wasn't for
            // input != null
            return input != null && Object.prototype.toString.call(input) === '[object Object]';
        }
    
        function isObjectEmpty(obj) {
            var k;
            for (k in obj) {
                // even if its not own property I'd still call it non-empty
                return false;
            }
            return true;
        }
    
        function isUndefined(input) {
            return input === void 0;
        }
    
        function isNumber(input) {
            return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
        }
    
        function isDate(input) {
            return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
        }
    
        function map(arr, fn) {
            var res = [], i;
            for (i = 0; i < arr.length; ++i) {
                res.push(fn(arr[i], i));
            }
            return res;
        }
    
        function hasOwnProp(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b);
        }
    
        function extend(a, b) {
            for (var i in b) {
                if (hasOwnProp(b, i)) {
                    a[i] = b[i];
                }
            }
    
            if (hasOwnProp(b, 'toString')) {
                a.toString = b.toString;
            }
    
            if (hasOwnProp(b, 'valueOf')) {
                a.valueOf = b.valueOf;
            }
    
            return a;
        }
    
        function createUTC (input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, true).utc();
        }
    
        function defaultParsingFlags() {
            // We need to deep clone this object.
            return {
                empty           : false,
                unusedTokens    : [],
                unusedInput     : [],
                overflow        : -2,
                charsLeftOver   : 0,
                nullInput       : false,
                invalidMonth    : null,
                invalidFormat   : false,
                userInvalidated : false,
                iso             : false,
                parsedDateParts : [],
                meridiem        : null,
                rfc2822         : false,
                weekdayMismatch : false
            };
        }
    
        function getParsingFlags(m) {
            if (m._pf == null) {
                m._pf = defaultParsingFlags();
            }
            return m._pf;
        }
    
        var some;
        if (Array.prototype.some) {
            some = Array.prototype.some;
        } else {
            some = function (fun) {
                var t = Object(this);
                var len = t.length >>> 0;
    
                for (var i = 0; i < len; i++) {
                    if (i in t && fun.call(this, t[i], i, t)) {
                        return true;
                    }
                }
    
                return false;
            };
        }
    
        var some$1 = some;
    
        function isValid(m) {
            if (m._isValid == null) {
                var flags = getParsingFlags(m);
                var parsedParts = some$1.call(flags.parsedDateParts, function (i) {
                    return i != null;
                });
                var isNowValid = !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));
    
                if (m._strict) {
                    isNowValid = isNowValid &&
                        flags.charsLeftOver === 0 &&
                        flags.unusedTokens.length === 0 &&
                        flags.bigHour === undefined;
                }
    
                if (Object.isFrozen == null || !Object.isFrozen(m)) {
                    m._isValid = isNowValid;
                }
                else {
                    return isNowValid;
                }
            }
            return m._isValid;
        }
    
        function createInvalid (flags) {
            var m = createUTC(NaN);
            if (flags != null) {
                extend(getParsingFlags(m), flags);
            }
            else {
                getParsingFlags(m).userInvalidated = true;
            }
    
            return m;
        }
    
        // Plugins that add properties should also add the key here (null value),
        // so we can properly clone ourselves.
        var momentProperties = hooks.momentProperties = [];
    
        function copyConfig(to, from) {
            var i, prop, val;
    
            if (!isUndefined(from._isAMomentObject)) {
                to._isAMomentObject = from._isAMomentObject;
            }
            if (!isUndefined(from._i)) {
                to._i = from._i;
            }
            if (!isUndefined(from._f)) {
                to._f = from._f;
            }
            if (!isUndefined(from._l)) {
                to._l = from._l;
            }
            if (!isUndefined(from._strict)) {
                to._strict = from._strict;
            }
            if (!isUndefined(from._tzm)) {
                to._tzm = from._tzm;
            }
            if (!isUndefined(from._isUTC)) {
                to._isUTC = from._isUTC;
            }
            if (!isUndefined(from._offset)) {
                to._offset = from._offset;
            }
            if (!isUndefined(from._pf)) {
                to._pf = getParsingFlags(from);
            }
            if (!isUndefined(from._locale)) {
                to._locale = from._locale;
            }
    
            if (momentProperties.length > 0) {
                for (i = 0; i < momentProperties.length; i++) {
                    prop = momentProperties[i];
                    val = from[prop];
                    if (!isUndefined(val)) {
                        to[prop] = val;
                    }
                }
            }
    
            return to;
        }
    
        var updateInProgress = false;
    
        // Moment prototype object
        function Moment(config) {
            copyConfig(this, config);
            this._d = new Date(config._d != null ? config._d.getTime() : NaN);
            if (!this.isValid()) {
                this._d = new Date(NaN);
            }
            // Prevent infinite loop in case updateOffset creates new moment
            // objects.
            if (updateInProgress === false) {
                updateInProgress = true;
                hooks.updateOffset(this);
                updateInProgress = false;
            }
        }
    
        function isMoment (obj) {
            return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
        }
    
        function absFloor (number) {
            if (number < 0) {
                // -0 -> 0
                return Math.ceil(number) || 0;
            } else {
                return Math.floor(number);
            }
        }
    
        function toInt(argumentForCoercion) {
            var coercedNumber = +argumentForCoercion,
                value = 0;
    
            if (coercedNumber !== 0 && isFinite(coercedNumber)) {
                value = absFloor(coercedNumber);
            }
    
            return value;
        }
    
        // compare two arrays, return the number of differences
        function compareArrays(array1, array2, dontConvert) {
            var len = Math.min(array1.length, array2.length),
                lengthDiff = Math.abs(array1.length - array2.length),
                diffs = 0,
                i;
            for (i = 0; i < len; i++) {
                if ((dontConvert && array1[i] !== array2[i]) ||
                    (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                    diffs++;
                }
            }
            return diffs + lengthDiff;
        }
    
        function warn(msg) {
            if (hooks.suppressDeprecationWarnings === false &&
                    (typeof console !==  'undefined') && console.warn) {
                console.warn('Deprecation warning: ' + msg);
            }
        }
    
        function deprecate(msg, fn) {
            var firstTime = true;
    
            return extend(function () {
                if (hooks.deprecationHandler != null) {
                    hooks.deprecationHandler(null, msg);
                }
                if (firstTime) {
                    var args = [];
                    var arg;
                    for (var i = 0; i < arguments.length; i++) {
                        arg = '';
                        if (typeof arguments[i] === 'object') {
                            arg += '\n[' + i + '] ';
                            for (var key in arguments[0]) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                            arg = arg.slice(0, -2); // Remove trailing comma and space
                        } else {
                            arg = arguments[i];
                        }
                        args.push(arg);
                    }
                    warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                    firstTime = false;
                }
                return fn.apply(this, arguments);
            }, fn);
        }
    
        var deprecations = {};
    
        function deprecateSimple(name, msg) {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(name, msg);
            }
            if (!deprecations[name]) {
                warn(msg);
                deprecations[name] = true;
            }
        }
    
        hooks.suppressDeprecationWarnings = false;
        hooks.deprecationHandler = null;
    
        function isFunction(input) {
            return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
        }
    
        function set (config) {
            var prop, i;
            for (i in config) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
            this._config = config;
            // Lenient ordinal parsing accepts just a number in addition to
            // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
            // TODO: Remove "ordinalParse" fallback in next major release.
            this._dayOfMonthOrdinalParseLenient = new RegExp(
                (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                    '|' + (/\d{1,2}/).source);
        }
    
        function mergeConfigs(parentConfig, childConfig) {
            var res = extend({}, parentConfig), prop;
            for (prop in childConfig) {
                if (hasOwnProp(childConfig, prop)) {
                    if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                        res[prop] = {};
                        extend(res[prop], parentConfig[prop]);
                        extend(res[prop], childConfig[prop]);
                    } else if (childConfig[prop] != null) {
                        res[prop] = childConfig[prop];
                    } else {
                        delete res[prop];
                    }
                }
            }
            for (prop in parentConfig) {
                if (hasOwnProp(parentConfig, prop) &&
                        !hasOwnProp(childConfig, prop) &&
                        isObject(parentConfig[prop])) {
                    // make sure changes to properties don't modify parent config
                    res[prop] = extend({}, res[prop]);
                }
            }
            return res;
        }
    
        function Locale(config) {
            if (config != null) {
                this.set(config);
            }
        }
    
        var keys;
    
        if (Object.keys) {
            keys = Object.keys;
        } else {
            keys = function (obj) {
                var i, res = [];
                for (i in obj) {
                    if (hasOwnProp(obj, i)) {
                        res.push(i);
                    }
                }
                return res;
            };
        }
    
        var keys$1 = keys;
    
        var defaultCalendar = {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        };
    
        function calendar (key, mom, now) {
            var output = this._calendar[key] || this._calendar['sameElse'];
            return isFunction(output) ? output.call(mom, now) : output;
        }
    
        var defaultLongDateFormat = {
            LTS  : 'h:mm:ss A',
            LT   : 'h:mm A',
            L    : 'MM/DD/YYYY',
            LL   : 'MMMM D, YYYY',
            LLL  : 'MMMM D, YYYY h:mm A',
            LLLL : 'dddd, MMMM D, YYYY h:mm A'
        };
    
        function longDateFormat (key) {
            var format = this._longDateFormat[key],
                formatUpper = this._longDateFormat[key.toUpperCase()];
    
            if (format || !formatUpper) {
                return format;
            }
    
            this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
                return val.slice(1);
            });
    
            return this._longDateFormat[key];
        }
    
        var defaultInvalidDate = 'Invalid date';
    
        function invalidDate () {
            return this._invalidDate;
        }
    
        var defaultOrdinal = '%d';
        var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
    
        function ordinal (number) {
            return this._ordinal.replace('%d', number);
        }
    
        var defaultRelativeTime = {
            future : 'in %s',
            past   : '%s ago',
            s  : 'a few seconds',
            ss : '%d seconds',
            m  : 'a minute',
            mm : '%d minutes',
            h  : 'an hour',
            hh : '%d hours',
            d  : 'a day',
            dd : '%d days',
            M  : 'a month',
            MM : '%d months',
            y  : 'a year',
            yy : '%d years'
        };
    
        function relativeTime (number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string];
            return (isFunction(output)) ?
                output(number, withoutSuffix, string, isFuture) :
                output.replace(/%d/i, number);
        }
    
        function pastFuture (diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
            return isFunction(format) ? format(output) : format.replace(/%s/i, output);
        }
    
        var aliases = {};
    
        function addUnitAlias (unit, shorthand) {
            var lowerCase = unit.toLowerCase();
            aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
        }
    
        function normalizeUnits(units) {
            return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
        }
    
        function normalizeObjectUnits(inputObject) {
            var normalizedInput = {},
                normalizedProp,
                prop;
    
            for (prop in inputObject) {
                if (hasOwnProp(inputObject, prop)) {
                    normalizedProp = normalizeUnits(prop);
                    if (normalizedProp) {
                        normalizedInput[normalizedProp] = inputObject[prop];
                    }
                }
            }
    
            return normalizedInput;
        }
    
        var priorities = {};
    
        function addUnitPriority(unit, priority) {
            priorities[unit] = priority;
        }
    
        function getPrioritizedUnits(unitsObj) {
            var units = [];
            for (var u in unitsObj) {
                units.push({unit: u, priority: priorities[u]});
            }
            units.sort(function (a, b) {
                return a.priority - b.priority;
            });
            return units;
        }
    
        function makeGetSet (unit, keepTime) {
            return function (value) {
                if (value != null) {
                    set$1(this, unit, value);
                    hooks.updateOffset(this, keepTime);
                    return this;
                } else {
                    return get(this, unit);
                }
            };
        }
    
        function get (mom, unit) {
            return mom.isValid() ?
                mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
        }
    
        function set$1 (mom, unit, value) {
            if (mom.isValid()) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    
        // MOMENTS
    
        function stringGet (units) {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units]();
            }
            return this;
        }
    
    
        function stringSet (units, value) {
            if (typeof units === 'object') {
                units = normalizeObjectUnits(units);
                var prioritized = getPrioritizedUnits(units);
                for (var i = 0; i < prioritized.length; i++) {
                    this[prioritized[i].unit](units[prioritized[i].unit]);
                }
            } else {
                units = normalizeUnits(units);
                if (isFunction(this[units])) {
                    return this[units](value);
                }
            }
            return this;
        }
    
        function zeroFill(number, targetLength, forceSign) {
            var absNumber = '' + Math.abs(number),
                zerosToFill = targetLength - absNumber.length,
                sign = number >= 0;
            return (sign ? (forceSign ? '+' : '') : '-') +
                Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
        }
    
        var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
    
        var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
    
        var formatFunctions = {};
    
        var formatTokenFunctions = {};
    
        // token:    'M'
        // padded:   ['MM', 2]
        // ordinal:  'Mo'
        // callback: function () { this.month() + 1 }
        function addFormatToken (token, padded, ordinal, callback) {
            var func = callback;
            if (typeof callback === 'string') {
                func = function () {
                    return this[callback]();
                };
            }
            if (token) {
                formatTokenFunctions[token] = func;
            }
            if (padded) {
                formatTokenFunctions[padded[0]] = function () {
                    return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
                };
            }
            if (ordinal) {
                formatTokenFunctions[ordinal] = function () {
                    return this.localeData().ordinal(func.apply(this, arguments), token);
                };
            }
        }
    
        function removeFormattingTokens(input) {
            if (input.match(/\[[\s\S]/)) {
                return input.replace(/^\[|\]$/g, '');
            }
            return input.replace(/\\/g, '');
        }
    
        function makeFormatFunction(format) {
            var array = format.match(formattingTokens), i, length;
    
            for (i = 0, length = array.length; i < length; i++) {
                if (formatTokenFunctions[array[i]]) {
                    array[i] = formatTokenFunctions[array[i]];
                } else {
                    array[i] = removeFormattingTokens(array[i]);
                }
            }
    
            return function (mom) {
                var output = '', i;
                for (i = 0; i < length; i++) {
                    output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
                }
                return output;
            };
        }
    
        // format date using native date object
        function formatMoment(m, format) {
            if (!m.isValid()) {
                return m.localeData().invalidDate();
            }
    
            format = expandFormat(format, m.localeData());
            formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
    
            return formatFunctions[format](m);
        }
    
        function expandFormat(format, locale) {
            var i = 5;
    
            function replaceLongDateFormatTokens(input) {
                return locale.longDateFormat(input) || input;
            }
    
            localFormattingTokens.lastIndex = 0;
            while (i >= 0 && localFormattingTokens.test(format)) {
                format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
                localFormattingTokens.lastIndex = 0;
                i -= 1;
            }
    
            return format;
        }
    
        var match1         = /\d/;            //       0 - 9
        var match2         = /\d\d/;          //      00 - 99
        var match3         = /\d{3}/;         //     000 - 999
        var match4         = /\d{4}/;         //    0000 - 9999
        var match6         = /[+-]?\d{6}/;    // -999999 - 999999
        var match1to2      = /\d\d?/;         //       0 - 99
        var match3to4      = /\d\d\d\d?/;     //     999 - 9999
        var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
        var match1to3      = /\d{1,3}/;       //       0 - 999
        var match1to4      = /\d{1,4}/;       //       0 - 9999
        var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999
    
        var matchUnsigned  = /\d+/;           //       0 - inf
        var matchSigned    = /[+-]?\d+/;      //    -inf - inf
    
        var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
        var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z
    
        var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
    
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;
    
    
        var regexes = {};
    
        function addRegexToken (token, regex, strictRegex) {
            regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
                return (isStrict && strictRegex) ? strictRegex : regex;
            };
        }
    
        function getParseRegexForToken (token, config) {
            if (!hasOwnProp(regexes, token)) {
                return new RegExp(unescapeFormat(token));
            }
    
            return regexes[token](config._strict, config._locale);
        }
    
        // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
        function unescapeFormat(s) {
            return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
                return p1 || p2 || p3 || p4;
            }));
        }
    
        function regexEscape(s) {
            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
        }
    
        var tokens = {};
    
        function addParseToken (token, callback) {
            var i, func = callback;
            if (typeof token === 'string') {
                token = [token];
            }
            if (isNumber(callback)) {
                func = function (input, array) {
                    array[callback] = toInt(input);
                };
            }
            for (i = 0; i < token.length; i++) {
                tokens[token[i]] = func;
            }
        }
    
        function addWeekParseToken (token, callback) {
            addParseToken(token, function (input, array, config, token) {
                config._w = config._w || {};
                callback(input, config._w, config, token);
            });
        }
    
        function addTimeToArrayFromToken(token, input, config) {
            if (input != null && hasOwnProp(tokens, token)) {
                tokens[token](input, config._a, config, token);
            }
        }
    
        var YEAR = 0;
        var MONTH = 1;
        var DATE = 2;
        var HOUR = 3;
        var MINUTE = 4;
        var SECOND = 5;
        var MILLISECOND = 6;
        var WEEK = 7;
        var WEEKDAY = 8;
    
        var indexOf;
    
        if (Array.prototype.indexOf) {
            indexOf = Array.prototype.indexOf;
        } else {
            indexOf = function (o) {
                // I know
                var i;
                for (i = 0; i < this.length; ++i) {
                    if (this[i] === o) {
                        return i;
                    }
                }
                return -1;
            };
        }
    
        var indexOf$1 = indexOf;
    
        function daysInMonth(year, month) {
            return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
        }
    
        // FORMATTING
    
        addFormatToken('M', ['MM', 2], 'Mo', function () {
            return this.month() + 1;
        });
    
        addFormatToken('MMM', 0, 0, function (format) {
            return this.localeData().monthsShort(this, format);
        });
    
        addFormatToken('MMMM', 0, 0, function (format) {
            return this.localeData().months(this, format);
        });
    
        // ALIASES
    
        addUnitAlias('month', 'M');
    
        // PRIORITY
    
        addUnitPriority('month', 8);
    
        // PARSING
    
        addRegexToken('M',    match1to2);
        addRegexToken('MM',   match1to2, match2);
        addRegexToken('MMM',  function (isStrict, locale) {
            return locale.monthsShortRegex(isStrict);
        });
        addRegexToken('MMMM', function (isStrict, locale) {
            return locale.monthsRegex(isStrict);
        });
    
        addParseToken(['M', 'MM'], function (input, array) {
            array[MONTH] = toInt(input) - 1;
        });
    
        addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
            var month = config._locale.monthsParse(input, token, config._strict);
            // if we didn't find a month name, mark the date as invalid.
            if (month != null) {
                array[MONTH] = month;
            } else {
                getParsingFlags(config).invalidMonth = input;
            }
        });
    
        // LOCALES
    
        var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
        var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
        function localeMonths (m, format) {
            if (!m) {
                return isArray(this._months) ? this._months :
                    this._months['standalone'];
            }
            return isArray(this._months) ? this._months[m.month()] :
                this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
        }
    
        var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
        function localeMonthsShort (m, format) {
            if (!m) {
                return isArray(this._monthsShort) ? this._monthsShort :
                    this._monthsShort['standalone'];
            }
            return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
                this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
        }
    
        function handleStrictParse(monthName, format, strict) {
            var i, ii, mom, llc = monthName.toLocaleLowerCase();
            if (!this._monthsParse) {
                // this is not used
                this._monthsParse = [];
                this._longMonthsParse = [];
                this._shortMonthsParse = [];
                for (i = 0; i < 12; ++i) {
                    mom = createUTC([2000, i]);
                    this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                    this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
                }
            }
    
            if (strict) {
                if (format === 'MMM') {
                    ii = indexOf$1.call(this._shortMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                } else {
                    ii = indexOf$1.call(this._longMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                }
            } else {
                if (format === 'MMM') {
                    ii = indexOf$1.call(this._shortMonthsParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._longMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                } else {
                    ii = indexOf$1.call(this._longMonthsParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._shortMonthsParse, llc);
                    return ii !== -1 ? ii : null;
                }
            }
        }
    
        function localeMonthsParse (monthName, format, strict) {
            var i, mom, regex;
    
            if (this._monthsParseExact) {
                return handleStrictParse.call(this, monthName, format, strict);
            }
    
            if (!this._monthsParse) {
                this._monthsParse = [];
                this._longMonthsParse = [];
                this._shortMonthsParse = [];
            }
    
            // TODO: add sorting
            // Sorting makes sure if one month (or abbr) is a prefix of another
            // see sorting in computeMonthsParse
            for (i = 0; i < 12; i++) {
                // make the regex if we don't have it already
                mom = createUTC([2000, i]);
                if (strict && !this._longMonthsParse[i]) {
                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
                }
                if (!strict && !this._monthsParse[i]) {
                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                // test the regex
                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                    return i;
                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                    return i;
                } else if (!strict && this._monthsParse[i].test(monthName)) {
                    return i;
                }
            }
        }
    
        // MOMENTS
    
        function setMonth (mom, value) {
            var dayOfMonth;
    
            if (!mom.isValid()) {
                // No op
                return mom;
            }
    
            if (typeof value === 'string') {
                if (/^\d+$/.test(value)) {
                    value = toInt(value);
                } else {
                    value = mom.localeData().monthsParse(value);
                    // TODO: Another silent failure?
                    if (!isNumber(value)) {
                        return mom;
                    }
                }
            }
    
            dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
            return mom;
        }
    
        function getSetMonth (value) {
            if (value != null) {
                setMonth(this, value);
                hooks.updateOffset(this, true);
                return this;
            } else {
                return get(this, 'Month');
            }
        }
    
        function getDaysInMonth () {
            return daysInMonth(this.year(), this.month());
        }
    
        var defaultMonthsShortRegex = matchWord;
        function monthsShortRegex (isStrict) {
            if (this._monthsParseExact) {
                if (!hasOwnProp(this, '_monthsRegex')) {
                    computeMonthsParse.call(this);
                }
                if (isStrict) {
                    return this._monthsShortStrictRegex;
                } else {
                    return this._monthsShortRegex;
                }
            } else {
                if (!hasOwnProp(this, '_monthsShortRegex')) {
                    this._monthsShortRegex = defaultMonthsShortRegex;
                }
                return this._monthsShortStrictRegex && isStrict ?
                    this._monthsShortStrictRegex : this._monthsShortRegex;
            }
        }
    
        var defaultMonthsRegex = matchWord;
        function monthsRegex (isStrict) {
            if (this._monthsParseExact) {
                if (!hasOwnProp(this, '_monthsRegex')) {
                    computeMonthsParse.call(this);
                }
                if (isStrict) {
                    return this._monthsStrictRegex;
                } else {
                    return this._monthsRegex;
                }
            } else {
                if (!hasOwnProp(this, '_monthsRegex')) {
                    this._monthsRegex = defaultMonthsRegex;
                }
                return this._monthsStrictRegex && isStrict ?
                    this._monthsStrictRegex : this._monthsRegex;
            }
        }
    
        function computeMonthsParse () {
            function cmpLenRev(a, b) {
                return b.length - a.length;
            }
    
            var shortPieces = [], longPieces = [], mixedPieces = [],
                i, mom;
            for (i = 0; i < 12; i++) {
                // make the regex if we don't have it already
                mom = createUTC([2000, i]);
                shortPieces.push(this.monthsShort(mom, ''));
                longPieces.push(this.months(mom, ''));
                mixedPieces.push(this.months(mom, ''));
                mixedPieces.push(this.monthsShort(mom, ''));
            }
            // Sorting makes sure if one month (or abbr) is a prefix of another it
            // will match the longer piece.
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            for (i = 0; i < 12; i++) {
                shortPieces[i] = regexEscape(shortPieces[i]);
                longPieces[i] = regexEscape(longPieces[i]);
            }
            for (i = 0; i < 24; i++) {
                mixedPieces[i] = regexEscape(mixedPieces[i]);
            }
    
            this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._monthsShortRegex = this._monthsRegex;
            this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
            this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        }
    
        // FORMATTING
    
        addFormatToken('Y', 0, 0, function () {
            var y = this.year();
            return y <= 9999 ? '' + y : '+' + y;
        });
    
        addFormatToken(0, ['YY', 2], 0, function () {
            return this.year() % 100;
        });
    
        addFormatToken(0, ['YYYY',   4],       0, 'year');
        addFormatToken(0, ['YYYYY',  5],       0, 'year');
        addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
    
        // ALIASES
    
        addUnitAlias('year', 'y');
    
        // PRIORITIES
    
        addUnitPriority('year', 1);
    
        // PARSING
    
        addRegexToken('Y',      matchSigned);
        addRegexToken('YY',     match1to2, match2);
        addRegexToken('YYYY',   match1to4, match4);
        addRegexToken('YYYYY',  match1to6, match6);
        addRegexToken('YYYYYY', match1to6, match6);
    
        addParseToken(['YYYYY', 'YYYYYY'], YEAR);
        addParseToken('YYYY', function (input, array) {
            array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
        });
        addParseToken('YY', function (input, array) {
            array[YEAR] = hooks.parseTwoDigitYear(input);
        });
        addParseToken('Y', function (input, array) {
            array[YEAR] = parseInt(input, 10);
        });
    
        // HELPERS
    
        function daysInYear(year) {
            return isLeapYear(year) ? 366 : 365;
        }
    
        function isLeapYear(year) {
            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
        }
    
        // HOOKS
    
        hooks.parseTwoDigitYear = function (input) {
            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
        };
    
        // MOMENTS
    
        var getSetYear = makeGetSet('FullYear', true);
    
        function getIsLeapYear () {
            return isLeapYear(this.year());
        }
    
        function createDate (y, m, d, h, M, s, ms) {
            // can't just apply() to create a date:
            // https://stackoverflow.com/q/181348
            var date = new Date(y, m, d, h, M, s, ms);
    
            // the date constructor remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
            return date;
        }
    
        function createUTCDate (y) {
            var date = new Date(Date.UTC.apply(null, arguments));
    
            // the Date.UTC function remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
            return date;
        }
    
        // start-of-first-week - start-of-year
        function firstWeekOffset(year, dow, doy) {
            var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
                fwd = 7 + dow - doy,
                // first-week day local weekday -- which local weekday is fwd
                fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
    
            return -fwdlw + fwd - 1;
        }
    
        // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
        function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
            var localWeekday = (7 + weekday - dow) % 7,
                weekOffset = firstWeekOffset(year, dow, doy),
                dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
                resYear, resDayOfYear;
    
            if (dayOfYear <= 0) {
                resYear = year - 1;
                resDayOfYear = daysInYear(resYear) + dayOfYear;
            } else if (dayOfYear > daysInYear(year)) {
                resYear = year + 1;
                resDayOfYear = dayOfYear - daysInYear(year);
            } else {
                resYear = year;
                resDayOfYear = dayOfYear;
            }
    
            return {
                year: resYear,
                dayOfYear: resDayOfYear
            };
        }
    
        function weekOfYear(mom, dow, doy) {
            var weekOffset = firstWeekOffset(mom.year(), dow, doy),
                week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
                resWeek, resYear;
    
            if (week < 1) {
                resYear = mom.year() - 1;
                resWeek = week + weeksInYear(resYear, dow, doy);
            } else if (week > weeksInYear(mom.year(), dow, doy)) {
                resWeek = week - weeksInYear(mom.year(), dow, doy);
                resYear = mom.year() + 1;
            } else {
                resYear = mom.year();
                resWeek = week;
            }
    
            return {
                week: resWeek,
                year: resYear
            };
        }
    
        function weeksInYear(year, dow, doy) {
            var weekOffset = firstWeekOffset(year, dow, doy),
                weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
        }
    
        // FORMATTING
    
        addFormatToken('w', ['ww', 2], 'wo', 'week');
        addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
    
        // ALIASES
    
        addUnitAlias('week', 'w');
        addUnitAlias('isoWeek', 'W');
    
        // PRIORITIES
    
        addUnitPriority('week', 5);
        addUnitPriority('isoWeek', 5);
    
        // PARSING
    
        addRegexToken('w',  match1to2);
        addRegexToken('ww', match1to2, match2);
        addRegexToken('W',  match1to2);
        addRegexToken('WW', match1to2, match2);
    
        addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
            week[token.substr(0, 1)] = toInt(input);
        });
    
        // HELPERS
    
        // LOCALES
    
        function localeWeek (mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week;
        }
    
        var defaultLocaleWeek = {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        };
    
        function localeFirstDayOfWeek () {
            return this._week.dow;
        }
    
        function localeFirstDayOfYear () {
            return this._week.doy;
        }
    
        // MOMENTS
    
        function getSetWeek (input) {
            var week = this.localeData().week(this);
            return input == null ? week : this.add((input - week) * 7, 'd');
        }
    
        function getSetISOWeek (input) {
            var week = weekOfYear(this, 1, 4).week;
            return input == null ? week : this.add((input - week) * 7, 'd');
        }
    
        // FORMATTING
    
        addFormatToken('d', 0, 'do', 'day');
    
        addFormatToken('dd', 0, 0, function (format) {
            return this.localeData().weekdaysMin(this, format);
        });
    
        addFormatToken('ddd', 0, 0, function (format) {
            return this.localeData().weekdaysShort(this, format);
        });
    
        addFormatToken('dddd', 0, 0, function (format) {
            return this.localeData().weekdays(this, format);
        });
    
        addFormatToken('e', 0, 0, 'weekday');
        addFormatToken('E', 0, 0, 'isoWeekday');
    
        // ALIASES
    
        addUnitAlias('day', 'd');
        addUnitAlias('weekday', 'e');
        addUnitAlias('isoWeekday', 'E');
    
        // PRIORITY
        addUnitPriority('day', 11);
        addUnitPriority('weekday', 11);
        addUnitPriority('isoWeekday', 11);
    
        // PARSING
    
        addRegexToken('d',    match1to2);
        addRegexToken('e',    match1to2);
        addRegexToken('E',    match1to2);
        addRegexToken('dd',   function (isStrict, locale) {
            return locale.weekdaysMinRegex(isStrict);
        });
        addRegexToken('ddd',   function (isStrict, locale) {
            return locale.weekdaysShortRegex(isStrict);
        });
        addRegexToken('dddd',   function (isStrict, locale) {
            return locale.weekdaysRegex(isStrict);
        });
    
        addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
            var weekday = config._locale.weekdaysParse(input, token, config._strict);
            // if we didn't get a weekday name, mark the date as invalid
            if (weekday != null) {
                week.d = weekday;
            } else {
                getParsingFlags(config).invalidWeekday = input;
            }
        });
    
        addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
            week[token] = toInt(input);
        });
    
        // HELPERS
    
        function parseWeekday(input, locale) {
            if (typeof input !== 'string') {
                return input;
            }
    
            if (!isNaN(input)) {
                return parseInt(input, 10);
            }
    
            input = locale.weekdaysParse(input);
            if (typeof input === 'number') {
                return input;
            }
    
            return null;
        }
    
        function parseIsoWeekday(input, locale) {
            if (typeof input === 'string') {
                return locale.weekdaysParse(input) % 7 || 7;
            }
            return isNaN(input) ? null : input;
        }
    
        // LOCALES
    
        var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
        function localeWeekdays (m, format) {
            if (!m) {
                return isArray(this._weekdays) ? this._weekdays :
                    this._weekdays['standalone'];
            }
            return isArray(this._weekdays) ? this._weekdays[m.day()] :
                this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
        }
    
        var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
        function localeWeekdaysShort (m) {
            return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
        }
    
        var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
        function localeWeekdaysMin (m) {
            return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
        }
    
        function handleStrictParse$1(weekdayName, format, strict) {
            var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
            if (!this._weekdaysParse) {
                this._weekdaysParse = [];
                this._shortWeekdaysParse = [];
                this._minWeekdaysParse = [];
    
                for (i = 0; i < 7; ++i) {
                    mom = createUTC([2000, 1]).day(i);
                    this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                    this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                    this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
                }
            }
    
            if (strict) {
                if (format === 'dddd') {
                    ii = indexOf$1.call(this._weekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                } else if (format === 'ddd') {
                    ii = indexOf$1.call(this._shortWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                } else {
                    ii = indexOf$1.call(this._minWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
            } else {
                if (format === 'dddd') {
                    ii = indexOf$1.call(this._weekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._shortWeekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._minWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                } else if (format === 'ddd') {
                    ii = indexOf$1.call(this._shortWeekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._weekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._minWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                } else {
                    ii = indexOf$1.call(this._minWeekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._weekdaysParse, llc);
                    if (ii !== -1) {
                        return ii;
                    }
                    ii = indexOf$1.call(this._shortWeekdaysParse, llc);
                    return ii !== -1 ? ii : null;
                }
            }
        }
    
        function localeWeekdaysParse (weekdayName, format, strict) {
            var i, mom, regex;
    
            if (this._weekdaysParseExact) {
                return handleStrictParse$1.call(this, weekdayName, format, strict);
            }
    
            if (!this._weekdaysParse) {
                this._weekdaysParse = [];
                this._minWeekdaysParse = [];
                this._shortWeekdaysParse = [];
                this._fullWeekdaysParse = [];
            }
    
            for (i = 0; i < 7; i++) {
                // make the regex if we don't have it already
    
                mom = createUTC([2000, 1]).day(i);
                if (strict && !this._fullWeekdaysParse[i]) {
                    this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
                    this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
                    this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
                }
                if (!this._weekdaysParse[i]) {
                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                // test the regex
                if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                    return i;
                } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                    return i;
                } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                    return i;
                } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                    return i;
                }
            }
        }
    
        // MOMENTS
    
        function getSetDayOfWeek (input) {
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            if (input != null) {
                input = parseWeekday(input, this.localeData());
                return this.add(input - day, 'd');
            } else {
                return day;
            }
        }
    
        function getSetLocaleDayOfWeek (input) {
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return input == null ? weekday : this.add(input - weekday, 'd');
        }
    
        function getSetISODayOfWeek (input) {
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
    
            // behaves the same as moment#day except
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
            // as a setter, sunday should belong to the previous week.
    
            if (input != null) {
                var weekday = parseIsoWeekday(input, this.localeData());
                return this.day(this.day() % 7 ? weekday : weekday - 7);
            } else {
                return this.day() || 7;
            }
        }
    
        var defaultWeekdaysRegex = matchWord;
        function weekdaysRegex (isStrict) {
            if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                    return this._weekdaysStrictRegex;
                } else {
                    return this._weekdaysRegex;
                }
            } else {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    this._weekdaysRegex = defaultWeekdaysRegex;
                }
                return this._weekdaysStrictRegex && isStrict ?
                    this._weekdaysStrictRegex : this._weekdaysRegex;
            }
        }
    
        var defaultWeekdaysShortRegex = matchWord;
        function weekdaysShortRegex (isStrict) {
            if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                    return this._weekdaysShortStrictRegex;
                } else {
                    return this._weekdaysShortRegex;
                }
            } else {
                if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                    this._weekdaysShortRegex = defaultWeekdaysShortRegex;
                }
                return this._weekdaysShortStrictRegex && isStrict ?
                    this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
            }
        }
    
        var defaultWeekdaysMinRegex = matchWord;
        function weekdaysMinRegex (isStrict) {
            if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                    computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                    return this._weekdaysMinStrictRegex;
                } else {
                    return this._weekdaysMinRegex;
                }
            } else {
                if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                    this._weekdaysMinRegex = defaultWeekdaysMinRegex;
                }
                return this._weekdaysMinStrictRegex && isStrict ?
                    this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
            }
        }
    
    
        function computeWeekdaysParse () {
            function cmpLenRev(a, b) {
                return b.length - a.length;
            }
    
            var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
                i, mom, minp, shortp, longp;
            for (i = 0; i < 7; i++) {
                // make the regex if we don't have it already
                mom = createUTC([2000, 1]).day(i);
                minp = this.weekdaysMin(mom, '');
                shortp = this.weekdaysShort(mom, '');
                longp = this.weekdays(mom, '');
                minPieces.push(minp);
                shortPieces.push(shortp);
                longPieces.push(longp);
                mixedPieces.push(minp);
                mixedPieces.push(shortp);
                mixedPieces.push(longp);
            }
            // Sorting makes sure if one weekday (or abbr) is a prefix of another it
            // will match the longer piece.
            minPieces.sort(cmpLenRev);
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            for (i = 0; i < 7; i++) {
                shortPieces[i] = regexEscape(shortPieces[i]);
                longPieces[i] = regexEscape(longPieces[i]);
                mixedPieces[i] = regexEscape(mixedPieces[i]);
            }
    
            this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._weekdaysShortRegex = this._weekdaysRegex;
            this._weekdaysMinRegex = this._weekdaysRegex;
    
            this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
            this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
            this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
        }
    
        // FORMATTING
    
        function hFormat() {
            return this.hours() % 12 || 12;
        }
    
        function kFormat() {
            return this.hours() || 24;
        }
    
        addFormatToken('H', ['HH', 2], 0, 'hour');
        addFormatToken('h', ['hh', 2], 0, hFormat);
        addFormatToken('k', ['kk', 2], 0, kFormat);
    
        addFormatToken('hmm', 0, 0, function () {
            return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
        });
    
        addFormatToken('hmmss', 0, 0, function () {
            return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
                zeroFill(this.seconds(), 2);
        });
    
        addFormatToken('Hmm', 0, 0, function () {
            return '' + this.hours() + zeroFill(this.minutes(), 2);
        });
    
        addFormatToken('Hmmss', 0, 0, function () {
            return '' + this.hours() + zeroFill(this.minutes(), 2) +
                zeroFill(this.seconds(), 2);
        });
    
        function meridiem (token, lowercase) {
            addFormatToken(token, 0, 0, function () {
                return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
            });
        }
    
        meridiem('a', true);
        meridiem('A', false);
    
        // ALIASES
    
        addUnitAlias('hour', 'h');
    
        // PRIORITY
        addUnitPriority('hour', 13);
    
        // PARSING
    
        function matchMeridiem (isStrict, locale) {
            return locale._meridiemParse;
        }
    
        addRegexToken('a',  matchMeridiem);
        addRegexToken('A',  matchMeridiem);
        addRegexToken('H',  match1to2);
        addRegexToken('h',  match1to2);
        addRegexToken('k',  match1to2);
        addRegexToken('HH', match1to2, match2);
        addRegexToken('hh', match1to2, match2);
        addRegexToken('kk', match1to2, match2);
    
        addRegexToken('hmm', match3to4);
        addRegexToken('hmmss', match5to6);
        addRegexToken('Hmm', match3to4);
        addRegexToken('Hmmss', match5to6);
    
        addParseToken(['H', 'HH'], HOUR);
        addParseToken(['k', 'kk'], function (input, array, config) {
            var kInput = toInt(input);
            array[HOUR] = kInput === 24 ? 0 : kInput;
        });
        addParseToken(['a', 'A'], function (input, array, config) {
            config._isPm = config._locale.isPM(input);
            config._meridiem = input;
        });
        addParseToken(['h', 'hh'], function (input, array, config) {
            array[HOUR] = toInt(input);
            getParsingFlags(config).bigHour = true;
        });
        addParseToken('hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
            getParsingFlags(config).bigHour = true;
        });
        addParseToken('hmmss', function (input, array, config) {
            var pos1 = input.length - 4;
            var pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
            getParsingFlags(config).bigHour = true;
        });
        addParseToken('Hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
        });
        addParseToken('Hmmss', function (input, array, config) {
            var pos1 = input.length - 4;
            var pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
        });
    
        // LOCALES
    
        function localeIsPM (input) {
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
            // Using charAt should be more compatible.
            return ((input + '').toLowerCase().charAt(0) === 'p');
        }
    
        var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
        function localeMeridiem (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'pm' : 'PM';
            } else {
                return isLower ? 'am' : 'AM';
            }
        }
    
    
        // MOMENTS
    
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour he wants. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        var getSetHour = makeGetSet('Hours', true);
    
        // months
        // week
        // weekdays
        // meridiem
        var baseConfig = {
            calendar: defaultCalendar,
            longDateFormat: defaultLongDateFormat,
            invalidDate: defaultInvalidDate,
            ordinal: defaultOrdinal,
            dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
            relativeTime: defaultRelativeTime,
    
            months: defaultLocaleMonths,
            monthsShort: defaultLocaleMonthsShort,
    
            week: defaultLocaleWeek,
    
            weekdays: defaultLocaleWeekdays,
            weekdaysMin: defaultLocaleWeekdaysMin,
            weekdaysShort: defaultLocaleWeekdaysShort,
    
            meridiemParse: defaultLocaleMeridiemParse
        };
    
        // internal storage for locale config files
        var locales = {};
        var localeFamilies = {};
        var globalLocale;
    
        function normalizeLocale(key) {
            return key ? key.toLowerCase().replace('_', '-') : key;
        }
    
        // pick the locale from the array
        // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
        // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
        function chooseLocale(names) {
            var i = 0, j, next, locale, split;
    
            while (i < names.length) {
                split = normalizeLocale(names[i]).split('-');
                j = split.length;
                next = normalizeLocale(names[i + 1]);
                next = next ? next.split('-') : null;
                while (j > 0) {
                    locale = loadLocale(split.slice(0, j).join('-'));
                    if (locale) {
                        return locale;
                    }
                    if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                        //the next array item is better than a shallower substring of this one
                        break;
                    }
                    j--;
                }
                i++;
            }
            return null;
        }
    
        function loadLocale(name) {
            var oldLocale = null;
            // TODO: Find a better way to register and load all the locales in Node
            if (!locales[name] && (typeof module !== 'undefined') &&
                    module && module.exports) {
                try {
                    oldLocale = globalLocale._abbr;
                    __webpack_require__(5)("./" + name);
                    // because defineLocale currently also sets the global locale, we
                    // want to undo that for lazy loaded locales
                    getSetGlobalLocale(oldLocale);
                } catch (e) { }
            }
            return locales[name];
        }
    
        // This function will load locale and then set the global locale.  If
        // no arguments are passed in, it will simply return the current global
        // locale key.
        function getSetGlobalLocale (key, values) {
            var data;
            if (key) {
                if (isUndefined(values)) {
                    data = getLocale(key);
                }
                else {
                    data = defineLocale(key, values);
                }
    
                if (data) {
                    // moment.duration._locale = moment._locale = data;
                    globalLocale = data;
                }
            }
    
            return globalLocale._abbr;
        }
    
        function defineLocale (name, config) {
            if (config !== null) {
                var parentConfig = baseConfig;
                config.abbr = name;
                if (locales[name] != null) {
                    deprecateSimple('defineLocaleOverride',
                            'use moment.updateLocale(localeName, config) to change ' +
                            'an existing locale. moment.defineLocale(localeName, ' +
                            'config) should only be used for creating a new locale ' +
                            'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                    parentConfig = locales[name]._config;
                } else if (config.parentLocale != null) {
                    if (locales[config.parentLocale] != null) {
                        parentConfig = locales[config.parentLocale]._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
                locales[name] = new Locale(mergeConfigs(parentConfig, config));
    
                if (localeFamilies[name]) {
                    localeFamilies[name].forEach(function (x) {
                        defineLocale(x.name, x.config);
                    });
                }
    
                // backwards compat for now: also set the locale
                // make sure we set the locale AFTER all child locales have been
                // created, so we won't end up with the child locale set.
                getSetGlobalLocale(name);
    
    
                return locales[name];
            } else {
                // useful for testing
                delete locales[name];
                return null;
            }
        }
    
        function updateLocale(name, config) {
            if (config != null) {
                var locale, parentConfig = baseConfig;
                // MERGE
                if (locales[name] != null) {
                    parentConfig = locales[name]._config;
                }
                config = mergeConfigs(parentConfig, config);
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
    
                // backwards compat for now: also set the locale
                getSetGlobalLocale(name);
            } else {
                // pass null for config to unupdate, useful for tests
                if (locales[name] != null) {
                    if (locales[name].parentLocale != null) {
                        locales[name] = locales[name].parentLocale;
                    } else if (locales[name] != null) {
                        delete locales[name];
                    }
                }
            }
            return locales[name];
        }
    
        // returns locale data
        function getLocale (key) {
            var locale;
    
            if (key && key._locale && key._locale._abbr) {
                key = key._locale._abbr;
            }
    
            if (!key) {
                return globalLocale;
            }
    
            if (!isArray(key)) {
                //short-circuit everything else
                locale = loadLocale(key);
                if (locale) {
                    return locale;
                }
                key = [key];
            }
    
            return chooseLocale(key);
        }
    
        function listLocales() {
            return keys$1(locales);
        }
    
        function checkOverflow (m) {
            var overflow;
            var a = m._a;
    
            if (a && getParsingFlags(m).overflow === -2) {
                overflow =
                    a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                    a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                    a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                    a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                    a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                    a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                    -1;
    
                if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                    overflow = DATE;
                }
                if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                    overflow = WEEK;
                }
                if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                    overflow = WEEKDAY;
                }
    
                getParsingFlags(m).overflow = overflow;
            }
    
            return m;
        }
    
        // iso 8601 regex
        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
        var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
        var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    
        var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
    
        var isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            // YYYYMM is NOT allowed by the standard
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/]
        ];
    
        // iso time formats and regexes
        var isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/]
        ];
    
        var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
    
        // date from iso format
        function configFromISO(config) {
            var i, l,
                string = config._i,
                match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
                allowTime, dateFormat, timeFormat, tzFormat;
    
            if (match) {
                getParsingFlags(config).iso = true;
    
                for (i = 0, l = isoDates.length; i < l; i++) {
                    if (isoDates[i][1].exec(match[1])) {
                        dateFormat = isoDates[i][0];
                        allowTime = isoDates[i][2] !== false;
                        break;
                    }
                }
                if (dateFormat == null) {
                    config._isValid = false;
                    return;
                }
                if (match[3]) {
                    for (i = 0, l = isoTimes.length; i < l; i++) {
                        if (isoTimes[i][1].exec(match[3])) {
                            // match[2] should be 'T' or space
                            timeFormat = (match[2] || ' ') + isoTimes[i][0];
                            break;
                        }
                    }
                    if (timeFormat == null) {
                        config._isValid = false;
                        return;
                    }
                }
                if (!allowTime && timeFormat != null) {
                    config._isValid = false;
                    return;
                }
                if (match[4]) {
                    if (tzRegex.exec(match[4])) {
                        tzFormat = 'Z';
                    } else {
                        config._isValid = false;
                        return;
                    }
                }
                config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
                configFromStringAndFormat(config);
            } else {
                config._isValid = false;
            }
        }
    
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        var basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d?\d\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(?:\d\d)?\d\d\s)(\d\d:\d\d)(\:\d\d)?(\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\d{4}))$/;
    
        // date and time from ref 2822 format
        function configFromRFC2822(config) {
            var string, match, dayFormat,
                dateFormat, timeFormat, tzFormat;
            var timezones = {
                ' GMT': ' +0000',
                ' EDT': ' -0400',
                ' EST': ' -0500',
                ' CDT': ' -0500',
                ' CST': ' -0600',
                ' MDT': ' -0600',
                ' MST': ' -0700',
                ' PDT': ' -0700',
                ' PST': ' -0800'
            };
            var military = 'YXWVUTSRQPONZABCDEFGHIKLM';
            var timezone, timezoneIndex;
    
            string = config._i
                .replace(/\([^\)]*\)|[\n\t]/g, ' ') // Remove comments and folding whitespace
                .replace(/(\s\s+)/g, ' ') // Replace multiple-spaces with a single space
                .replace(/^\s|\s$/g, ''); // Remove leading and trailing spaces
            match = basicRfcRegex.exec(string);
    
            if (match) {
                dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';
                dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');
                timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');
    
                // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
                if (match[1]) { // day of week given
                    var momentDate = new Date(match[2]);
                    var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];
    
                    if (match[1].substr(0,3) !== momentDay) {
                        getParsingFlags(config).weekdayMismatch = true;
                        config._isValid = false;
                        return;
                    }
                }
    
                switch (match[5].length) {
                    case 2: // military
                        if (timezoneIndex === 0) {
                            timezone = ' +0000';
                        } else {
                            timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;
                            timezone = ((timezoneIndex < 0) ? ' -' : ' +') +
                                (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';
                        }
                        break;
                    case 4: // Zone
                        timezone = timezones[match[5]];
                        break;
                    default: // UT or +/-9999
                        timezone = timezones[' GMT'];
                }
                match[5] = timezone;
                config._i = match.splice(1).join('');
                tzFormat = ' ZZ';
                config._f = dayFormat + dateFormat + timeFormat + tzFormat;
                configFromStringAndFormat(config);
                getParsingFlags(config).rfc2822 = true;
            } else {
                config._isValid = false;
            }
        }
    
        // date from iso format or fallback
        function configFromString(config) {
            var matched = aspNetJsonRegex.exec(config._i);
    
            if (matched !== null) {
                config._d = new Date(+matched[1]);
                return;
            }
    
            configFromISO(config);
            if (config._isValid === false) {
                delete config._isValid;
            } else {
                return;
            }
    
            configFromRFC2822(config);
            if (config._isValid === false) {
                delete config._isValid;
            } else {
                return;
            }
    
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    
        hooks.createFromInputFallback = deprecate(
            'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged and will be removed in an upcoming major release. Please refer to ' +
            'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
            function (config) {
                config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
            }
        );
    
        // Pick the first defined of two or three arguments.
        function defaults(a, b, c) {
            if (a != null) {
                return a;
            }
            if (b != null) {
                return b;
            }
            return c;
        }
    
        function currentDateArray(config) {
            // hooks is actually the exported moment object
            var nowValue = new Date(hooks.now());
            if (config._useUTC) {
                return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
            }
            return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
        }
    
        // convert an array to a date.
        // the array should mirror the parameters below
        // note: all values past the year are optional and will default to the lowest possible value.
        // [year, month, day , hour, minute, second, millisecond]
        function configFromArray (config) {
            var i, date, input = [], currentDate, yearToUse;
    
            if (config._d) {
                return;
            }
    
            currentDate = currentDateArray(config);
    
            //compute day of the year from weeks and weekdays
            if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
                dayOfYearFromWeekInfo(config);
            }
    
            //if the day of the year is set, figure out what it is
            if (config._dayOfYear != null) {
                yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
    
                if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                    getParsingFlags(config)._overflowDayOfYear = true;
                }
    
                date = createUTCDate(yearToUse, 0, config._dayOfYear);
                config._a[MONTH] = date.getUTCMonth();
                config._a[DATE] = date.getUTCDate();
            }
    
            // Default to current date.
            // * if no year, month, day of month are given, default to today
            // * if day of month is given, default month and year
            // * if month is given, default only year
            // * if year is given, don't default anything
            for (i = 0; i < 3 && config._a[i] == null; ++i) {
                config._a[i] = input[i] = currentDate[i];
            }
    
            // Zero out whatever was not defaulted, including time
            for (; i < 7; i++) {
                config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
            }
    
            // Check for 24:00:00.000
            if (config._a[HOUR] === 24 &&
                    config._a[MINUTE] === 0 &&
                    config._a[SECOND] === 0 &&
                    config._a[MILLISECOND] === 0) {
                config._nextDay = true;
                config._a[HOUR] = 0;
            }
    
            config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
            // Apply timezone offset from input. The actual utcOffset can be changed
            // with parseZone.
            if (config._tzm != null) {
                config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
            }
    
            if (config._nextDay) {
                config._a[HOUR] = 24;
            }
        }
    
        function dayOfYearFromWeekInfo(config) {
            var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
    
            w = config._w;
            if (w.GG != null || w.W != null || w.E != null) {
                dow = 1;
                doy = 4;
    
                // TODO: We need to take the current isoWeekYear, but that depends on
                // how we interpret now (local, utc, fixed offset). So create
                // a now version of current config (take local/utc/offset flags, and
                // create now).
                weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
                week = defaults(w.W, 1);
                weekday = defaults(w.E, 1);
                if (weekday < 1 || weekday > 7) {
                    weekdayOverflow = true;
                }
            } else {
                dow = config._locale._week.dow;
                doy = config._locale._week.doy;
    
                var curWeek = weekOfYear(createLocal(), dow, doy);
    
                weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
    
                // Default to current week.
                week = defaults(w.w, curWeek.week);
    
                if (w.d != null) {
                    // weekday -- low day numbers are considered next week
                    weekday = w.d;
                    if (weekday < 0 || weekday > 6) {
                        weekdayOverflow = true;
                    }
                } else if (w.e != null) {
                    // local weekday -- counting starts from begining of week
                    weekday = w.e + dow;
                    if (w.e < 0 || w.e > 6) {
                        weekdayOverflow = true;
                    }
                } else {
                    // default to begining of week
                    weekday = dow;
                }
            }
            if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
                getParsingFlags(config)._overflowWeeks = true;
            } else if (weekdayOverflow != null) {
                getParsingFlags(config)._overflowWeekday = true;
            } else {
                temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
                config._a[YEAR] = temp.year;
                config._dayOfYear = temp.dayOfYear;
            }
        }
    
        // constant that refers to the ISO standard
        hooks.ISO_8601 = function () {};
    
        // constant that refers to the RFC 2822 form
        hooks.RFC_2822 = function () {};
    
        // date from string and format string
        function configFromStringAndFormat(config) {
            // TODO: Move this to another part of the creation flow to prevent circular deps
            if (config._f === hooks.ISO_8601) {
                configFromISO(config);
                return;
            }
            if (config._f === hooks.RFC_2822) {
                configFromRFC2822(config);
                return;
            }
            config._a = [];
            getParsingFlags(config).empty = true;
    
            // This array is used to make a Date, either with `new Date` or `Date.UTC`
            var string = '' + config._i,
                i, parsedInput, tokens, token, skipped,
                stringLength = string.length,
                totalParsedInputLength = 0;
    
            tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
    
            for (i = 0; i < tokens.length; i++) {
                token = tokens[i];
                parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
                // console.log('token', token, 'parsedInput', parsedInput,
                //         'regex', getParseRegexForToken(token, config));
                if (parsedInput) {
                    skipped = string.substr(0, string.indexOf(parsedInput));
                    if (skipped.length > 0) {
                        getParsingFlags(config).unusedInput.push(skipped);
                    }
                    string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                    totalParsedInputLength += parsedInput.length;
                }
                // don't parse if it's not a known token
                if (formatTokenFunctions[token]) {
                    if (parsedInput) {
                        getParsingFlags(config).empty = false;
                    }
                    else {
                        getParsingFlags(config).unusedTokens.push(token);
                    }
                    addTimeToArrayFromToken(token, parsedInput, config);
                }
                else if (config._strict && !parsedInput) {
                    getParsingFlags(config).unusedTokens.push(token);
                }
            }
    
            // add remaining unparsed input length to the string
            getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
            if (string.length > 0) {
                getParsingFlags(config).unusedInput.push(string);
            }
    
            // clear _12h flag if hour is <= 12
            if (config._a[HOUR] <= 12 &&
                getParsingFlags(config).bigHour === true &&
                config._a[HOUR] > 0) {
                getParsingFlags(config).bigHour = undefined;
            }
    
            getParsingFlags(config).parsedDateParts = config._a.slice(0);
            getParsingFlags(config).meridiem = config._meridiem;
            // handle meridiem
            config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
    
            configFromArray(config);
            checkOverflow(config);
        }
    
    
        function meridiemFixWrap (locale, hour, meridiem) {
            var isPm;
    
            if (meridiem == null) {
                // nothing to do
                return hour;
            }
            if (locale.meridiemHour != null) {
                return locale.meridiemHour(hour, meridiem);
            } else if (locale.isPM != null) {
                // Fallback
                isPm = locale.isPM(meridiem);
                if (isPm && hour < 12) {
                    hour += 12;
                }
                if (!isPm && hour === 12) {
                    hour = 0;
                }
                return hour;
            } else {
                // this is not supposed to happen
                return hour;
            }
        }
    
        // date from string and array of format strings
        function configFromStringAndArray(config) {
            var tempConfig,
                bestMoment,
    
                scoreToBeat,
                i,
                currentScore;
    
            if (config._f.length === 0) {
                getParsingFlags(config).invalidFormat = true;
                config._d = new Date(NaN);
                return;
            }
    
            for (i = 0; i < config._f.length; i++) {
                currentScore = 0;
                tempConfig = copyConfig({}, config);
                if (config._useUTC != null) {
                    tempConfig._useUTC = config._useUTC;
                }
                tempConfig._f = config._f[i];
                configFromStringAndFormat(tempConfig);
    
                if (!isValid(tempConfig)) {
                    continue;
                }
    
                // if there is any input that was not parsed add a penalty for that format
                currentScore += getParsingFlags(tempConfig).charsLeftOver;
    
                //or tokens
                currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
    
                getParsingFlags(tempConfig).score = currentScore;
    
                if (scoreToBeat == null || currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
    
            extend(config, bestMoment || tempConfig);
        }
    
        function configFromObject(config) {
            if (config._d) {
                return;
            }
    
            var i = normalizeObjectUnits(config._i);
            config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
                return obj && parseInt(obj, 10);
            });
    
            configFromArray(config);
        }
    
        function createFromConfig (config) {
            var res = new Moment(checkOverflow(prepareConfig(config)));
            if (res._nextDay) {
                // Adding is smart enough around DST
                res.add(1, 'd');
                res._nextDay = undefined;
            }
    
            return res;
        }
    
        function prepareConfig (config) {
            var input = config._i,
                format = config._f;
    
            config._locale = config._locale || getLocale(config._l);
    
            if (input === null || (format === undefined && input === '')) {
                return createInvalid({nullInput: true});
            }
    
            if (typeof input === 'string') {
                config._i = input = config._locale.preparse(input);
            }
    
            if (isMoment(input)) {
                return new Moment(checkOverflow(input));
            } else if (isDate(input)) {
                config._d = input;
            } else if (isArray(format)) {
                configFromStringAndArray(config);
            } else if (format) {
                configFromStringAndFormat(config);
            }  else {
                configFromInput(config);
            }
    
            if (!isValid(config)) {
                config._d = null;
            }
    
            return config;
        }
    
        function configFromInput(config) {
            var input = config._i;
            if (isUndefined(input)) {
                config._d = new Date(hooks.now());
            } else if (isDate(input)) {
                config._d = new Date(input.valueOf());
            } else if (typeof input === 'string') {
                configFromString(config);
            } else if (isArray(input)) {
                config._a = map(input.slice(0), function (obj) {
                    return parseInt(obj, 10);
                });
                configFromArray(config);
            } else if (isObject(input)) {
                configFromObject(config);
            } else if (isNumber(input)) {
                // from milliseconds
                config._d = new Date(input);
            } else {
                hooks.createFromInputFallback(config);
            }
        }
    
        function createLocalOrUTC (input, format, locale, strict, isUTC) {
            var c = {};
    
            if (locale === true || locale === false) {
                strict = locale;
                locale = undefined;
            }
    
            if ((isObject(input) && isObjectEmpty(input)) ||
                    (isArray(input) && input.length === 0)) {
                input = undefined;
            }
            // object construction must be done this way.
            // https://github.com/moment/moment/issues/1423
            c._isAMomentObject = true;
            c._useUTC = c._isUTC = isUTC;
            c._l = locale;
            c._i = input;
            c._f = format;
            c._strict = strict;
    
            return createFromConfig(c);
        }
    
        function createLocal (input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, false);
        }
    
        var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );
    
        var prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );
    
        // Pick a moment m from moments so that m[fn](other) is true for all
        // other. This relies on the function fn to be transitive.
        //
        // moments should either be an array of moment objects or an array, whose
        // first element is an array of moment objects.
        function pickBy(fn, moments) {
            var res, i;
            if (moments.length === 1 && isArray(moments[0])) {
                moments = moments[0];
            }
            if (!moments.length) {
                return createLocal();
            }
            res = moments[0];
            for (i = 1; i < moments.length; ++i) {
                if (!moments[i].isValid() || moments[i][fn](res)) {
                    res = moments[i];
                }
            }
            return res;
        }
    
        // TODO: Use [].sort instead?
        function min () {
            var args = [].slice.call(arguments, 0);
    
            return pickBy('isBefore', args);
        }
    
        function max () {
            var args = [].slice.call(arguments, 0);
    
            return pickBy('isAfter', args);
        }
    
        var now = function () {
            return Date.now ? Date.now() : +(new Date());
        };
    
        var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];
    
        function isDurationValid(m) {
            for (var key in m) {
                if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                    return false;
                }
            }
    
            var unitHasDecimal = false;
            for (var i = 0; i < ordering.length; ++i) {
                if (m[ordering[i]]) {
                    if (unitHasDecimal) {
                        return false; // only allow non-integers for smallest unit
                    }
                    if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                        unitHasDecimal = true;
                    }
                }
            }
    
            return true;
        }
    
        function isValid$1() {
            return this._isValid;
        }
    
        function createInvalid$1() {
            return createDuration(NaN);
        }
    
        function Duration (duration) {
            var normalizedInput = normalizeObjectUnits(duration),
                years = normalizedInput.year || 0,
                quarters = normalizedInput.quarter || 0,
                months = normalizedInput.month || 0,
                weeks = normalizedInput.week || 0,
                days = normalizedInput.day || 0,
                hours = normalizedInput.hour || 0,
                minutes = normalizedInput.minute || 0,
                seconds = normalizedInput.second || 0,
                milliseconds = normalizedInput.millisecond || 0;
    
            this._isValid = isDurationValid(normalizedInput);
    
            // representation for dateAddRemove
            this._milliseconds = +milliseconds +
                seconds * 1e3 + // 1000
                minutes * 6e4 + // 1000 * 60
                hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
            // Because of dateAddRemove treats 24 hours as different from a
            // day when working around DST, we need to store them separately
            this._days = +days +
                weeks * 7;
            // It is impossible translate months into days without knowing
            // which months you are are talking about, so we have to store
            // it separately.
            this._months = +months +
                quarters * 3 +
                years * 12;
    
            this._data = {};
    
            this._locale = getLocale();
    
            this._bubble();
        }
    
        function isDuration (obj) {
            return obj instanceof Duration;
        }
    
        function absRound (number) {
            if (number < 0) {
                return Math.round(-1 * number) * -1;
            } else {
                return Math.round(number);
            }
        }
    
        // FORMATTING
    
        function offset (token, separator) {
            addFormatToken(token, 0, 0, function () {
                var offset = this.utcOffset();
                var sign = '+';
                if (offset < 0) {
                    offset = -offset;
                    sign = '-';
                }
                return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
            });
        }
    
        offset('Z', ':');
        offset('ZZ', '');
    
        // PARSING
    
        addRegexToken('Z',  matchShortOffset);
        addRegexToken('ZZ', matchShortOffset);
        addParseToken(['Z', 'ZZ'], function (input, array, config) {
            config._useUTC = true;
            config._tzm = offsetFromString(matchShortOffset, input);
        });
    
        // HELPERS
    
        // timezone chunker
        // '+10:00' > ['10',  '00']
        // '-1530'  > ['-15', '30']
        var chunkOffset = /([\+\-]|\d\d)/gi;
    
        function offsetFromString(matcher, string) {
            var matches = (string || '').match(matcher);
    
            if (matches === null) {
                return null;
            }
    
            var chunk   = matches[matches.length - 1] || [];
            var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
            var minutes = +(parts[1] * 60) + toInt(parts[2]);
    
            return minutes === 0 ?
              0 :
              parts[0] === '+' ? minutes : -minutes;
        }
    
        // Return a moment from input, that is local/utc/zone equivalent to model.
        function cloneWithOffset(input, model) {
            var res, diff;
            if (model._isUTC) {
                res = model.clone();
                diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
                // Use low-level api, because this fn is low-level api.
                res._d.setTime(res._d.valueOf() + diff);
                hooks.updateOffset(res, false);
                return res;
            } else {
                return createLocal(input).local();
            }
        }
    
        function getDateOffset (m) {
            // On Firefox.24 Date#getTimezoneOffset returns a floating point.
            // https://github.com/moment/moment/pull/1871
            return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
        }
    
        // HOOKS
    
        // This function will be called whenever a moment is mutated.
        // It is intended to keep the offset in sync with the timezone.
        hooks.updateOffset = function () {};
    
        // MOMENTS
    
        // keepLocalTime = true means only change the timezone, without
        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
        // +0200, so we adjust the time as needed, to be valid.
        //
        // Keeping the time actually adds/subtracts (one hour)
        // from the actual represented time. That is why we call updateOffset
        // a second time. In case it wants us to change the offset again
        // _changeInProgress == true case, then we have to adjust, because
        // there is no such time in the given timezone.
        function getSetOffset (input, keepLocalTime, keepMinutes) {
            var offset = this._offset || 0,
                localAdjust;
            if (!this.isValid()) {
                return input != null ? this : NaN;
            }
            if (input != null) {
                if (typeof input === 'string') {
                    input = offsetFromString(matchShortOffset, input);
                    if (input === null) {
                        return this;
                    }
                } else if (Math.abs(input) < 16 && !keepMinutes) {
                    input = input * 60;
                }
                if (!this._isUTC && keepLocalTime) {
                    localAdjust = getDateOffset(this);
                }
                this._offset = input;
                this._isUTC = true;
                if (localAdjust != null) {
                    this.add(localAdjust, 'm');
                }
                if (offset !== input) {
                    if (!keepLocalTime || this._changeInProgress) {
                        addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                    } else if (!this._changeInProgress) {
                        this._changeInProgress = true;
                        hooks.updateOffset(this, true);
                        this._changeInProgress = null;
                    }
                }
                return this;
            } else {
                return this._isUTC ? offset : getDateOffset(this);
            }
        }
    
        function getSetZone (input, keepLocalTime) {
            if (input != null) {
                if (typeof input !== 'string') {
                    input = -input;
                }
    
                this.utcOffset(input, keepLocalTime);
    
                return this;
            } else {
                return -this.utcOffset();
            }
        }
    
        function setOffsetToUTC (keepLocalTime) {
            return this.utcOffset(0, keepLocalTime);
        }
    
        function setOffsetToLocal (keepLocalTime) {
            if (this._isUTC) {
                this.utcOffset(0, keepLocalTime);
                this._isUTC = false;
    
                if (keepLocalTime) {
                    this.subtract(getDateOffset(this), 'm');
                }
            }
            return this;
        }
    
        function setOffsetToParsedOffset () {
            if (this._tzm != null) {
                this.utcOffset(this._tzm, false, true);
            } else if (typeof this._i === 'string') {
                var tZone = offsetFromString(matchOffset, this._i);
                if (tZone != null) {
                    this.utcOffset(tZone);
                }
                else {
                    this.utcOffset(0, true);
                }
            }
            return this;
        }
    
        function hasAlignedHourOffset (input) {
            if (!this.isValid()) {
                return false;
            }
            input = input ? createLocal(input).utcOffset() : 0;
    
            return (this.utcOffset() - input) % 60 === 0;
        }
    
        function isDaylightSavingTime () {
            return (
                this.utcOffset() > this.clone().month(0).utcOffset() ||
                this.utcOffset() > this.clone().month(5).utcOffset()
            );
        }
    
        function isDaylightSavingTimeShifted () {
            if (!isUndefined(this._isDSTShifted)) {
                return this._isDSTShifted;
            }
    
            var c = {};
    
            copyConfig(c, this);
            c = prepareConfig(c);
    
            if (c._a) {
                var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
                this._isDSTShifted = this.isValid() &&
                    compareArrays(c._a, other.toArray()) > 0;
            } else {
                this._isDSTShifted = false;
            }
    
            return this._isDSTShifted;
        }
    
        function isLocal () {
            return this.isValid() ? !this._isUTC : false;
        }
    
        function isUtcOffset () {
            return this.isValid() ? this._isUTC : false;
        }
    
        function isUtc () {
            return this.isValid() ? this._isUTC && this._offset === 0 : false;
        }
    
        // ASP.NET json date format regex
        var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
    
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;
    
        function createDuration (input, key) {
            var duration = input,
                // matching against regexp is expensive, do it on demand
                match = null,
                sign,
                ret,
                diffRes;
    
            if (isDuration(input)) {
                duration = {
                    ms : input._milliseconds,
                    d  : input._days,
                    M  : input._months
                };
            } else if (isNumber(input)) {
                duration = {};
                if (key) {
                    duration[key] = input;
                } else {
                    duration.milliseconds = input;
                }
            } else if (!!(match = aspNetRegex.exec(input))) {
                sign = (match[1] === '-') ? -1 : 1;
                duration = {
                    y  : 0,
                    d  : toInt(match[DATE])                         * sign,
                    h  : toInt(match[HOUR])                         * sign,
                    m  : toInt(match[MINUTE])                       * sign,
                    s  : toInt(match[SECOND])                       * sign,
                    ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
                };
            } else if (!!(match = isoRegex.exec(input))) {
                sign = (match[1] === '-') ? -1 : 1;
                duration = {
                    y : parseIso(match[2], sign),
                    M : parseIso(match[3], sign),
                    w : parseIso(match[4], sign),
                    d : parseIso(match[5], sign),
                    h : parseIso(match[6], sign),
                    m : parseIso(match[7], sign),
                    s : parseIso(match[8], sign)
                };
            } else if (duration == null) {// checks for null or undefined
                duration = {};
            } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
                diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
    
                duration = {};
                duration.ms = diffRes.milliseconds;
                duration.M = diffRes.months;
            }
    
            ret = new Duration(duration);
    
            if (isDuration(input) && hasOwnProp(input, '_locale')) {
                ret._locale = input._locale;
            }
    
            return ret;
        }
    
        createDuration.fn = Duration.prototype;
        createDuration.invalid = createInvalid$1;
    
        function parseIso (inp, sign) {
            // We'd normally use ~~inp for this, but unfortunately it also
            // converts floats to ints.
            // inp may be undefined, so careful calling replace on it.
            var res = inp && parseFloat(inp.replace(',', '.'));
            // apply sign while we're at it
            return (isNaN(res) ? 0 : res) * sign;
        }
    
        function positiveMomentsDifference(base, other) {
            var res = {milliseconds: 0, months: 0};
    
            res.months = other.month() - base.month() +
                (other.year() - base.year()) * 12;
            if (base.clone().add(res.months, 'M').isAfter(other)) {
                --res.months;
            }
    
            res.milliseconds = +other - +(base.clone().add(res.months, 'M'));
    
            return res;
        }
    
        function momentsDifference(base, other) {
            var res;
            if (!(base.isValid() && other.isValid())) {
                return {milliseconds: 0, months: 0};
            }
    
            other = cloneWithOffset(other, base);
            if (base.isBefore(other)) {
                res = positiveMomentsDifference(base, other);
            } else {
                res = positiveMomentsDifference(other, base);
                res.milliseconds = -res.milliseconds;
                res.months = -res.months;
            }
    
            return res;
        }
    
        // TODO: remove 'name' arg after deprecation is removed
        function createAdder(direction, name) {
            return function (val, period) {
                var dur, tmp;
                //invert the arguments, but complain about it
                if (period !== null && !isNaN(+period)) {
                    deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                    'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                    tmp = val; val = period; period = tmp;
                }
    
                val = typeof val === 'string' ? +val : val;
                dur = createDuration(val, period);
                addSubtract(this, dur, direction);
                return this;
            };
        }
    
        function addSubtract (mom, duration, isAdding, updateOffset) {
            var milliseconds = duration._milliseconds,
                days = absRound(duration._days),
                months = absRound(duration._months);
    
            if (!mom.isValid()) {
                // No op
                return;
            }
    
            updateOffset = updateOffset == null ? true : updateOffset;
    
            if (milliseconds) {
                mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
            }
            if (days) {
                set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
            }
            if (months) {
                setMonth(mom, get(mom, 'Month') + months * isAdding);
            }
            if (updateOffset) {
                hooks.updateOffset(mom, days || months);
            }
        }
    
        var add      = createAdder(1, 'add');
        var subtract = createAdder(-1, 'subtract');
    
        function getCalendarFormat(myMoment, now) {
            var diff = myMoment.diff(now, 'days', true);
            return diff < -6 ? 'sameElse' :
                    diff < -1 ? 'lastWeek' :
                    diff < 0 ? 'lastDay' :
                    diff < 1 ? 'sameDay' :
                    diff < 2 ? 'nextDay' :
                    diff < 7 ? 'nextWeek' : 'sameElse';
        }
    
        function calendar$1 (time, formats) {
            // We want to compare the start of today, vs this.
            // Getting start-of-today depends on whether we're local/utc/offset or not.
            var now = time || createLocal(),
                sod = cloneWithOffset(now, this).startOf('day'),
                format = hooks.calendarFormat(this, sod) || 'sameElse';
    
            var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
    
            return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
        }
    
        function clone () {
            return new Moment(this);
        }
    
        function isAfter (input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
                return false;
            }
            units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
            if (units === 'millisecond') {
                return this.valueOf() > localInput.valueOf();
            } else {
                return localInput.valueOf() < this.clone().startOf(units).valueOf();
            }
        }
    
        function isBefore (input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
                return false;
            }
            units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
            if (units === 'millisecond') {
                return this.valueOf() < localInput.valueOf();
            } else {
                return this.clone().endOf(units).valueOf() < localInput.valueOf();
            }
        }
    
        function isBetween (from, to, units, inclusivity) {
            inclusivity = inclusivity || '()';
            return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
                (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
        }
    
        function isSame (input, units) {
            var localInput = isMoment(input) ? input : createLocal(input),
                inputMs;
            if (!(this.isValid() && localInput.isValid())) {
                return false;
            }
            units = normalizeUnits(units || 'millisecond');
            if (units === 'millisecond') {
                return this.valueOf() === localInput.valueOf();
            } else {
                inputMs = localInput.valueOf();
                return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
            }
        }
    
        function isSameOrAfter (input, units) {
            return this.isSame(input, units) || this.isAfter(input,units);
        }
    
        function isSameOrBefore (input, units) {
            return this.isSame(input, units) || this.isBefore(input,units);
        }
    
        function diff (input, units, asFloat) {
            var that,
                zoneDelta,
                delta, output;
    
            if (!this.isValid()) {
                return NaN;
            }
    
            that = cloneWithOffset(input, this);
    
            if (!that.isValid()) {
                return NaN;
            }
    
            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
    
            units = normalizeUnits(units);
    
            if (units === 'year' || units === 'month' || units === 'quarter') {
                output = monthDiff(this, that);
                if (units === 'quarter') {
                    output = output / 3;
                } else if (units === 'year') {
                    output = output / 12;
                }
            } else {
                delta = this - that;
                output = units === 'second' ? delta / 1e3 : // 1000
                    units === 'minute' ? delta / 6e4 : // 1000 * 60
                    units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
                    units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                    units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                    delta;
            }
            return asFloat ? output : absFloor(output);
        }
    
        function monthDiff (a, b) {
            // difference in months
            var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
                // b is in (anchor - 1 month, anchor + 1 month)
                anchor = a.clone().add(wholeMonthDiff, 'months'),
                anchor2, adjust;
    
            if (b - anchor < 0) {
                anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
                // linear across the month
                adjust = (b - anchor) / (anchor - anchor2);
            } else {
                anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
                // linear across the month
                adjust = (b - anchor) / (anchor2 - anchor);
            }
    
            //check for negative zero, return zero if negative zero
            return -(wholeMonthDiff + adjust) || 0;
        }
    
        hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
        hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
    
        function toString () {
            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
        }
    
        function toISOString() {
            if (!this.isValid()) {
                return null;
            }
            var m = this.clone().utc();
            if (m.year() < 0 || m.year() > 9999) {
                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
            if (isFunction(Date.prototype.toISOString)) {
                // native implementation is ~50x faster, use it when we can
                return this.toDate().toISOString();
            }
            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
    
        /**
         * Return a human readable representation of a moment that can
         * also be evaluated to get a new moment which is the same
         *
         * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
         */
        function inspect () {
            if (!this.isValid()) {
                return 'moment.invalid(/* ' + this._i + ' */)';
            }
            var func = 'moment';
            var zone = '';
            if (!this.isLocal()) {
                func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
                zone = 'Z';
            }
            var prefix = '[' + func + '("]';
            var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
            var datetime = '-MM-DD[T]HH:mm:ss.SSS';
            var suffix = zone + '[")]';
    
            return this.format(prefix + year + datetime + suffix);
        }
    
        function format (inputString) {
            if (!inputString) {
                inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
            }
            var output = formatMoment(this, inputString);
            return this.localeData().postformat(output);
        }
    
        function from (time, withoutSuffix) {
            if (this.isValid() &&
                    ((isMoment(time) && time.isValid()) ||
                     createLocal(time).isValid())) {
                return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
            } else {
                return this.localeData().invalidDate();
            }
        }
    
        function fromNow (withoutSuffix) {
            return this.from(createLocal(), withoutSuffix);
        }
    
        function to (time, withoutSuffix) {
            if (this.isValid() &&
                    ((isMoment(time) && time.isValid()) ||
                     createLocal(time).isValid())) {
                return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
            } else {
                return this.localeData().invalidDate();
            }
        }
    
        function toNow (withoutSuffix) {
            return this.to(createLocal(), withoutSuffix);
        }
    
        // If passed a locale key, it will set the locale for this
        // instance.  Otherwise, it will return the locale configuration
        // variables for this instance.
        function locale (key) {
            var newLocaleData;
    
            if (key === undefined) {
                return this._locale._abbr;
            } else {
                newLocaleData = getLocale(key);
                if (newLocaleData != null) {
                    this._locale = newLocaleData;
                }
                return this;
            }
        }
    
        var lang = deprecate(
            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
            function (key) {
                if (key === undefined) {
                    return this.localeData();
                } else {
                    return this.locale(key);
                }
            }
        );
    
        function localeData () {
            return this._locale;
        }
    
        function startOf (units) {
            units = normalizeUnits(units);
            // the following switch intentionally omits break keywords
            // to utilize falling through the cases.
            switch (units) {
                case 'year':
                    this.month(0);
                    /* falls through */
                case 'quarter':
                case 'month':
                    this.date(1);
                    /* falls through */
                case 'week':
                case 'isoWeek':
                case 'day':
                case 'date':
                    this.hours(0);
                    /* falls through */
                case 'hour':
                    this.minutes(0);
                    /* falls through */
                case 'minute':
                    this.seconds(0);
                    /* falls through */
                case 'second':
                    this.milliseconds(0);
            }
    
            // weeks are a special case
            if (units === 'week') {
                this.weekday(0);
            }
            if (units === 'isoWeek') {
                this.isoWeekday(1);
            }
    
            // quarters are also special
            if (units === 'quarter') {
                this.month(Math.floor(this.month() / 3) * 3);
            }
    
            return this;
        }
    
        function endOf (units) {
            units = normalizeUnits(units);
            if (units === undefined || units === 'millisecond') {
                return this;
            }
    
            // 'date' is an alias for 'day', so it should be considered as such.
            if (units === 'date') {
                units = 'day';
            }
    
            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
        }
    
        function valueOf () {
            return this._d.valueOf() - ((this._offset || 0) * 60000);
        }
    
        function unix () {
            return Math.floor(this.valueOf() / 1000);
        }
    
        function toDate () {
            return new Date(this.valueOf());
        }
    
        function toArray () {
            var m = this;
            return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
        }
    
        function toObject () {
            var m = this;
            return {
                years: m.year(),
                months: m.month(),
                date: m.date(),
                hours: m.hours(),
                minutes: m.minutes(),
                seconds: m.seconds(),
                milliseconds: m.milliseconds()
            };
        }
    
        function toJSON () {
            // new Date(NaN).toJSON() === null
            return this.isValid() ? this.toISOString() : null;
        }
    
        function isValid$2 () {
            return isValid(this);
        }
    
        function parsingFlags () {
            return extend({}, getParsingFlags(this));
        }
    
        function invalidAt () {
            return getParsingFlags(this).overflow;
        }
    
        function creationData() {
            return {
                input: this._i,
                format: this._f,
                locale: this._locale,
                isUTC: this._isUTC,
                strict: this._strict
            };
        }
    
        // FORMATTING
    
        addFormatToken(0, ['gg', 2], 0, function () {
            return this.weekYear() % 100;
        });
    
        addFormatToken(0, ['GG', 2], 0, function () {
            return this.isoWeekYear() % 100;
        });
    
        function addWeekYearFormatToken (token, getter) {
            addFormatToken(0, [token, token.length], 0, getter);
        }
    
        addWeekYearFormatToken('gggg',     'weekYear');
        addWeekYearFormatToken('ggggg',    'weekYear');
        addWeekYearFormatToken('GGGG',  'isoWeekYear');
        addWeekYearFormatToken('GGGGG', 'isoWeekYear');
    
        // ALIASES
    
        addUnitAlias('weekYear', 'gg');
        addUnitAlias('isoWeekYear', 'GG');
    
        // PRIORITY
    
        addUnitPriority('weekYear', 1);
        addUnitPriority('isoWeekYear', 1);
    
    
        // PARSING
    
        addRegexToken('G',      matchSigned);
        addRegexToken('g',      matchSigned);
        addRegexToken('GG',     match1to2, match2);
        addRegexToken('gg',     match1to2, match2);
        addRegexToken('GGGG',   match1to4, match4);
        addRegexToken('gggg',   match1to4, match4);
        addRegexToken('GGGGG',  match1to6, match6);
        addRegexToken('ggggg',  match1to6, match6);
    
        addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
            week[token.substr(0, 2)] = toInt(input);
        });
    
        addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
            week[token] = hooks.parseTwoDigitYear(input);
        });
    
        // MOMENTS
    
        function getSetWeekYear (input) {
            return getSetWeekYearHelper.call(this,
                    input,
                    this.week(),
                    this.weekday(),
                    this.localeData()._week.dow,
                    this.localeData()._week.doy);
        }
    
        function getSetISOWeekYear (input) {
            return getSetWeekYearHelper.call(this,
                    input, this.isoWeek(), this.isoWeekday(), 1, 4);
        }
    
        function getISOWeeksInYear () {
            return weeksInYear(this.year(), 1, 4);
        }
    
        function getWeeksInYear () {
            var weekInfo = this.localeData()._week;
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
        }
    
        function getSetWeekYearHelper(input, week, weekday, dow, doy) {
            var weeksTarget;
            if (input == null) {
                return weekOfYear(this, dow, doy).year;
            } else {
                weeksTarget = weeksInYear(input, dow, doy);
                if (week > weeksTarget) {
                    week = weeksTarget;
                }
                return setWeekAll.call(this, input, week, weekday, dow, doy);
            }
        }
    
        function setWeekAll(weekYear, week, weekday, dow, doy) {
            var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
                date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
    
            this.year(date.getUTCFullYear());
            this.month(date.getUTCMonth());
            this.date(date.getUTCDate());
            return this;
        }
    
        // FORMATTING
    
        addFormatToken('Q', 0, 'Qo', 'quarter');
    
        // ALIASES
    
        addUnitAlias('quarter', 'Q');
    
        // PRIORITY
    
        addUnitPriority('quarter', 7);
    
        // PARSING
    
        addRegexToken('Q', match1);
        addParseToken('Q', function (input, array) {
            array[MONTH] = (toInt(input) - 1) * 3;
        });
    
        // MOMENTS
    
        function getSetQuarter (input) {
            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
        }
    
        // FORMATTING
    
        addFormatToken('D', ['DD', 2], 'Do', 'date');
    
        // ALIASES
    
        addUnitAlias('date', 'D');
    
        // PRIOROITY
        addUnitPriority('date', 9);
    
        // PARSING
    
        addRegexToken('D',  match1to2);
        addRegexToken('DD', match1to2, match2);
        addRegexToken('Do', function (isStrict, locale) {
            // TODO: Remove "ordinalParse" fallback in next major release.
            return isStrict ?
              (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
              locale._dayOfMonthOrdinalParseLenient;
        });
    
        addParseToken(['D', 'DD'], DATE);
        addParseToken('Do', function (input, array) {
            array[DATE] = toInt(input.match(match1to2)[0], 10);
        });
    
        // MOMENTS
    
        var getSetDayOfMonth = makeGetSet('Date', true);
    
        // FORMATTING
    
        addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
    
        // ALIASES
    
        addUnitAlias('dayOfYear', 'DDD');
    
        // PRIORITY
        addUnitPriority('dayOfYear', 4);
    
        // PARSING
    
        addRegexToken('DDD',  match1to3);
        addRegexToken('DDDD', match3);
        addParseToken(['DDD', 'DDDD'], function (input, array, config) {
            config._dayOfYear = toInt(input);
        });
    
        // HELPERS
    
        // MOMENTS
    
        function getSetDayOfYear (input) {
            var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
        }
    
        // FORMATTING
    
        addFormatToken('m', ['mm', 2], 0, 'minute');
    
        // ALIASES
    
        addUnitAlias('minute', 'm');
    
        // PRIORITY
    
        addUnitPriority('minute', 14);
    
        // PARSING
    
        addRegexToken('m',  match1to2);
        addRegexToken('mm', match1to2, match2);
        addParseToken(['m', 'mm'], MINUTE);
    
        // MOMENTS
    
        var getSetMinute = makeGetSet('Minutes', false);
    
        // FORMATTING
    
        addFormatToken('s', ['ss', 2], 0, 'second');
    
        // ALIASES
    
        addUnitAlias('second', 's');
    
        // PRIORITY
    
        addUnitPriority('second', 15);
    
        // PARSING
    
        addRegexToken('s',  match1to2);
        addRegexToken('ss', match1to2, match2);
        addParseToken(['s', 'ss'], SECOND);
    
        // MOMENTS
    
        var getSetSecond = makeGetSet('Seconds', false);
    
        // FORMATTING
    
        addFormatToken('S', 0, 0, function () {
            return ~~(this.millisecond() / 100);
        });
    
        addFormatToken(0, ['SS', 2], 0, function () {
            return ~~(this.millisecond() / 10);
        });
    
        addFormatToken(0, ['SSS', 3], 0, 'millisecond');
        addFormatToken(0, ['SSSS', 4], 0, function () {
            return this.millisecond() * 10;
        });
        addFormatToken(0, ['SSSSS', 5], 0, function () {
            return this.millisecond() * 100;
        });
        addFormatToken(0, ['SSSSSS', 6], 0, function () {
            return this.millisecond() * 1000;
        });
        addFormatToken(0, ['SSSSSSS', 7], 0, function () {
            return this.millisecond() * 10000;
        });
        addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
            return this.millisecond() * 100000;
        });
        addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
            return this.millisecond() * 1000000;
        });
    
    
        // ALIASES
    
        addUnitAlias('millisecond', 'ms');
    
        // PRIORITY
    
        addUnitPriority('millisecond', 16);
    
        // PARSING
    
        addRegexToken('S',    match1to3, match1);
        addRegexToken('SS',   match1to3, match2);
        addRegexToken('SSS',  match1to3, match3);
    
        var token;
        for (token = 'SSSS'; token.length <= 9; token += 'S') {
            addRegexToken(token, matchUnsigned);
        }
    
        function parseMs(input, array) {
            array[MILLISECOND] = toInt(('0.' + input) * 1000);
        }
    
        for (token = 'S'; token.length <= 9; token += 'S') {
            addParseToken(token, parseMs);
        }
        // MOMENTS
    
        var getSetMillisecond = makeGetSet('Milliseconds', false);
    
        // FORMATTING
    
        addFormatToken('z',  0, 0, 'zoneAbbr');
        addFormatToken('zz', 0, 0, 'zoneName');
    
        // MOMENTS
    
        function getZoneAbbr () {
            return this._isUTC ? 'UTC' : '';
        }
    
        function getZoneName () {
            return this._isUTC ? 'Coordinated Universal Time' : '';
        }
    
        var proto = Moment.prototype;
    
        proto.add               = add;
        proto.calendar          = calendar$1;
        proto.clone             = clone;
        proto.diff              = diff;
        proto.endOf             = endOf;
        proto.format            = format;
        proto.from              = from;
        proto.fromNow           = fromNow;
        proto.to                = to;
        proto.toNow             = toNow;
        proto.get               = stringGet;
        proto.invalidAt         = invalidAt;
        proto.isAfter           = isAfter;
        proto.isBefore          = isBefore;
        proto.isBetween         = isBetween;
        proto.isSame            = isSame;
        proto.isSameOrAfter     = isSameOrAfter;
        proto.isSameOrBefore    = isSameOrBefore;
        proto.isValid           = isValid$2;
        proto.lang              = lang;
        proto.locale            = locale;
        proto.localeData        = localeData;
        proto.max               = prototypeMax;
        proto.min               = prototypeMin;
        proto.parsingFlags      = parsingFlags;
        proto.set               = stringSet;
        proto.startOf           = startOf;
        proto.subtract          = subtract;
        proto.toArray           = toArray;
        proto.toObject          = toObject;
        proto.toDate            = toDate;
        proto.toISOString       = toISOString;
        proto.inspect           = inspect;
        proto.toJSON            = toJSON;
        proto.toString          = toString;
        proto.unix              = unix;
        proto.valueOf           = valueOf;
        proto.creationData      = creationData;
    
        // Year
        proto.year       = getSetYear;
        proto.isLeapYear = getIsLeapYear;
    
        // Week Year
        proto.weekYear    = getSetWeekYear;
        proto.isoWeekYear = getSetISOWeekYear;
    
        // Quarter
        proto.quarter = proto.quarters = getSetQuarter;
    
        // Month
        proto.month       = getSetMonth;
        proto.daysInMonth = getDaysInMonth;
    
        // Week
        proto.week           = proto.weeks        = getSetWeek;
        proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
        proto.weeksInYear    = getWeeksInYear;
        proto.isoWeeksInYear = getISOWeeksInYear;
    
        // Day
        proto.date       = getSetDayOfMonth;
        proto.day        = proto.days             = getSetDayOfWeek;
        proto.weekday    = getSetLocaleDayOfWeek;
        proto.isoWeekday = getSetISODayOfWeek;
        proto.dayOfYear  = getSetDayOfYear;
    
        // Hour
        proto.hour = proto.hours = getSetHour;
    
        // Minute
        proto.minute = proto.minutes = getSetMinute;
    
        // Second
        proto.second = proto.seconds = getSetSecond;
    
        // Millisecond
        proto.millisecond = proto.milliseconds = getSetMillisecond;
    
        // Offset
        proto.utcOffset            = getSetOffset;
        proto.utc                  = setOffsetToUTC;
        proto.local                = setOffsetToLocal;
        proto.parseZone            = setOffsetToParsedOffset;
        proto.hasAlignedHourOffset = hasAlignedHourOffset;
        proto.isDST                = isDaylightSavingTime;
        proto.isLocal              = isLocal;
        proto.isUtcOffset          = isUtcOffset;
        proto.isUtc                = isUtc;
        proto.isUTC                = isUtc;
    
        // Timezone
        proto.zoneAbbr = getZoneAbbr;
        proto.zoneName = getZoneName;
    
        // Deprecations
        proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
        proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
        proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
        proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
        proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);
    
        function createUnix (input) {
            return createLocal(input * 1000);
        }
    
        function createInZone () {
            return createLocal.apply(null, arguments).parseZone();
        }
    
        function preParsePostFormat (string) {
            return string;
        }
    
        var proto$1 = Locale.prototype;
    
        proto$1.calendar        = calendar;
        proto$1.longDateFormat  = longDateFormat;
        proto$1.invalidDate     = invalidDate;
        proto$1.ordinal         = ordinal;
        proto$1.preparse        = preParsePostFormat;
        proto$1.postformat      = preParsePostFormat;
        proto$1.relativeTime    = relativeTime;
        proto$1.pastFuture      = pastFuture;
        proto$1.set             = set;
    
        // Month
        proto$1.months            =        localeMonths;
        proto$1.monthsShort       =        localeMonthsShort;
        proto$1.monthsParse       =        localeMonthsParse;
        proto$1.monthsRegex       = monthsRegex;
        proto$1.monthsShortRegex  = monthsShortRegex;
    
        // Week
        proto$1.week = localeWeek;
        proto$1.firstDayOfYear = localeFirstDayOfYear;
        proto$1.firstDayOfWeek = localeFirstDayOfWeek;
    
        // Day of Week
        proto$1.weekdays       =        localeWeekdays;
        proto$1.weekdaysMin    =        localeWeekdaysMin;
        proto$1.weekdaysShort  =        localeWeekdaysShort;
        proto$1.weekdaysParse  =        localeWeekdaysParse;
    
        proto$1.weekdaysRegex       =        weekdaysRegex;
        proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
        proto$1.weekdaysMinRegex    =        weekdaysMinRegex;
    
        // Hours
        proto$1.isPM = localeIsPM;
        proto$1.meridiem = localeMeridiem;
    
        function get$1 (format, index, field, setter) {
            var locale = getLocale();
            var utc = createUTC().set(setter, index);
            return locale[field](utc, format);
        }
    
        function listMonthsImpl (format, index, field) {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }
    
            format = format || '';
    
            if (index != null) {
                return get$1(format, index, field, 'month');
            }
    
            var i;
            var out = [];
            for (i = 0; i < 12; i++) {
                out[i] = get$1(format, i, field, 'month');
            }
            return out;
        }
    
        // ()
        // (5)
        // (fmt, 5)
        // (fmt)
        // (true)
        // (true, 5)
        // (true, fmt, 5)
        // (true, fmt)
        function listWeekdaysImpl (localeSorted, format, index, field) {
            if (typeof localeSorted === 'boolean') {
                if (isNumber(format)) {
                    index = format;
                    format = undefined;
                }
    
                format = format || '';
            } else {
                format = localeSorted;
                index = format;
                localeSorted = false;
    
                if (isNumber(format)) {
                    index = format;
                    format = undefined;
                }
    
                format = format || '';
            }
    
            var locale = getLocale(),
                shift = localeSorted ? locale._week.dow : 0;
    
            if (index != null) {
                return get$1(format, (index + shift) % 7, field, 'day');
            }
    
            var i;
            var out = [];
            for (i = 0; i < 7; i++) {
                out[i] = get$1(format, (i + shift) % 7, field, 'day');
            }
            return out;
        }
    
        function listMonths (format, index) {
            return listMonthsImpl(format, index, 'months');
        }
    
        function listMonthsShort (format, index) {
            return listMonthsImpl(format, index, 'monthsShort');
        }
    
        function listWeekdays (localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
        }
    
        function listWeekdaysShort (localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
        }
    
        function listWeekdaysMin (localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
        }
    
        getSetGlobalLocale('en', {
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (toInt(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            }
        });
    
        // Side effect imports
        hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
        hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
    
        var mathAbs = Math.abs;
    
        function abs () {
            var data           = this._data;
    
            this._milliseconds = mathAbs(this._milliseconds);
            this._days         = mathAbs(this._days);
            this._months       = mathAbs(this._months);
    
            data.milliseconds  = mathAbs(data.milliseconds);
            data.seconds       = mathAbs(data.seconds);
            data.minutes       = mathAbs(data.minutes);
            data.hours         = mathAbs(data.hours);
            data.months        = mathAbs(data.months);
            data.years         = mathAbs(data.years);
    
            return this;
        }
    
        function addSubtract$1 (duration, input, value, direction) {
            var other = createDuration(input, value);
    
            duration._milliseconds += direction * other._milliseconds;
            duration._days         += direction * other._days;
            duration._months       += direction * other._months;
    
            return duration._bubble();
        }
    
        // supports only 2.0-style add(1, 's') or add(duration)
        function add$1 (input, value) {
            return addSubtract$1(this, input, value, 1);
        }
    
        // supports only 2.0-style subtract(1, 's') or subtract(duration)
        function subtract$1 (input, value) {
            return addSubtract$1(this, input, value, -1);
        }
    
        function absCeil (number) {
            if (number < 0) {
                return Math.floor(number);
            } else {
                return Math.ceil(number);
            }
        }
    
        function bubble () {
            var milliseconds = this._milliseconds;
            var days         = this._days;
            var months       = this._months;
            var data         = this._data;
            var seconds, minutes, hours, years, monthsFromDays;
    
            // if we have a mix of positive and negative values, bubble down first
            // check: https://github.com/moment/moment/issues/2166
            if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                    (milliseconds <= 0 && days <= 0 && months <= 0))) {
                milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
                days = 0;
                months = 0;
            }
    
            // The following code bubbles up values, see the tests for
            // examples of what that means.
            data.milliseconds = milliseconds % 1000;
    
            seconds           = absFloor(milliseconds / 1000);
            data.seconds      = seconds % 60;
    
            minutes           = absFloor(seconds / 60);
            data.minutes      = minutes % 60;
    
            hours             = absFloor(minutes / 60);
            data.hours        = hours % 24;
    
            days += absFloor(hours / 24);
    
            // convert days to months
            monthsFromDays = absFloor(daysToMonths(days));
            months += monthsFromDays;
            days -= absCeil(monthsToDays(monthsFromDays));
    
            // 12 months -> 1 year
            years = absFloor(months / 12);
            months %= 12;
    
            data.days   = days;
            data.months = months;
            data.years  = years;
    
            return this;
        }
    
        function daysToMonths (days) {
            // 400 years have 146097 days (taking into account leap year rules)
            // 400 years have 12 months === 4800
            return days * 4800 / 146097;
        }
    
        function monthsToDays (months) {
            // the reverse of daysToMonths
            return months * 146097 / 4800;
        }
    
        function as (units) {
            if (!this.isValid()) {
                return NaN;
            }
            var days;
            var months;
            var milliseconds = this._milliseconds;
    
            units = normalizeUnits(units);
    
            if (units === 'month' || units === 'year') {
                days   = this._days   + milliseconds / 864e5;
                months = this._months + daysToMonths(days);
                return units === 'month' ? months : months / 12;
            } else {
                // handle milliseconds separately because of floating point math errors (issue #1867)
                days = this._days + Math.round(monthsToDays(this._months));
                switch (units) {
                    case 'week'   : return days / 7     + milliseconds / 6048e5;
                    case 'day'    : return days         + milliseconds / 864e5;
                    case 'hour'   : return days * 24    + milliseconds / 36e5;
                    case 'minute' : return days * 1440  + milliseconds / 6e4;
                    case 'second' : return days * 86400 + milliseconds / 1000;
                    // Math.floor prevents floating point math errors here
                    case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                    default: throw new Error('Unknown unit ' + units);
                }
            }
        }
    
        // TODO: Use this.as('ms')?
        function valueOf$1 () {
            if (!this.isValid()) {
                return NaN;
            }
            return (
                this._milliseconds +
                this._days * 864e5 +
                (this._months % 12) * 2592e6 +
                toInt(this._months / 12) * 31536e6
            );
        }
    
        function makeAs (alias) {
            return function () {
                return this.as(alias);
            };
        }
    
        var asMilliseconds = makeAs('ms');
        var asSeconds      = makeAs('s');
        var asMinutes      = makeAs('m');
        var asHours        = makeAs('h');
        var asDays         = makeAs('d');
        var asWeeks        = makeAs('w');
        var asMonths       = makeAs('M');
        var asYears        = makeAs('y');
    
        function get$2 (units) {
            units = normalizeUnits(units);
            return this.isValid() ? this[units + 's']() : NaN;
        }
    
        function makeGetter(name) {
            return function () {
                return this.isValid() ? this._data[name] : NaN;
            };
        }
    
        var milliseconds = makeGetter('milliseconds');
        var seconds      = makeGetter('seconds');
        var minutes      = makeGetter('minutes');
        var hours        = makeGetter('hours');
        var days         = makeGetter('days');
        var months       = makeGetter('months');
        var years        = makeGetter('years');
    
        function weeks () {
            return absFloor(this.days() / 7);
        }
    
        var round = Math.round;
        var thresholds = {
            ss: 44,         // a few seconds to seconds
            s : 45,         // seconds to minute
            m : 45,         // minutes to hour
            h : 22,         // hours to day
            d : 26,         // days to month
            M : 11          // months to year
        };
    
        // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
        function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
            return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
        }
    
        function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
            var duration = createDuration(posNegDuration).abs();
            var seconds  = round(duration.as('s'));
            var minutes  = round(duration.as('m'));
            var hours    = round(duration.as('h'));
            var days     = round(duration.as('d'));
            var months   = round(duration.as('M'));
            var years    = round(duration.as('y'));
    
            var a = seconds <= thresholds.ss && ['s', seconds]  ||
                    seconds < thresholds.s   && ['ss', seconds] ||
                    minutes <= 1             && ['m']           ||
                    minutes < thresholds.m   && ['mm', minutes] ||
                    hours   <= 1             && ['h']           ||
                    hours   < thresholds.h   && ['hh', hours]   ||
                    days    <= 1             && ['d']           ||
                    days    < thresholds.d   && ['dd', days]    ||
                    months  <= 1             && ['M']           ||
                    months  < thresholds.M   && ['MM', months]  ||
                    years   <= 1             && ['y']           || ['yy', years];
    
            a[2] = withoutSuffix;
            a[3] = +posNegDuration > 0;
            a[4] = locale;
            return substituteTimeAgo.apply(null, a);
        }
    
        // This function allows you to set the rounding function for relative time strings
        function getSetRelativeTimeRounding (roundingFunction) {
            if (roundingFunction === undefined) {
                return round;
            }
            if (typeof(roundingFunction) === 'function') {
                round = roundingFunction;
                return true;
            }
            return false;
        }
    
        // This function allows you to set a threshold for relative time strings
        function getSetRelativeTimeThreshold (threshold, limit) {
            if (thresholds[threshold] === undefined) {
                return false;
            }
            if (limit === undefined) {
                return thresholds[threshold];
            }
            thresholds[threshold] = limit;
            if (threshold === 's') {
                thresholds.ss = limit - 1;
            }
            return true;
        }
    
        function humanize (withSuffix) {
            if (!this.isValid()) {
                return this.localeData().invalidDate();
            }
    
            var locale = this.localeData();
            var output = relativeTime$1(this, !withSuffix, locale);
    
            if (withSuffix) {
                output = locale.pastFuture(+this, output);
            }
    
            return locale.postformat(output);
        }
    
        var abs$1 = Math.abs;
    
        function toISOString$1() {
            // for ISO strings we do not use the normal bubbling rules:
            //  * milliseconds bubble up until they become hours
            //  * days do not bubble at all
            //  * months bubble up until they become years
            // This is because there is no context-free conversion between hours and days
            // (think of clock changes)
            // and also not between days and months (28-31 days per month)
            if (!this.isValid()) {
                return this.localeData().invalidDate();
            }
    
            var seconds = abs$1(this._milliseconds) / 1000;
            var days         = abs$1(this._days);
            var months       = abs$1(this._months);
            var minutes, hours, years;
    
            // 3600 seconds -> 60 minutes -> 1 hour
            minutes           = absFloor(seconds / 60);
            hours             = absFloor(minutes / 60);
            seconds %= 60;
            minutes %= 60;
    
            // 12 months -> 1 year
            years  = absFloor(months / 12);
            months %= 12;
    
    
            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
            var Y = years;
            var M = months;
            var D = days;
            var h = hours;
            var m = minutes;
            var s = seconds;
            var total = this.asSeconds();
    
            if (!total) {
                // this is the same as C#'s (Noda) and python (isodate)...
                // but not other JS (goog.date)
                return 'P0D';
            }
    
            return (total < 0 ? '-' : '') +
                'P' +
                (Y ? Y + 'Y' : '') +
                (M ? M + 'M' : '') +
                (D ? D + 'D' : '') +
                ((h || m || s) ? 'T' : '') +
                (h ? h + 'H' : '') +
                (m ? m + 'M' : '') +
                (s ? s + 'S' : '');
        }
    
        var proto$2 = Duration.prototype;
    
        proto$2.isValid        = isValid$1;
        proto$2.abs            = abs;
        proto$2.add            = add$1;
        proto$2.subtract       = subtract$1;
        proto$2.as             = as;
        proto$2.asMilliseconds = asMilliseconds;
        proto$2.asSeconds      = asSeconds;
        proto$2.asMinutes      = asMinutes;
        proto$2.asHours        = asHours;
        proto$2.asDays         = asDays;
        proto$2.asWeeks        = asWeeks;
        proto$2.asMonths       = asMonths;
        proto$2.asYears        = asYears;
        proto$2.valueOf        = valueOf$1;
        proto$2._bubble        = bubble;
        proto$2.get            = get$2;
        proto$2.milliseconds   = milliseconds;
        proto$2.seconds        = seconds;
        proto$2.minutes        = minutes;
        proto$2.hours          = hours;
        proto$2.days           = days;
        proto$2.weeks          = weeks;
        proto$2.months         = months;
        proto$2.years          = years;
        proto$2.humanize       = humanize;
        proto$2.toISOString    = toISOString$1;
        proto$2.toString       = toISOString$1;
        proto$2.toJSON         = toISOString$1;
        proto$2.locale         = locale;
        proto$2.localeData     = localeData;
    
        // Deprecations
        proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
        proto$2.lang = lang;
    
        // Side effect imports
    
        // FORMATTING
    
        addFormatToken('X', 0, 0, 'unix');
        addFormatToken('x', 0, 0, 'valueOf');
    
        // PARSING
    
        addRegexToken('x', matchSigned);
        addRegexToken('X', matchTimestamp);
        addParseToken('X', function (input, array, config) {
            config._d = new Date(parseFloat(input, 10) * 1000);
        });
        addParseToken('x', function (input, array, config) {
            config._d = new Date(toInt(input));
        });
    
        // Side effect imports
    
    
        hooks.version = '2.18.1';
    
        setHookCallback(createLocal);
    
        hooks.fn                    = proto;
        hooks.min                   = min;
        hooks.max                   = max;
        hooks.now                   = now;
        hooks.utc                   = createUTC;
        hooks.unix                  = createUnix;
        hooks.months                = listMonths;
        hooks.isDate                = isDate;
        hooks.locale                = getSetGlobalLocale;
        hooks.invalid               = createInvalid;
        hooks.duration              = createDuration;
        hooks.isMoment              = isMoment;
        hooks.weekdays              = listWeekdays;
        hooks.parseZone             = createInZone;
        hooks.localeData            = getLocale;
        hooks.isDuration            = isDuration;
        hooks.monthsShort           = listMonthsShort;
        hooks.weekdaysMin           = listWeekdaysMin;
        hooks.defineLocale          = defineLocale;
        hooks.updateLocale          = updateLocale;
        hooks.locales               = listLocales;
        hooks.weekdaysShort         = listWeekdaysShort;
        hooks.normalizeUnits        = normalizeUnits;
        hooks.relativeTimeRounding = getSetRelativeTimeRounding;
        hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
        hooks.calendarFormat        = getCalendarFormat;
        hooks.prototype             = proto;
    
        return hooks;
    
        })));
    
        /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)(module)))
    
    /***/ }),
    /* 4 */
    /***/ (function(module, exports) {
    
        module.exports = function(module) {
            if(!module.webpackPolyfill) {
                module.deprecate = function() {};
                module.paths = [];
                // module.parent = undefined by default
                module.children = [];
                module.webpackPolyfill = 1;
            }
            return module;
        }
    
    
    /***/ }),
    /* 5 */
    /***/ (function(module, exports, __webpack_require__) {
    
        var map = {
            "./af": 6,
            "./af.js": 6,
            "./ar": 7,
            "./ar-dz": 8,
            "./ar-dz.js": 8,
            "./ar-kw": 9,
            "./ar-kw.js": 9,
            "./ar-ly": 10,
            "./ar-ly.js": 10,
            "./ar-ma": 11,
            "./ar-ma.js": 11,
            "./ar-sa": 12,
            "./ar-sa.js": 12,
            "./ar-tn": 13,
            "./ar-tn.js": 13,
            "./ar.js": 7,
            "./az": 14,
            "./az.js": 14,
            "./be": 15,
            "./be.js": 15,
            "./bg": 16,
            "./bg.js": 16,
            "./bn": 17,
            "./bn.js": 17,
            "./bo": 18,
            "./bo.js": 18,
            "./br": 19,
            "./br.js": 19,
            "./bs": 20,
            "./bs.js": 20,
            "./ca": 21,
            "./ca.js": 21,
            "./cs": 22,
            "./cs.js": 22,
            "./cv": 23,
            "./cv.js": 23,
            "./cy": 24,
            "./cy.js": 24,
            "./da": 25,
            "./da.js": 25,
            "./de": 26,
            "./de-at": 27,
            "./de-at.js": 27,
            "./de-ch": 28,
            "./de-ch.js": 28,
            "./de.js": 26,
            "./dv": 29,
            "./dv.js": 29,
            "./el": 30,
            "./el.js": 30,
            "./en-au": 31,
            "./en-au.js": 31,
            "./en-ca": 32,
            "./en-ca.js": 32,
            "./en-gb": 33,
            "./en-gb.js": 33,
            "./en-ie": 34,
            "./en-ie.js": 34,
            "./en-nz": 35,
            "./en-nz.js": 35,
            "./eo": 36,
            "./eo.js": 36,
            "./es": 37,
            "./es-do": 38,
            "./es-do.js": 38,
            "./es.js": 37,
            "./et": 39,
            "./et.js": 39,
            "./eu": 40,
            "./eu.js": 40,
            "./fa": 41,
            "./fa.js": 41,
            "./fi": 42,
            "./fi.js": 42,
            "./fo": 43,
            "./fo.js": 43,
            "./fr": 44,
            "./fr-ca": 45,
            "./fr-ca.js": 45,
            "./fr-ch": 46,
            "./fr-ch.js": 46,
            "./fr.js": 44,
            "./fy": 47,
            "./fy.js": 47,
            "./gd": 48,
            "./gd.js": 48,
            "./gl": 49,
            "./gl.js": 49,
            "./gom-latn": 50,
            "./gom-latn.js": 50,
            "./he": 51,
            "./he.js": 51,
            "./hi": 52,
            "./hi.js": 52,
            "./hr": 53,
            "./hr.js": 53,
            "./hu": 54,
            "./hu.js": 54,
            "./hy-am": 55,
            "./hy-am.js": 55,
            "./id": 56,
            "./id.js": 56,
            "./is": 57,
            "./is.js": 57,
            "./it": 58,
            "./it.js": 58,
            "./ja": 59,
            "./ja.js": 59,
            "./jv": 60,
            "./jv.js": 60,
            "./ka": 61,
            "./ka.js": 61,
            "./kk": 62,
            "./kk.js": 62,
            "./km": 63,
            "./km.js": 63,
            "./kn": 64,
            "./kn.js": 64,
            "./ko": 65,
            "./ko.js": 65,
            "./ky": 66,
            "./ky.js": 66,
            "./lb": 67,
            "./lb.js": 67,
            "./lo": 68,
            "./lo.js": 68,
            "./lt": 69,
            "./lt.js": 69,
            "./lv": 70,
            "./lv.js": 70,
            "./me": 71,
            "./me.js": 71,
            "./mi": 72,
            "./mi.js": 72,
            "./mk": 73,
            "./mk.js": 73,
            "./ml": 74,
            "./ml.js": 74,
            "./mr": 75,
            "./mr.js": 75,
            "./ms": 76,
            "./ms-my": 77,
            "./ms-my.js": 77,
            "./ms.js": 76,
            "./my": 78,
            "./my.js": 78,
            "./nb": 79,
            "./nb.js": 79,
            "./ne": 80,
            "./ne.js": 80,
            "./nl": 81,
            "./nl-be": 82,
            "./nl-be.js": 82,
            "./nl.js": 81,
            "./nn": 83,
            "./nn.js": 83,
            "./pa-in": 84,
            "./pa-in.js": 84,
            "./pl": 85,
            "./pl.js": 85,
            "./pt": 86,
            "./pt-br": 87,
            "./pt-br.js": 87,
            "./pt.js": 86,
            "./ro": 88,
            "./ro.js": 88,
            "./ru": 89,
            "./ru.js": 89,
            "./sd": 90,
            "./sd.js": 90,
            "./se": 91,
            "./se.js": 91,
            "./si": 92,
            "./si.js": 92,
            "./sk": 93,
            "./sk.js": 93,
            "./sl": 94,
            "./sl.js": 94,
            "./sq": 95,
            "./sq.js": 95,
            "./sr": 96,
            "./sr-cyrl": 97,
            "./sr-cyrl.js": 97,
            "./sr.js": 96,
            "./ss": 98,
            "./ss.js": 98,
            "./sv": 99,
            "./sv.js": 99,
            "./sw": 100,
            "./sw.js": 100,
            "./ta": 101,
            "./ta.js": 101,
            "./te": 102,
            "./te.js": 102,
            "./tet": 103,
            "./tet.js": 103,
            "./th": 104,
            "./th.js": 104,
            "./tl-ph": 105,
            "./tl-ph.js": 105,
            "./tlh": 106,
            "./tlh.js": 106,
            "./tr": 107,
            "./tr.js": 107,
            "./tzl": 108,
            "./tzl.js": 108,
            "./tzm": 109,
            "./tzm-latn": 110,
            "./tzm-latn.js": 110,
            "./tzm.js": 109,
            "./uk": 111,
            "./uk.js": 111,
            "./ur": 112,
            "./ur.js": 112,
            "./uz": 113,
            "./uz-latn": 114,
            "./uz-latn.js": 114,
            "./uz.js": 113,
            "./vi": 115,
            "./vi.js": 115,
            "./x-pseudo": 116,
            "./x-pseudo.js": 116,
            "./yo": 117,
            "./yo.js": 117,
            "./zh-cn": 118,
            "./zh-cn.js": 118,
            "./zh-hk": 119,
            "./zh-hk.js": 119,
            "./zh-tw": 120,
            "./zh-tw.js": 120
        };
        function webpackContext(req) {
            return __webpack_require__(webpackContextResolve(req));
        };
        function webpackContextResolve(req) {
            return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
        };
        webpackContext.keys = function webpackContextKeys() {
            return Object.keys(map);
        };
        webpackContext.resolve = webpackContextResolve;
        module.exports = webpackContext;
        webpackContext.id = 5;
    
    
    /***/ }),
    /* 6 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Afrikaans [af]
        //! author : Werner Mollentze : https://github.com/wernerm
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var af = moment.defineLocale('af', {
            months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
            monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
            weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
            weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
            weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
            meridiemParse: /vm|nm/i,
            isPM : function (input) {
                return /^nm$/i.test(input);
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours < 12) {
                    return isLower ? 'vm' : 'VM';
                } else {
                    return isLower ? 'nm' : 'NM';
                }
            },
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Vandag om] LT',
                nextDay : '[Môre om] LT',
                nextWeek : 'dddd [om] LT',
                lastDay : '[Gister om] LT',
                lastWeek : '[Laas] dddd [om] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'oor %s',
                past : '%s gelede',
                s : '\'n paar sekondes',
                m : '\'n minuut',
                mm : '%d minute',
                h : '\'n uur',
                hh : '%d ure',
                d : '\'n dag',
                dd : '%d dae',
                M : '\'n maand',
                MM : '%d maande',
                y : '\'n jaar',
                yy : '%d jaar'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal : function (number) {
                return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
            },
            week : {
                dow : 1, // Maandag is die eerste dag van die week.
                doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
            }
        });
    
        return af;
    
        })));
    
    
    /***/ }),
    /* 7 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Arabic [ar]
        //! author : Abdel Said: https://github.com/abdelsaid
        //! author : Ahmed Elkhatib
        //! author : forabi https://github.com/forabi
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '١',
            '2': '٢',
            '3': '٣',
            '4': '٤',
            '5': '٥',
            '6': '٦',
            '7': '٧',
            '8': '٨',
            '9': '٩',
            '0': '٠'
        };
        var numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0'
        };
        var pluralForm = function (n) {
            return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
        };
        var plurals = {
            s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
            m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
            h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
            d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
            M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
            y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
        };
        var pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        };
        var months = [
            'كانون الثاني يناير',
            'شباط فبراير',
            'آذار مارس',
            'نيسان أبريل',
            'أيار مايو',
            'حزيران يونيو',
            'تموز يوليو',
            'آب أغسطس',
            'أيلول سبتمبر',
            'تشرين الأول أكتوبر',
            'تشرين الثاني نوفمبر',
            'كانون الأول ديسمبر'
        ];
    
        var ar = moment.defineLocale('ar', {
            months : months,
            monthsShort : months,
            weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'D/\u200FM/\u200FYYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            meridiemParse: /ص|م/,
            isPM : function (input) {
                return 'م' === input;
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'ص';
                } else {
                    return 'م';
                }
            },
            calendar : {
                sameDay: '[اليوم عند الساعة] LT',
                nextDay: '[غدًا عند الساعة] LT',
                nextWeek: 'dddd [عند الساعة] LT',
                lastDay: '[أمس عند الساعة] LT',
                lastWeek: 'dddd [عند الساعة] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'بعد %s',
                past : 'منذ %s',
                s : pluralize('s'),
                m : pluralize('m'),
                mm : pluralize('m'),
                h : pluralize('h'),
                hh : pluralize('h'),
                d : pluralize('d'),
                dd : pluralize('d'),
                M : pluralize('M'),
                MM : pluralize('M'),
                y : pluralize('y'),
                yy : pluralize('y')
            },
            preparse: function (string) {
                return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                }).replace(/،/g, ',');
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                }).replace(/,/g, '،');
            },
            week : {
                dow : 6, // Saturday is the first day of the week.
                doy : 12  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return ar;
    
        })));
    
    
    /***/ }),
    /* 8 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Arabic (Algeria) [ar-dz]
        //! author : Noureddine LOUAHEDJ : https://github.com/noureddineme
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var arDz = moment.defineLocale('ar-dz', {
            months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
            monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
            weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[اليوم على الساعة] LT',
                nextDay: '[غدا على الساعة] LT',
                nextWeek: 'dddd [على الساعة] LT',
                lastDay: '[أمس على الساعة] LT',
                lastWeek: 'dddd [على الساعة] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'في %s',
                past : 'منذ %s',
                s : 'ثوان',
                m : 'دقيقة',
                mm : '%d دقائق',
                h : 'ساعة',
                hh : '%d ساعات',
                d : 'يوم',
                dd : '%d أيام',
                M : 'شهر',
                MM : '%d أشهر',
                y : 'سنة',
                yy : '%d سنوات'
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 4  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return arDz;
    
        })));
    
    
    /***/ }),
    /* 9 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Arabic (Kuwait) [ar-kw]
        //! author : Nusret Parlak: https://github.com/nusretparlak
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var arKw = moment.defineLocale('ar-kw', {
            months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
            monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
            weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[اليوم على الساعة] LT',
                nextDay: '[غدا على الساعة] LT',
                nextWeek: 'dddd [على الساعة] LT',
                lastDay: '[أمس على الساعة] LT',
                lastWeek: 'dddd [على الساعة] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'في %s',
                past : 'منذ %s',
                s : 'ثوان',
                m : 'دقيقة',
                mm : '%d دقائق',
                h : 'ساعة',
                hh : '%d ساعات',
                d : 'يوم',
                dd : '%d أيام',
                M : 'شهر',
                MM : '%d أشهر',
                y : 'سنة',
                yy : '%d سنوات'
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 12  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return arKw;
    
        })));
    
    
    /***/ }),
    /* 10 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Arabic (Lybia) [ar-ly]
        //! author : Ali Hmer: https://github.com/kikoanis
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '1',
            '2': '2',
            '3': '3',
            '4': '4',
            '5': '5',
            '6': '6',
            '7': '7',
            '8': '8',
            '9': '9',
            '0': '0'
        };
        var pluralForm = function (n) {
            return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
        };
        var plurals = {
            s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
            m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
            h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
            d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
            M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
            y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
        };
        var pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        };
        var months = [
            'يناير',
            'فبراير',
            'مارس',
            'أبريل',
            'مايو',
            'يونيو',
            'يوليو',
            'أغسطس',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر'
        ];
    
        var arLy = moment.defineLocale('ar-ly', {
            months : months,
            monthsShort : months,
            weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'D/\u200FM/\u200FYYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            meridiemParse: /ص|م/,
            isPM : function (input) {
                return 'م' === input;
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'ص';
                } else {
                    return 'م';
                }
            },
            calendar : {
                sameDay: '[اليوم عند الساعة] LT',
                nextDay: '[غدًا عند الساعة] LT',
                nextWeek: 'dddd [عند الساعة] LT',
                lastDay: '[أمس عند الساعة] LT',
                lastWeek: 'dddd [عند الساعة] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'بعد %s',
                past : 'منذ %s',
                s : pluralize('s'),
                m : pluralize('m'),
                mm : pluralize('m'),
                h : pluralize('h'),
                hh : pluralize('h'),
                d : pluralize('d'),
                dd : pluralize('d'),
                M : pluralize('M'),
                MM : pluralize('M'),
                y : pluralize('y'),
                yy : pluralize('y')
            },
            preparse: function (string) {
                return string.replace(/\u200f/g, '').replace(/،/g, ',');
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                }).replace(/,/g, '،');
            },
            week : {
                dow : 6, // Saturday is the first day of the week.
                doy : 12  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return arLy;
    
        })));
    
    
    /***/ }),
    /* 11 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Arabic (Morocco) [ar-ma]
        //! author : ElFadili Yassine : https://github.com/ElFadiliY
        //! author : Abdel Said : https://github.com/abdelsaid
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var arMa = moment.defineLocale('ar-ma', {
            months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
            monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
            weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[اليوم على الساعة] LT',
                nextDay: '[غدا على الساعة] LT',
                nextWeek: 'dddd [على الساعة] LT',
                lastDay: '[أمس على الساعة] LT',
                lastWeek: 'dddd [على الساعة] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'في %s',
                past : 'منذ %s',
                s : 'ثوان',
                m : 'دقيقة',
                mm : '%d دقائق',
                h : 'ساعة',
                hh : '%d ساعات',
                d : 'يوم',
                dd : '%d أيام',
                M : 'شهر',
                MM : '%d أشهر',
                y : 'سنة',
                yy : '%d سنوات'
            },
            week : {
                dow : 6, // Saturday is the first day of the week.
                doy : 12  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return arMa;
    
        })));
    
    
    /***/ }),
    /* 12 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Arabic (Saudi Arabia) [ar-sa]
        //! author : Suhail Alkowaileet : https://github.com/xsoh
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '١',
            '2': '٢',
            '3': '٣',
            '4': '٤',
            '5': '٥',
            '6': '٦',
            '7': '٧',
            '8': '٨',
            '9': '٩',
            '0': '٠'
        };
        var numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0'
        };
    
        var arSa = moment.defineLocale('ar-sa', {
            months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
            monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
            weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            meridiemParse: /ص|م/,
            isPM : function (input) {
                return 'م' === input;
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'ص';
                } else {
                    return 'م';
                }
            },
            calendar : {
                sameDay: '[اليوم على الساعة] LT',
                nextDay: '[غدا على الساعة] LT',
                nextWeek: 'dddd [على الساعة] LT',
                lastDay: '[أمس على الساعة] LT',
                lastWeek: 'dddd [على الساعة] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'في %s',
                past : 'منذ %s',
                s : 'ثوان',
                m : 'دقيقة',
                mm : '%d دقائق',
                h : 'ساعة',
                hh : '%d ساعات',
                d : 'يوم',
                dd : '%d أيام',
                M : 'شهر',
                MM : '%d أشهر',
                y : 'سنة',
                yy : '%d سنوات'
            },
            preparse: function (string) {
                return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                }).replace(/،/g, ',');
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                }).replace(/,/g, '،');
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return arSa;
    
        })));
    
    
    /***/ }),
    /* 13 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale  :  Arabic (Tunisia) [ar-tn]
        //! author : Nader Toukabri : https://github.com/naderio
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var arTn = moment.defineLocale('ar-tn', {
            months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
            monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
            weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact : true,
            longDateFormat: {
                LT: 'HH:mm',
                LTS: 'HH:mm:ss',
                L: 'DD/MM/YYYY',
                LL: 'D MMMM YYYY',
                LLL: 'D MMMM YYYY HH:mm',
                LLLL: 'dddd D MMMM YYYY HH:mm'
            },
            calendar: {
                sameDay: '[اليوم على الساعة] LT',
                nextDay: '[غدا على الساعة] LT',
                nextWeek: 'dddd [على الساعة] LT',
                lastDay: '[أمس على الساعة] LT',
                lastWeek: 'dddd [على الساعة] LT',
                sameElse: 'L'
            },
            relativeTime: {
                future: 'في %s',
                past: 'منذ %s',
                s: 'ثوان',
                m: 'دقيقة',
                mm: '%d دقائق',
                h: 'ساعة',
                hh: '%d ساعات',
                d: 'يوم',
                dd: '%d أيام',
                M: 'شهر',
                MM: '%d أشهر',
                y: 'سنة',
                yy: '%d سنوات'
            },
            week: {
                dow: 1, // Monday is the first day of the week.
                doy: 4 // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return arTn;
    
        })));
    
    
    /***/ }),
    /* 14 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Azerbaijani [az]
        //! author : topchiyev : https://github.com/topchiyev
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var suffixes = {
            1: '-inci',
            5: '-inci',
            8: '-inci',
            70: '-inci',
            80: '-inci',
            2: '-nci',
            7: '-nci',
            20: '-nci',
            50: '-nci',
            3: '-üncü',
            4: '-üncü',
            100: '-üncü',
            6: '-ncı',
            9: '-uncu',
            10: '-uncu',
            30: '-uncu',
            60: '-ıncı',
            90: '-ıncı'
        };
    
        var az = moment.defineLocale('az', {
            months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
            monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
            weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
            weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
            weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[bugün saat] LT',
                nextDay : '[sabah saat] LT',
                nextWeek : '[gələn həftə] dddd [saat] LT',
                lastDay : '[dünən] LT',
                lastWeek : '[keçən həftə] dddd [saat] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s sonra',
                past : '%s əvvəl',
                s : 'birneçə saniyyə',
                m : 'bir dəqiqə',
                mm : '%d dəqiqə',
                h : 'bir saat',
                hh : '%d saat',
                d : 'bir gün',
                dd : '%d gün',
                M : 'bir ay',
                MM : '%d ay',
                y : 'bir il',
                yy : '%d il'
            },
            meridiemParse: /gecə|səhər|gündüz|axşam/,
            isPM : function (input) {
                return /^(gündüz|axşam)$/.test(input);
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'gecə';
                } else if (hour < 12) {
                    return 'səhər';
                } else if (hour < 17) {
                    return 'gündüz';
                } else {
                    return 'axşam';
                }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
            ordinal : function (number) {
                if (number === 0) {  // special case for zero
                    return number + '-ıncı';
                }
                var a = number % 10,
                    b = number % 100 - a,
                    c = number >= 100 ? 100 : null;
                return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return az;
    
        })));
    
    
    /***/ }),
    /* 15 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Belarusian [be]
        //! author : Dmitry Demidov : https://github.com/demidov91
        //! author: Praleska: http://praleska.pro/
        //! Author : Menelion Elensúle : https://github.com/Oire
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function plural(word, num) {
            var forms = word.split('_');
            return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
                'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
                'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
                'dd': 'дзень_дні_дзён',
                'MM': 'месяц_месяцы_месяцаў',
                'yy': 'год_гады_гадоў'
            };
            if (key === 'm') {
                return withoutSuffix ? 'хвіліна' : 'хвіліну';
            }
            else if (key === 'h') {
                return withoutSuffix ? 'гадзіна' : 'гадзіну';
            }
            else {
                return number + ' ' + plural(format[key], +number);
            }
        }
    
        var be = moment.defineLocale('be', {
            months : {
                format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
                standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
            },
            monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
            weekdays : {
                format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
                standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
                isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
            },
            weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
            weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY г.',
                LLL : 'D MMMM YYYY г., HH:mm',
                LLLL : 'dddd, D MMMM YYYY г., HH:mm'
            },
            calendar : {
                sameDay: '[Сёння ў] LT',
                nextDay: '[Заўтра ў] LT',
                lastDay: '[Учора ў] LT',
                nextWeek: function () {
                    return '[У] dddd [ў] LT';
                },
                lastWeek: function () {
                    switch (this.day()) {
                        case 0:
                        case 3:
                        case 5:
                        case 6:
                            return '[У мінулую] dddd [ў] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[У мінулы] dddd [ў] LT';
                    }
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'праз %s',
                past : '%s таму',
                s : 'некалькі секунд',
                m : relativeTimeWithPlural,
                mm : relativeTimeWithPlural,
                h : relativeTimeWithPlural,
                hh : relativeTimeWithPlural,
                d : 'дзень',
                dd : relativeTimeWithPlural,
                M : 'месяц',
                MM : relativeTimeWithPlural,
                y : 'год',
                yy : relativeTimeWithPlural
            },
            meridiemParse: /ночы|раніцы|дня|вечара/,
            isPM : function (input) {
                return /^(дня|вечара)$/.test(input);
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'ночы';
                } else if (hour < 12) {
                    return 'раніцы';
                } else if (hour < 17) {
                    return 'дня';
                } else {
                    return 'вечара';
                }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
            ordinal: function (number, period) {
                switch (period) {
                    case 'M':
                    case 'd':
                    case 'DDD':
                    case 'w':
                    case 'W':
                        return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
                    case 'D':
                        return number + '-га';
                    default:
                        return number;
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return be;
    
        })));
    
    
    /***/ }),
    /* 16 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Bulgarian [bg]
        //! author : Krasen Borisov : https://github.com/kraz
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var bg = moment.defineLocale('bg', {
            months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
            monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
            weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
            weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
            weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'D.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY H:mm',
                LLLL : 'dddd, D MMMM YYYY H:mm'
            },
            calendar : {
                sameDay : '[Днес в] LT',
                nextDay : '[Утре в] LT',
                nextWeek : 'dddd [в] LT',
                lastDay : '[Вчера в] LT',
                lastWeek : function () {
                    switch (this.day()) {
                        case 0:
                        case 3:
                        case 6:
                            return '[В изминалата] dddd [в] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[В изминалия] dddd [в] LT';
                    }
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'след %s',
                past : 'преди %s',
                s : 'няколко секунди',
                m : 'минута',
                mm : '%d минути',
                h : 'час',
                hh : '%d часа',
                d : 'ден',
                dd : '%d дни',
                M : 'месец',
                MM : '%d месеца',
                y : 'година',
                yy : '%d години'
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal : function (number) {
                var lastDigit = number % 10,
                    last2Digits = number % 100;
                if (number === 0) {
                    return number + '-ев';
                } else if (last2Digits === 0) {
                    return number + '-ен';
                } else if (last2Digits > 10 && last2Digits < 20) {
                    return number + '-ти';
                } else if (lastDigit === 1) {
                    return number + '-ви';
                } else if (lastDigit === 2) {
                    return number + '-ри';
                } else if (lastDigit === 7 || lastDigit === 8) {
                    return number + '-ми';
                } else {
                    return number + '-ти';
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return bg;
    
        })));
    
    
    /***/ }),
    /* 17 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Bengali [bn]
        //! author : Kaushik Gandhi : https://github.com/kaushikgandhi
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '১',
            '2': '২',
            '3': '৩',
            '4': '৪',
            '5': '৫',
            '6': '৬',
            '7': '৭',
            '8': '৮',
            '9': '৯',
            '0': '০'
        };
        var numberMap = {
            '১': '1',
            '২': '2',
            '৩': '3',
            '৪': '4',
            '৫': '5',
            '৬': '6',
            '৭': '7',
            '৮': '8',
            '৯': '9',
            '০': '0'
        };
    
        var bn = moment.defineLocale('bn', {
            months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
            monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
            weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
            weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
            weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
            longDateFormat : {
                LT : 'A h:mm সময়',
                LTS : 'A h:mm:ss সময়',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm সময়',
                LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
            },
            calendar : {
                sameDay : '[আজ] LT',
                nextDay : '[আগামীকাল] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[গতকাল] LT',
                lastWeek : '[গত] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s পরে',
                past : '%s আগে',
                s : 'কয়েক সেকেন্ড',
                m : 'এক মিনিট',
                mm : '%d মিনিট',
                h : 'এক ঘন্টা',
                hh : '%d ঘন্টা',
                d : 'এক দিন',
                dd : '%d দিন',
                M : 'এক মাস',
                MM : '%d মাস',
                y : 'এক বছর',
                yy : '%d বছর'
            },
            preparse: function (string) {
                return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if ((meridiem === 'রাত' && hour >= 4) ||
                        (meridiem === 'দুপুর' && hour < 5) ||
                        meridiem === 'বিকাল') {
                    return hour + 12;
                } else {
                    return hour;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'রাত';
                } else if (hour < 10) {
                    return 'সকাল';
                } else if (hour < 17) {
                    return 'দুপুর';
                } else if (hour < 20) {
                    return 'বিকাল';
                } else {
                    return 'রাত';
                }
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return bn;
    
        })));
    
    
    /***/ }),
    /* 18 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Tibetan [bo]
        //! author : Thupten N. Chakrishar : https://github.com/vajradog
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '༡',
            '2': '༢',
            '3': '༣',
            '4': '༤',
            '5': '༥',
            '6': '༦',
            '7': '༧',
            '8': '༨',
            '9': '༩',
            '0': '༠'
        };
        var numberMap = {
            '༡': '1',
            '༢': '2',
            '༣': '3',
            '༤': '4',
            '༥': '5',
            '༦': '6',
            '༧': '7',
            '༨': '8',
            '༩': '9',
            '༠': '0'
        };
    
        var bo = moment.defineLocale('bo', {
            months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
            monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
            weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
            weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
            weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
            longDateFormat : {
                LT : 'A h:mm',
                LTS : 'A h:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm',
                LLLL : 'dddd, D MMMM YYYY, A h:mm'
            },
            calendar : {
                sameDay : '[དི་རིང] LT',
                nextDay : '[སང་ཉིན] LT',
                nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
                lastDay : '[ཁ་སང] LT',
                lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s ལ་',
                past : '%s སྔན་ལ',
                s : 'ལམ་སང',
                m : 'སྐར་མ་གཅིག',
                mm : '%d སྐར་མ',
                h : 'ཆུ་ཚོད་གཅིག',
                hh : '%d ཆུ་ཚོད',
                d : 'ཉིན་གཅིག',
                dd : '%d ཉིན་',
                M : 'ཟླ་བ་གཅིག',
                MM : '%d ཟླ་བ',
                y : 'ལོ་གཅིག',
                yy : '%d ལོ'
            },
            preparse: function (string) {
                return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                        (meridiem === 'ཉིན་གུང' && hour < 5) ||
                        meridiem === 'དགོང་དག') {
                    return hour + 12;
                } else {
                    return hour;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'མཚན་མོ';
                } else if (hour < 10) {
                    return 'ཞོགས་ཀས';
                } else if (hour < 17) {
                    return 'ཉིན་གུང';
                } else if (hour < 20) {
                    return 'དགོང་དག';
                } else {
                    return 'མཚན་མོ';
                }
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return bo;
    
        })));
    
    
    /***/ }),
    /* 19 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Breton [br]
        //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function relativeTimeWithMutation(number, withoutSuffix, key) {
            var format = {
                'mm': 'munutenn',
                'MM': 'miz',
                'dd': 'devezh'
            };
            return number + ' ' + mutation(format[key], number);
        }
        function specialMutationForYears(number) {
            switch (lastNumber(number)) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 9:
                    return number + ' bloaz';
                default:
                    return number + ' vloaz';
            }
        }
        function lastNumber(number) {
            if (number > 9) {
                return lastNumber(number % 10);
            }
            return number;
        }
        function mutation(text, number) {
            if (number === 2) {
                return softMutation(text);
            }
            return text;
        }
        function softMutation(text) {
            var mutationTable = {
                'm': 'v',
                'b': 'v',
                'd': 'z'
            };
            if (mutationTable[text.charAt(0)] === undefined) {
                return text;
            }
            return mutationTable[text.charAt(0)] + text.substring(1);
        }
    
        var br = moment.defineLocale('br', {
            months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
            monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
            weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
            weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
            weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'h[e]mm A',
                LTS : 'h[e]mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D [a viz] MMMM YYYY',
                LLL : 'D [a viz] MMMM YYYY h[e]mm A',
                LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
            },
            calendar : {
                sameDay : '[Hiziv da] LT',
                nextDay : '[Warc\'hoazh da] LT',
                nextWeek : 'dddd [da] LT',
                lastDay : '[Dec\'h da] LT',
                lastWeek : 'dddd [paset da] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'a-benn %s',
                past : '%s \'zo',
                s : 'un nebeud segondennoù',
                m : 'ur vunutenn',
                mm : relativeTimeWithMutation,
                h : 'un eur',
                hh : '%d eur',
                d : 'un devezh',
                dd : relativeTimeWithMutation,
                M : 'ur miz',
                MM : relativeTimeWithMutation,
                y : 'ur bloaz',
                yy : specialMutationForYears
            },
            dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
            ordinal : function (number) {
                var output = (number === 1) ? 'añ' : 'vet';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return br;
    
        })));
    
    
    /***/ }),
    /* 20 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Bosnian [bs]
        //! author : Nedim Cholich : https://github.com/frontyard
        //! based on (hr) translation by Bojan Marković
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function translate(number, withoutSuffix, key) {
            var result = number + ' ';
            switch (key) {
                case 'm':
                    return withoutSuffix ? 'jedna minuta' : 'jedne minute';
                case 'mm':
                    if (number === 1) {
                        result += 'minuta';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'minute';
                    } else {
                        result += 'minuta';
                    }
                    return result;
                case 'h':
                    return withoutSuffix ? 'jedan sat' : 'jednog sata';
                case 'hh':
                    if (number === 1) {
                        result += 'sat';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'sata';
                    } else {
                        result += 'sati';
                    }
                    return result;
                case 'dd':
                    if (number === 1) {
                        result += 'dan';
                    } else {
                        result += 'dana';
                    }
                    return result;
                case 'MM':
                    if (number === 1) {
                        result += 'mjesec';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'mjeseca';
                    } else {
                        result += 'mjeseci';
                    }
                    return result;
                case 'yy':
                    if (number === 1) {
                        result += 'godina';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'godine';
                    } else {
                        result += 'godina';
                    }
                    return result;
            }
        }
    
        var bs = moment.defineLocale('bs', {
            months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
            monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
            monthsParseExact: true,
            weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
            weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
            weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY H:mm',
                LLLL : 'dddd, D. MMMM YYYY H:mm'
            },
            calendar : {
                sameDay  : '[danas u] LT',
                nextDay  : '[sutra u] LT',
                nextWeek : function () {
                    switch (this.day()) {
                        case 0:
                            return '[u] [nedjelju] [u] LT';
                        case 3:
                            return '[u] [srijedu] [u] LT';
                        case 6:
                            return '[u] [subotu] [u] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[u] dddd [u] LT';
                    }
                },
                lastDay  : '[jučer u] LT',
                lastWeek : function () {
                    switch (this.day()) {
                        case 0:
                        case 3:
                            return '[prošlu] dddd [u] LT';
                        case 6:
                            return '[prošle] [subote] [u] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[prošli] dddd [u] LT';
                    }
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'za %s',
                past   : 'prije %s',
                s      : 'par sekundi',
                m      : translate,
                mm     : translate,
                h      : translate,
                hh     : translate,
                d      : 'dan',
                dd     : translate,
                M      : 'mjesec',
                MM     : translate,
                y      : 'godinu',
                yy     : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return bs;
    
        })));
    
    
    /***/ }),
    /* 21 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Catalan [ca]
        //! author : Juan G. Hurtado : https://github.com/juanghurtado
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var ca = moment.defineLocale('ca', {
            months : {
                standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
                format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
                isFormat: /D[oD]?(\s)+MMMM/
            },
            monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
            monthsParseExact : true,
            weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
            weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
            weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD/MM/YYYY',
                LL : '[el] D MMMM [de] YYYY',
                ll : 'D MMM YYYY',
                LLL : '[el] D MMMM [de] YYYY [a les] H:mm',
                lll : 'D MMM YYYY, H:mm',
                LLLL : '[el] dddd D MMMM [de] YYYY [a les] H:mm',
                llll : 'ddd D MMM YYYY, H:mm'
            },
            calendar : {
                sameDay : function () {
                    return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
                },
                nextDay : function () {
                    return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
                },
                nextWeek : function () {
                    return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
                },
                lastDay : function () {
                    return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
                },
                lastWeek : function () {
                    return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'd\'aquí %s',
                past : 'fa %s',
                s : 'uns segons',
                m : 'un minut',
                mm : '%d minuts',
                h : 'una hora',
                hh : '%d hores',
                d : 'un dia',
                dd : '%d dies',
                M : 'un mes',
                MM : '%d mesos',
                y : 'un any',
                yy : '%d anys'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
            ordinal : function (number, period) {
                var output = (number === 1) ? 'r' :
                    (number === 2) ? 'n' :
                    (number === 3) ? 'r' :
                    (number === 4) ? 't' : 'è';
                if (period === 'w' || period === 'W') {
                    output = 'a';
                }
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return ca;
    
        })));
    
    
    /***/ }),
    /* 22 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Czech [cs]
        //! author : petrbela : https://github.com/petrbela
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
        var monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
        function plural(n) {
            return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
        }
        function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' ';
            switch (key) {
                case 's':  // a few seconds / in a few seconds / a few seconds ago
                    return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
                case 'm':  // a minute / in a minute / a minute ago
                    return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
                case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'minuty' : 'minut');
                    } else {
                        return result + 'minutami';
                    }
                    break;
                case 'h':  // an hour / in an hour / an hour ago
                    return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
                case 'hh': // 9 hours / in 9 hours / 9 hours ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'hodiny' : 'hodin');
                    } else {
                        return result + 'hodinami';
                    }
                    break;
                case 'd':  // a day / in a day / a day ago
                    return (withoutSuffix || isFuture) ? 'den' : 'dnem';
                case 'dd': // 9 days / in 9 days / 9 days ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'dny' : 'dní');
                    } else {
                        return result + 'dny';
                    }
                    break;
                case 'M':  // a month / in a month / a month ago
                    return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
                case 'MM': // 9 months / in 9 months / 9 months ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'měsíce' : 'měsíců');
                    } else {
                        return result + 'měsíci';
                    }
                    break;
                case 'y':  // a year / in a year / a year ago
                    return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
                case 'yy': // 9 years / in 9 years / 9 years ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'roky' : 'let');
                    } else {
                        return result + 'lety';
                    }
                    break;
            }
        }
    
        var cs = moment.defineLocale('cs', {
            months : months,
            monthsShort : monthsShort,
            monthsParse : (function (months, monthsShort) {
                var i, _monthsParse = [];
                for (i = 0; i < 12; i++) {
                    // use custom parser to solve problem with July (červenec)
                    _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
                }
                return _monthsParse;
            }(months, monthsShort)),
            shortMonthsParse : (function (monthsShort) {
                var i, _shortMonthsParse = [];
                for (i = 0; i < 12; i++) {
                    _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
                }
                return _shortMonthsParse;
            }(monthsShort)),
            longMonthsParse : (function (months) {
                var i, _longMonthsParse = [];
                for (i = 0; i < 12; i++) {
                    _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
                }
                return _longMonthsParse;
            }(months)),
            weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
            weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
            weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
            longDateFormat : {
                LT: 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY H:mm',
                LLLL : 'dddd D. MMMM YYYY H:mm',
                l : 'D. M. YYYY'
            },
            calendar : {
                sameDay: '[dnes v] LT',
                nextDay: '[zítra v] LT',
                nextWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[v neděli v] LT';
                        case 1:
                        case 2:
                            return '[v] dddd [v] LT';
                        case 3:
                            return '[ve středu v] LT';
                        case 4:
                            return '[ve čtvrtek v] LT';
                        case 5:
                            return '[v pátek v] LT';
                        case 6:
                            return '[v sobotu v] LT';
                    }
                },
                lastDay: '[včera v] LT',
                lastWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[minulou neděli v] LT';
                        case 1:
                        case 2:
                            return '[minulé] dddd [v] LT';
                        case 3:
                            return '[minulou středu v] LT';
                        case 4:
                        case 5:
                            return '[minulý] dddd [v] LT';
                        case 6:
                            return '[minulou sobotu v] LT';
                    }
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'za %s',
                past : 'před %s',
                s : translate,
                m : translate,
                mm : translate,
                h : translate,
                hh : translate,
                d : translate,
                dd : translate,
                M : translate,
                MM : translate,
                y : translate,
                yy : translate
            },
            dayOfMonthOrdinalParse : /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return cs;
    
        })));
    
    
    /***/ }),
    /* 23 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Chuvash [cv]
        //! author : Anatoly Mironov : https://github.com/mirontoli
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var cv = moment.defineLocale('cv', {
            months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
            monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
            weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
            weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
            weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD-MM-YYYY',
                LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
                LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
                LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
            },
            calendar : {
                sameDay: '[Паян] LT [сехетре]',
                nextDay: '[Ыран] LT [сехетре]',
                lastDay: '[Ӗнер] LT [сехетре]',
                nextWeek: '[Ҫитес] dddd LT [сехетре]',
                lastWeek: '[Иртнӗ] dddd LT [сехетре]',
                sameElse: 'L'
            },
            relativeTime : {
                future : function (output) {
                    var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                    return output + affix;
                },
                past : '%s каялла',
                s : 'пӗр-ик ҫеккунт',
                m : 'пӗр минут',
                mm : '%d минут',
                h : 'пӗр сехет',
                hh : '%d сехет',
                d : 'пӗр кун',
                dd : '%d кун',
                M : 'пӗр уйӑх',
                MM : '%d уйӑх',
                y : 'пӗр ҫул',
                yy : '%d ҫул'
            },
            dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
            ordinal : '%d-мӗш',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return cv;
    
        })));
    
    
    /***/ }),
    /* 24 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Welsh [cy]
        //! author : Robert Allen : https://github.com/robgallen
        //! author : https://github.com/ryangreaves
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var cy = moment.defineLocale('cy', {
            months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
            monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
            weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
            weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
            weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
            weekdaysParseExact : true,
            // time formats are the same as en-gb
            longDateFormat: {
                LT: 'HH:mm',
                LTS : 'HH:mm:ss',
                L: 'DD/MM/YYYY',
                LL: 'D MMMM YYYY',
                LLL: 'D MMMM YYYY HH:mm',
                LLLL: 'dddd, D MMMM YYYY HH:mm'
            },
            calendar: {
                sameDay: '[Heddiw am] LT',
                nextDay: '[Yfory am] LT',
                nextWeek: 'dddd [am] LT',
                lastDay: '[Ddoe am] LT',
                lastWeek: 'dddd [diwethaf am] LT',
                sameElse: 'L'
            },
            relativeTime: {
                future: 'mewn %s',
                past: '%s yn ôl',
                s: 'ychydig eiliadau',
                m: 'munud',
                mm: '%d munud',
                h: 'awr',
                hh: '%d awr',
                d: 'diwrnod',
                dd: '%d diwrnod',
                M: 'mis',
                MM: '%d mis',
                y: 'blwyddyn',
                yy: '%d flynedd'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
            // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
            ordinal: function (number) {
                var b = number,
                    output = '',
                    lookup = [
                        '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                        'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
                    ];
                if (b > 20) {
                    if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                        output = 'fed'; // not 30ain, 70ain or 90ain
                    } else {
                        output = 'ain';
                    }
                } else if (b > 0) {
                    output = lookup[b];
                }
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return cy;
    
        })));
    
    
    /***/ }),
    /* 25 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Danish [da]
        //! author : Ulrik Nielsen : https://github.com/mrbase
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var da = moment.defineLocale('da', {
            months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
            monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
            weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
            weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY HH:mm',
                LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
            },
            calendar : {
                sameDay : '[i dag kl.] LT',
                nextDay : '[i morgen kl.] LT',
                nextWeek : 'på dddd [kl.] LT',
                lastDay : '[i går kl.] LT',
                lastWeek : '[i] dddd[s kl.] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'om %s',
                past : '%s siden',
                s : 'få sekunder',
                m : 'et minut',
                mm : '%d minutter',
                h : 'en time',
                hh : '%d timer',
                d : 'en dag',
                dd : '%d dage',
                M : 'en måned',
                MM : '%d måneder',
                y : 'et år',
                yy : '%d år'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return da;
    
        })));
    
    
    /***/ }),
    /* 26 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : German [de]
        //! author : lluchs : https://github.com/lluchs
        //! author: Menelion Elensúle: https://github.com/Oire
        //! author : Mikolaj Dadela : https://github.com/mik01aj
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
                'm': ['eine Minute', 'einer Minute'],
                'h': ['eine Stunde', 'einer Stunde'],
                'd': ['ein Tag', 'einem Tag'],
                'dd': [number + ' Tage', number + ' Tagen'],
                'M': ['ein Monat', 'einem Monat'],
                'MM': [number + ' Monate', number + ' Monaten'],
                'y': ['ein Jahr', 'einem Jahr'],
                'yy': [number + ' Jahre', number + ' Jahren']
            };
            return withoutSuffix ? format[key][0] : format[key][1];
        }
    
        var de = moment.defineLocale('de', {
            months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
            monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
            monthsParseExact : true,
            weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
            weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
            weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT: 'HH:mm',
                LTS: 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY HH:mm',
                LLLL : 'dddd, D. MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[heute um] LT [Uhr]',
                sameElse: 'L',
                nextDay: '[morgen um] LT [Uhr]',
                nextWeek: 'dddd [um] LT [Uhr]',
                lastDay: '[gestern um] LT [Uhr]',
                lastWeek: '[letzten] dddd [um] LT [Uhr]'
            },
            relativeTime : {
                future : 'in %s',
                past : 'vor %s',
                s : 'ein paar Sekunden',
                m : processRelativeTime,
                mm : '%d Minuten',
                h : processRelativeTime,
                hh : '%d Stunden',
                d : processRelativeTime,
                dd : processRelativeTime,
                M : processRelativeTime,
                MM : processRelativeTime,
                y : processRelativeTime,
                yy : processRelativeTime
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return de;
    
        })));
    
    
    /***/ }),
    /* 27 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : German (Austria) [de-at]
        //! author : lluchs : https://github.com/lluchs
        //! author: Menelion Elensúle: https://github.com/Oire
        //! author : Martin Groller : https://github.com/MadMG
        //! author : Mikolaj Dadela : https://github.com/mik01aj
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
                'm': ['eine Minute', 'einer Minute'],
                'h': ['eine Stunde', 'einer Stunde'],
                'd': ['ein Tag', 'einem Tag'],
                'dd': [number + ' Tage', number + ' Tagen'],
                'M': ['ein Monat', 'einem Monat'],
                'MM': [number + ' Monate', number + ' Monaten'],
                'y': ['ein Jahr', 'einem Jahr'],
                'yy': [number + ' Jahre', number + ' Jahren']
            };
            return withoutSuffix ? format[key][0] : format[key][1];
        }
    
        var deAt = moment.defineLocale('de-at', {
            months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
            monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
            monthsParseExact : true,
            weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
            weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
            weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT: 'HH:mm',
                LTS: 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY HH:mm',
                LLLL : 'dddd, D. MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[heute um] LT [Uhr]',
                sameElse: 'L',
                nextDay: '[morgen um] LT [Uhr]',
                nextWeek: 'dddd [um] LT [Uhr]',
                lastDay: '[gestern um] LT [Uhr]',
                lastWeek: '[letzten] dddd [um] LT [Uhr]'
            },
            relativeTime : {
                future : 'in %s',
                past : 'vor %s',
                s : 'ein paar Sekunden',
                m : processRelativeTime,
                mm : '%d Minuten',
                h : processRelativeTime,
                hh : '%d Stunden',
                d : processRelativeTime,
                dd : processRelativeTime,
                M : processRelativeTime,
                MM : processRelativeTime,
                y : processRelativeTime,
                yy : processRelativeTime
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return deAt;
    
        })));
    
    
    /***/ }),
    /* 28 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : German (Switzerland) [de-ch]
        //! author : sschueller : https://github.com/sschueller
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        // based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
                'm': ['eine Minute', 'einer Minute'],
                'h': ['eine Stunde', 'einer Stunde'],
                'd': ['ein Tag', 'einem Tag'],
                'dd': [number + ' Tage', number + ' Tagen'],
                'M': ['ein Monat', 'einem Monat'],
                'MM': [number + ' Monate', number + ' Monaten'],
                'y': ['ein Jahr', 'einem Jahr'],
                'yy': [number + ' Jahre', number + ' Jahren']
            };
            return withoutSuffix ? format[key][0] : format[key][1];
        }
    
        var deCh = moment.defineLocale('de-ch', {
            months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
            monthsShort : 'Jan._Febr._März_April_Mai_Juni_Juli_Aug._Sept._Okt._Nov._Dez.'.split('_'),
            monthsParseExact : true,
            weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
            weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT: 'HH.mm',
                LTS: 'HH.mm.ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY HH.mm',
                LLLL : 'dddd, D. MMMM YYYY HH.mm'
            },
            calendar : {
                sameDay: '[heute um] LT [Uhr]',
                sameElse: 'L',
                nextDay: '[morgen um] LT [Uhr]',
                nextWeek: 'dddd [um] LT [Uhr]',
                lastDay: '[gestern um] LT [Uhr]',
                lastWeek: '[letzten] dddd [um] LT [Uhr]'
            },
            relativeTime : {
                future : 'in %s',
                past : 'vor %s',
                s : 'ein paar Sekunden',
                m : processRelativeTime,
                mm : '%d Minuten',
                h : processRelativeTime,
                hh : '%d Stunden',
                d : processRelativeTime,
                dd : processRelativeTime,
                M : processRelativeTime,
                MM : processRelativeTime,
                y : processRelativeTime,
                yy : processRelativeTime
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return deCh;
    
        })));
    
    
    /***/ }),
    /* 29 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Maldivian [dv]
        //! author : Jawish Hameed : https://github.com/jawish
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var months = [
            'ޖެނުއަރީ',
            'ފެބްރުއަރީ',
            'މާރިޗު',
            'އޭޕްރީލު',
            'މޭ',
            'ޖޫން',
            'ޖުލައި',
            'އޯގަސްޓު',
            'ސެޕްޓެމްބަރު',
            'އޮކްޓޯބަރު',
            'ނޮވެމްބަރު',
            'ޑިސެމްބަރު'
        ];
        var weekdays = [
            'އާދިއްތަ',
            'ހޯމަ',
            'އަންގާރަ',
            'ބުދަ',
            'ބުރާސްފަތި',
            'ހުކުރު',
            'ހޮނިހިރު'
        ];
    
        var dv = moment.defineLocale('dv', {
            months : months,
            monthsShort : months,
            weekdays : weekdays,
            weekdaysShort : weekdays,
            weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
            longDateFormat : {
    
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'D/M/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            meridiemParse: /މކ|މފ/,
            isPM : function (input) {
                return 'މފ' === input;
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'މކ';
                } else {
                    return 'މފ';
                }
            },
            calendar : {
                sameDay : '[މިއަދު] LT',
                nextDay : '[މާދަމާ] LT',
                nextWeek : 'dddd LT',
                lastDay : '[އިއްޔެ] LT',
                lastWeek : '[ފާއިތުވި] dddd LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'ތެރޭގައި %s',
                past : 'ކުރިން %s',
                s : 'ސިކުންތުކޮޅެއް',
                m : 'މިނިޓެއް',
                mm : 'މިނިޓު %d',
                h : 'ގަޑިއިރެއް',
                hh : 'ގަޑިއިރު %d',
                d : 'ދުވަހެއް',
                dd : 'ދުވަސް %d',
                M : 'މަހެއް',
                MM : 'މަސް %d',
                y : 'އަހަރެއް',
                yy : 'އަހަރު %d'
            },
            preparse: function (string) {
                return string.replace(/،/g, ',');
            },
            postformat: function (string) {
                return string.replace(/,/g, '،');
            },
            week : {
                dow : 7,  // Sunday is the first day of the week.
                doy : 12  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return dv;
    
        })));
    
    
    /***/ }),
    /* 30 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Greek [el]
        //! author : Aggelos Karalias : https://github.com/mehiel
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
        function isFunction(input) {
            return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
        }
    
    
        var el = moment.defineLocale('el', {
            monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
            monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
            months : function (momentToFormat, format) {
                if (!momentToFormat) {
                    return this._monthsNominativeEl;
                } else if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
                    return this._monthsGenitiveEl[momentToFormat.month()];
                } else {
                    return this._monthsNominativeEl[momentToFormat.month()];
                }
            },
            monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
            weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
            weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
            weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
            meridiem : function (hours, minutes, isLower) {
                if (hours > 11) {
                    return isLower ? 'μμ' : 'ΜΜ';
                } else {
                    return isLower ? 'πμ' : 'ΠΜ';
                }
            },
            isPM : function (input) {
                return ((input + '').toLowerCase()[0] === 'μ');
            },
            meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY h:mm A',
                LLLL : 'dddd, D MMMM YYYY h:mm A'
            },
            calendarEl : {
                sameDay : '[Σήμερα {}] LT',
                nextDay : '[Αύριο {}] LT',
                nextWeek : 'dddd [{}] LT',
                lastDay : '[Χθες {}] LT',
                lastWeek : function () {
                    switch (this.day()) {
                        case 6:
                            return '[το προηγούμενο] dddd [{}] LT';
                        default:
                            return '[την προηγούμενη] dddd [{}] LT';
                    }
                },
                sameElse : 'L'
            },
            calendar : function (key, mom) {
                var output = this._calendarEl[key],
                    hours = mom && mom.hours();
                if (isFunction(output)) {
                    output = output.apply(mom);
                }
                return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
            },
            relativeTime : {
                future : 'σε %s',
                past : '%s πριν',
                s : 'λίγα δευτερόλεπτα',
                m : 'ένα λεπτό',
                mm : '%d λεπτά',
                h : 'μία ώρα',
                hh : '%d ώρες',
                d : 'μία μέρα',
                dd : '%d μέρες',
                M : 'ένας μήνας',
                MM : '%d μήνες',
                y : 'ένας χρόνος',
                yy : '%d χρόνια'
            },
            dayOfMonthOrdinalParse: /\d{1,2}η/,
            ordinal: '%dη',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4st is the first week of the year.
            }
        });
    
        return el;
    
        })));
    
    
    /***/ }),
    /* 31 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : English (Australia) [en-au]
        //! author : Jared Morse : https://github.com/jarcoal
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var enAu = moment.defineLocale('en-au', {
            months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
            monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
            weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY h:mm A',
                LLLL : 'dddd, D MMMM YYYY h:mm A'
            },
            calendar : {
                sameDay : '[Today at] LT',
                nextDay : '[Tomorrow at] LT',
                nextWeek : 'dddd [at] LT',
                lastDay : '[Yesterday at] LT',
                lastWeek : '[Last] dddd [at] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'in %s',
                past : '%s ago',
                s : 'a few seconds',
                m : 'a minute',
                mm : '%d minutes',
                h : 'an hour',
                hh : '%d hours',
                d : 'a day',
                dd : '%d days',
                M : 'a month',
                MM : '%d months',
                y : 'a year',
                yy : '%d years'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return enAu;
    
        })));
    
    
    /***/ }),
    /* 32 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : English (Canada) [en-ca]
        //! author : Jonathan Abourbih : https://github.com/jonbca
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var enCa = moment.defineLocale('en-ca', {
            months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
            monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
            weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'YYYY-MM-DD',
                LL : 'MMMM D, YYYY',
                LLL : 'MMMM D, YYYY h:mm A',
                LLLL : 'dddd, MMMM D, YYYY h:mm A'
            },
            calendar : {
                sameDay : '[Today at] LT',
                nextDay : '[Tomorrow at] LT',
                nextWeek : 'dddd [at] LT',
                lastDay : '[Yesterday at] LT',
                lastWeek : '[Last] dddd [at] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'in %s',
                past : '%s ago',
                s : 'a few seconds',
                m : 'a minute',
                mm : '%d minutes',
                h : 'an hour',
                hh : '%d hours',
                d : 'a day',
                dd : '%d days',
                M : 'a month',
                MM : '%d months',
                y : 'a year',
                yy : '%d years'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            }
        });
    
        return enCa;
    
        })));
    
    
    /***/ }),
    /* 33 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : English (United Kingdom) [en-gb]
        //! author : Chris Gedrim : https://github.com/chrisgedrim
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var enGb = moment.defineLocale('en-gb', {
            months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
            monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
            weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Today at] LT',
                nextDay : '[Tomorrow at] LT',
                nextWeek : 'dddd [at] LT',
                lastDay : '[Yesterday at] LT',
                lastWeek : '[Last] dddd [at] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'in %s',
                past : '%s ago',
                s : 'a few seconds',
                m : 'a minute',
                mm : '%d minutes',
                h : 'an hour',
                hh : '%d hours',
                d : 'a day',
                dd : '%d days',
                M : 'a month',
                MM : '%d months',
                y : 'a year',
                yy : '%d years'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return enGb;
    
        })));
    
    
    /***/ }),
    /* 34 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : English (Ireland) [en-ie]
        //! author : Chris Cartlidge : https://github.com/chriscartlidge
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var enIe = moment.defineLocale('en-ie', {
            months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
            monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
            weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD-MM-YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Today at] LT',
                nextDay : '[Tomorrow at] LT',
                nextWeek : 'dddd [at] LT',
                lastDay : '[Yesterday at] LT',
                lastWeek : '[Last] dddd [at] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'in %s',
                past : '%s ago',
                s : 'a few seconds',
                m : 'a minute',
                mm : '%d minutes',
                h : 'an hour',
                hh : '%d hours',
                d : 'a day',
                dd : '%d days',
                M : 'a month',
                MM : '%d months',
                y : 'a year',
                yy : '%d years'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return enIe;
    
        })));
    
    
    /***/ }),
    /* 35 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : English (New Zealand) [en-nz]
        //! author : Luke McGregor : https://github.com/lukemcgregor
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var enNz = moment.defineLocale('en-nz', {
            months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
            monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
            weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY h:mm A',
                LLLL : 'dddd, D MMMM YYYY h:mm A'
            },
            calendar : {
                sameDay : '[Today at] LT',
                nextDay : '[Tomorrow at] LT',
                nextWeek : 'dddd [at] LT',
                lastDay : '[Yesterday at] LT',
                lastWeek : '[Last] dddd [at] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'in %s',
                past : '%s ago',
                s : 'a few seconds',
                m : 'a minute',
                mm : '%d minutes',
                h : 'an hour',
                hh : '%d hours',
                d : 'a day',
                dd : '%d days',
                M : 'a month',
                MM : '%d months',
                y : 'a year',
                yy : '%d years'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return enNz;
    
        })));
    
    
    /***/ }),
    /* 36 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Esperanto [eo]
        //! author : Colin Dean : https://github.com/colindean
        //! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
        //! comment : miestasmia corrected the translation by colindean
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var eo = moment.defineLocale('eo', {
            months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
            monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
            weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
            weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
            weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY-MM-DD',
                LL : 'D[-a de] MMMM, YYYY',
                LLL : 'D[-a de] MMMM, YYYY HH:mm',
                LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
            },
            meridiemParse: /[ap]\.t\.m/i,
            isPM: function (input) {
                return input.charAt(0).toLowerCase() === 'p';
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours > 11) {
                    return isLower ? 'p.t.m.' : 'P.T.M.';
                } else {
                    return isLower ? 'a.t.m.' : 'A.T.M.';
                }
            },
            calendar : {
                sameDay : '[Hodiaŭ je] LT',
                nextDay : '[Morgaŭ je] LT',
                nextWeek : 'dddd [je] LT',
                lastDay : '[Hieraŭ je] LT',
                lastWeek : '[pasinta] dddd [je] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'post %s',
                past : 'antaŭ %s',
                s : 'sekundoj',
                m : 'minuto',
                mm : '%d minutoj',
                h : 'horo',
                hh : '%d horoj',
                d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
                dd : '%d tagoj',
                M : 'monato',
                MM : '%d monatoj',
                y : 'jaro',
                yy : '%d jaroj'
            },
            dayOfMonthOrdinalParse: /\d{1,2}a/,
            ordinal : '%da',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return eo;
    
        })));
    
    
    /***/ }),
    /* 37 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Spanish [es]
        //! author : Julio Napurí : https://github.com/julionc
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
        var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
    
        var es = moment.defineLocale('es', {
            months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
            monthsShort : function (m, format) {
                if (!m) {
                    return monthsShortDot;
                } else if (/-MMM-/.test(format)) {
                    return monthsShort[m.month()];
                } else {
                    return monthsShortDot[m.month()];
                }
            },
            monthsParseExact : true,
            weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
            weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
            weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D [de] MMMM [de] YYYY',
                LLL : 'D [de] MMMM [de] YYYY H:mm',
                LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
            },
            calendar : {
                sameDay : function () {
                    return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                nextDay : function () {
                    return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                nextWeek : function () {
                    return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                lastDay : function () {
                    return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                lastWeek : function () {
                    return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'en %s',
                past : 'hace %s',
                s : 'unos segundos',
                m : 'un minuto',
                mm : '%d minutos',
                h : 'una hora',
                hh : '%d horas',
                d : 'un día',
                dd : '%d días',
                M : 'un mes',
                MM : '%d meses',
                y : 'un año',
                yy : '%d años'
            },
            dayOfMonthOrdinalParse : /\d{1,2}º/,
            ordinal : '%dº',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return es;
    
        })));
    
    
    /***/ }),
    /* 38 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Spanish (Dominican Republic) [es-do]
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
        var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
    
        var esDo = moment.defineLocale('es-do', {
            months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
            monthsShort : function (m, format) {
                if (!m) {
                    return monthsShortDot;
                } else if (/-MMM-/.test(format)) {
                    return monthsShort[m.month()];
                } else {
                    return monthsShortDot[m.month()];
                }
            },
            monthsParseExact : true,
            weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
            weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
            weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D [de] MMMM [de] YYYY',
                LLL : 'D [de] MMMM [de] YYYY h:mm A',
                LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
            },
            calendar : {
                sameDay : function () {
                    return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                nextDay : function () {
                    return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                nextWeek : function () {
                    return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                lastDay : function () {
                    return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                lastWeek : function () {
                    return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'en %s',
                past : 'hace %s',
                s : 'unos segundos',
                m : 'un minuto',
                mm : '%d minutos',
                h : 'una hora',
                hh : '%d horas',
                d : 'un día',
                dd : '%d días',
                M : 'un mes',
                MM : '%d meses',
                y : 'un año',
                yy : '%d años'
            },
            dayOfMonthOrdinalParse : /\d{1,2}º/,
            ordinal : '%dº',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return esDo;
    
        })));
    
    
    /***/ }),
    /* 39 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Estonian [et]
        //! author : Henry Kehlmann : https://github.com/madhenry
        //! improvements : Illimar Tambek : https://github.com/ragulka
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
                's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
                'm' : ['ühe minuti', 'üks minut'],
                'mm': [number + ' minuti', number + ' minutit'],
                'h' : ['ühe tunni', 'tund aega', 'üks tund'],
                'hh': [number + ' tunni', number + ' tundi'],
                'd' : ['ühe päeva', 'üks päev'],
                'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
                'MM': [number + ' kuu', number + ' kuud'],
                'y' : ['ühe aasta', 'aasta', 'üks aasta'],
                'yy': [number + ' aasta', number + ' aastat']
            };
            if (withoutSuffix) {
                return format[key][2] ? format[key][2] : format[key][1];
            }
            return isFuture ? format[key][0] : format[key][1];
        }
    
        var et = moment.defineLocale('et', {
            months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
            monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
            weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
            weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
            weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
            longDateFormat : {
                LT   : 'H:mm',
                LTS : 'H:mm:ss',
                L    : 'DD.MM.YYYY',
                LL   : 'D. MMMM YYYY',
                LLL  : 'D. MMMM YYYY H:mm',
                LLLL : 'dddd, D. MMMM YYYY H:mm'
            },
            calendar : {
                sameDay  : '[Täna,] LT',
                nextDay  : '[Homme,] LT',
                nextWeek : '[Järgmine] dddd LT',
                lastDay  : '[Eile,] LT',
                lastWeek : '[Eelmine] dddd LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s pärast',
                past   : '%s tagasi',
                s      : processRelativeTime,
                m      : processRelativeTime,
                mm     : processRelativeTime,
                h      : processRelativeTime,
                hh     : processRelativeTime,
                d      : processRelativeTime,
                dd     : '%d päeva',
                M      : processRelativeTime,
                MM     : processRelativeTime,
                y      : processRelativeTime,
                yy     : processRelativeTime
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return et;
    
        })));
    
    
    /***/ }),
    /* 40 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Basque [eu]
        //! author : Eneko Illarramendi : https://github.com/eillarra
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var eu = moment.defineLocale('eu', {
            months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
            monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
            monthsParseExact : true,
            weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
            weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
            weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY-MM-DD',
                LL : 'YYYY[ko] MMMM[ren] D[a]',
                LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
                LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
                l : 'YYYY-M-D',
                ll : 'YYYY[ko] MMM D[a]',
                lll : 'YYYY[ko] MMM D[a] HH:mm',
                llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
            },
            calendar : {
                sameDay : '[gaur] LT[etan]',
                nextDay : '[bihar] LT[etan]',
                nextWeek : 'dddd LT[etan]',
                lastDay : '[atzo] LT[etan]',
                lastWeek : '[aurreko] dddd LT[etan]',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s barru',
                past : 'duela %s',
                s : 'segundo batzuk',
                m : 'minutu bat',
                mm : '%d minutu',
                h : 'ordu bat',
                hh : '%d ordu',
                d : 'egun bat',
                dd : '%d egun',
                M : 'hilabete bat',
                MM : '%d hilabete',
                y : 'urte bat',
                yy : '%d urte'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return eu;
    
        })));
    
    
    /***/ }),
    /* 41 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Persian [fa]
        //! author : Ebrahim Byagowi : https://github.com/ebraminio
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '۱',
            '2': '۲',
            '3': '۳',
            '4': '۴',
            '5': '۵',
            '6': '۶',
            '7': '۷',
            '8': '۸',
            '9': '۹',
            '0': '۰'
        };
        var numberMap = {
            '۱': '1',
            '۲': '2',
            '۳': '3',
            '۴': '4',
            '۵': '5',
            '۶': '6',
            '۷': '7',
            '۸': '8',
            '۹': '9',
            '۰': '0'
        };
    
        var fa = moment.defineLocale('fa', {
            months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
            monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
            weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
            weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
            weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            meridiemParse: /قبل از ظهر|بعد از ظهر/,
            isPM: function (input) {
                return /بعد از ظهر/.test(input);
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'قبل از ظهر';
                } else {
                    return 'بعد از ظهر';
                }
            },
            calendar : {
                sameDay : '[امروز ساعت] LT',
                nextDay : '[فردا ساعت] LT',
                nextWeek : 'dddd [ساعت] LT',
                lastDay : '[دیروز ساعت] LT',
                lastWeek : 'dddd [پیش] [ساعت] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'در %s',
                past : '%s پیش',
                s : 'چند ثانیه',
                m : 'یک دقیقه',
                mm : '%d دقیقه',
                h : 'یک ساعت',
                hh : '%d ساعت',
                d : 'یک روز',
                dd : '%d روز',
                M : 'یک ماه',
                MM : '%d ماه',
                y : 'یک سال',
                yy : '%d سال'
            },
            preparse: function (string) {
                return string.replace(/[۰-۹]/g, function (match) {
                    return numberMap[match];
                }).replace(/،/g, ',');
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                }).replace(/,/g, '،');
            },
            dayOfMonthOrdinalParse: /\d{1,2}م/,
            ordinal : '%dم',
            week : {
                dow : 6, // Saturday is the first day of the week.
                doy : 12 // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return fa;
    
        })));
    
    
    /***/ }),
    /* 42 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Finnish [fi]
        //! author : Tarmo Aidantausta : https://github.com/bleadof
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
        var numbersFuture = [
                'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
                numbersPast[7], numbersPast[8], numbersPast[9]
            ];
        function translate(number, withoutSuffix, key, isFuture) {
            var result = '';
            switch (key) {
                case 's':
                    return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
                case 'm':
                    return isFuture ? 'minuutin' : 'minuutti';
                case 'mm':
                    result = isFuture ? 'minuutin' : 'minuuttia';
                    break;
                case 'h':
                    return isFuture ? 'tunnin' : 'tunti';
                case 'hh':
                    result = isFuture ? 'tunnin' : 'tuntia';
                    break;
                case 'd':
                    return isFuture ? 'päivän' : 'päivä';
                case 'dd':
                    result = isFuture ? 'päivän' : 'päivää';
                    break;
                case 'M':
                    return isFuture ? 'kuukauden' : 'kuukausi';
                case 'MM':
                    result = isFuture ? 'kuukauden' : 'kuukautta';
                    break;
                case 'y':
                    return isFuture ? 'vuoden' : 'vuosi';
                case 'yy':
                    result = isFuture ? 'vuoden' : 'vuotta';
                    break;
            }
            result = verbalNumber(number, isFuture) + ' ' + result;
            return result;
        }
        function verbalNumber(number, isFuture) {
            return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
        }
    
        var fi = moment.defineLocale('fi', {
            months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
            monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
            weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
            weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
            weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
            longDateFormat : {
                LT : 'HH.mm',
                LTS : 'HH.mm.ss',
                L : 'DD.MM.YYYY',
                LL : 'Do MMMM[ta] YYYY',
                LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
                LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
                l : 'D.M.YYYY',
                ll : 'Do MMM YYYY',
                lll : 'Do MMM YYYY, [klo] HH.mm',
                llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
            },
            calendar : {
                sameDay : '[tänään] [klo] LT',
                nextDay : '[huomenna] [klo] LT',
                nextWeek : 'dddd [klo] LT',
                lastDay : '[eilen] [klo] LT',
                lastWeek : '[viime] dddd[na] [klo] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s päästä',
                past : '%s sitten',
                s : translate,
                m : translate,
                mm : translate,
                h : translate,
                hh : translate,
                d : translate,
                dd : translate,
                M : translate,
                MM : translate,
                y : translate,
                yy : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return fi;
    
        })));
    
    
    /***/ }),
    /* 43 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Faroese [fo]
        //! author : Ragnar Johannesen : https://github.com/ragnar123
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var fo = moment.defineLocale('fo', {
            months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
            monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
            weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
            weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
            weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D. MMMM, YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Í dag kl.] LT',
                nextDay : '[Í morgin kl.] LT',
                nextWeek : 'dddd [kl.] LT',
                lastDay : '[Í gjár kl.] LT',
                lastWeek : '[síðstu] dddd [kl] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'um %s',
                past : '%s síðani',
                s : 'fá sekund',
                m : 'ein minutt',
                mm : '%d minuttir',
                h : 'ein tími',
                hh : '%d tímar',
                d : 'ein dagur',
                dd : '%d dagar',
                M : 'ein mánaði',
                MM : '%d mánaðir',
                y : 'eitt ár',
                yy : '%d ár'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return fo;
    
        })));
    
    
    /***/ }),
    /* 44 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : French [fr]
        //! author : John Fischer : https://github.com/jfroffice
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var fr = moment.defineLocale('fr', {
            months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
            monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
            monthsParseExact : true,
            weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
            weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
            weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Aujourd’hui à] LT',
                nextDay : '[Demain à] LT',
                nextWeek : 'dddd [à] LT',
                lastDay : '[Hier à] LT',
                lastWeek : 'dddd [dernier à] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'dans %s',
                past : 'il y a %s',
                s : 'quelques secondes',
                m : 'une minute',
                mm : '%d minutes',
                h : 'une heure',
                hh : '%d heures',
                d : 'un jour',
                dd : '%d jours',
                M : 'un mois',
                MM : '%d mois',
                y : 'un an',
                yy : '%d ans'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
            ordinal : function (number, period) {
                switch (period) {
                    // TODO: Return 'e' when day of month > 1. Move this case inside
                    // block for masculine words below.
                    // See https://github.com/moment/moment/issues/3375
                    case 'D':
                        return number + (number === 1 ? 'er' : '');
    
                    // Words with masculine grammatical gender: mois, trimestre, jour
                    default:
                    case 'M':
                    case 'Q':
                    case 'DDD':
                    case 'd':
                        return number + (number === 1 ? 'er' : 'e');
    
                    // Words with feminine grammatical gender: semaine
                    case 'w':
                    case 'W':
                        return number + (number === 1 ? 're' : 'e');
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return fr;
    
        })));
    
    
    /***/ }),
    /* 45 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : French (Canada) [fr-ca]
        //! author : Jonathan Abourbih : https://github.com/jonbca
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var frCa = moment.defineLocale('fr-ca', {
            months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
            monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
            monthsParseExact : true,
            weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
            weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
            weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY-MM-DD',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Aujourd’hui à] LT',
                nextDay : '[Demain à] LT',
                nextWeek : 'dddd [à] LT',
                lastDay : '[Hier à] LT',
                lastWeek : 'dddd [dernier à] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'dans %s',
                past : 'il y a %s',
                s : 'quelques secondes',
                m : 'une minute',
                mm : '%d minutes',
                h : 'une heure',
                hh : '%d heures',
                d : 'un jour',
                dd : '%d jours',
                M : 'un mois',
                MM : '%d mois',
                y : 'un an',
                yy : '%d ans'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
            ordinal : function (number, period) {
                switch (period) {
                    // Words with masculine grammatical gender: mois, trimestre, jour
                    default:
                    case 'M':
                    case 'Q':
                    case 'D':
                    case 'DDD':
                    case 'd':
                        return number + (number === 1 ? 'er' : 'e');
    
                    // Words with feminine grammatical gender: semaine
                    case 'w':
                    case 'W':
                        return number + (number === 1 ? 're' : 'e');
                }
            }
        });
    
        return frCa;
    
        })));
    
    
    /***/ }),
    /* 46 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : French (Switzerland) [fr-ch]
        //! author : Gaspard Bucher : https://github.com/gaspard
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var frCh = moment.defineLocale('fr-ch', {
            months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
            monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
            monthsParseExact : true,
            weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
            weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
            weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Aujourd’hui à] LT',
                nextDay : '[Demain à] LT',
                nextWeek : 'dddd [à] LT',
                lastDay : '[Hier à] LT',
                lastWeek : 'dddd [dernier à] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'dans %s',
                past : 'il y a %s',
                s : 'quelques secondes',
                m : 'une minute',
                mm : '%d minutes',
                h : 'une heure',
                hh : '%d heures',
                d : 'un jour',
                dd : '%d jours',
                M : 'un mois',
                MM : '%d mois',
                y : 'un an',
                yy : '%d ans'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
            ordinal : function (number, period) {
                switch (period) {
                    // Words with masculine grammatical gender: mois, trimestre, jour
                    default:
                    case 'M':
                    case 'Q':
                    case 'D':
                    case 'DDD':
                    case 'd':
                        return number + (number === 1 ? 'er' : 'e');
    
                    // Words with feminine grammatical gender: semaine
                    case 'w':
                    case 'W':
                        return number + (number === 1 ? 're' : 'e');
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return frCh;
    
        })));
    
    
    /***/ }),
    /* 47 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Frisian [fy]
        //! author : Robin van der Vliet : https://github.com/robin0van0der0v
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
        var monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
    
        var fy = moment.defineLocale('fy', {
            months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
            monthsShort : function (m, format) {
                if (!m) {
                    return monthsShortWithDots;
                } else if (/-MMM-/.test(format)) {
                    return monthsShortWithoutDots[m.month()];
                } else {
                    return monthsShortWithDots[m.month()];
                }
            },
            monthsParseExact : true,
            weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
            weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
            weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD-MM-YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[hjoed om] LT',
                nextDay: '[moarn om] LT',
                nextWeek: 'dddd [om] LT',
                lastDay: '[juster om] LT',
                lastWeek: '[ôfrûne] dddd [om] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'oer %s',
                past : '%s lyn',
                s : 'in pear sekonden',
                m : 'ien minút',
                mm : '%d minuten',
                h : 'ien oere',
                hh : '%d oeren',
                d : 'ien dei',
                dd : '%d dagen',
                M : 'ien moanne',
                MM : '%d moannen',
                y : 'ien jier',
                yy : '%d jierren'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal : function (number) {
                return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return fy;
    
        })));
    
    
    /***/ }),
    /* 48 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Scottish Gaelic [gd]
        //! author : Jon Ashdown : https://github.com/jonashdown
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var months = [
            'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
        ];
    
        var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];
    
        var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];
    
        var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];
    
        var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];
    
        var gd = moment.defineLocale('gd', {
            months : months,
            monthsShort : monthsShort,
            monthsParseExact : true,
            weekdays : weekdays,
            weekdaysShort : weekdaysShort,
            weekdaysMin : weekdaysMin,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[An-diugh aig] LT',
                nextDay : '[A-màireach aig] LT',
                nextWeek : 'dddd [aig] LT',
                lastDay : '[An-dè aig] LT',
                lastWeek : 'dddd [seo chaidh] [aig] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'ann an %s',
                past : 'bho chionn %s',
                s : 'beagan diogan',
                m : 'mionaid',
                mm : '%d mionaidean',
                h : 'uair',
                hh : '%d uairean',
                d : 'latha',
                dd : '%d latha',
                M : 'mìos',
                MM : '%d mìosan',
                y : 'bliadhna',
                yy : '%d bliadhna'
            },
            dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
            ordinal : function (number) {
                var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return gd;
    
        })));
    
    
    /***/ }),
    /* 49 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Galician [gl]
        //! author : Juan G. Hurtado : https://github.com/juanghurtado
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var gl = moment.defineLocale('gl', {
            months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
            monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
            monthsParseExact: true,
            weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
            weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
            weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D [de] MMMM [de] YYYY',
                LLL : 'D [de] MMMM [de] YYYY H:mm',
                LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
            },
            calendar : {
                sameDay : function () {
                    return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
                },
                nextDay : function () {
                    return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
                },
                nextWeek : function () {
                    return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
                },
                lastDay : function () {
                    return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
                },
                lastWeek : function () {
                    return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : function (str) {
                    if (str.indexOf('un') === 0) {
                        return 'n' + str;
                    }
                    return 'en ' + str;
                },
                past : 'hai %s',
                s : 'uns segundos',
                m : 'un minuto',
                mm : '%d minutos',
                h : 'unha hora',
                hh : '%d horas',
                d : 'un día',
                dd : '%d días',
                M : 'un mes',
                MM : '%d meses',
                y : 'un ano',
                yy : '%d anos'
            },
            dayOfMonthOrdinalParse : /\d{1,2}º/,
            ordinal : '%dº',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return gl;
    
        })));
    
    
    /***/ }),
    /* 50 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Konkani Latin script [gom-latn]
        //! author : The Discoverer : https://github.com/WikiDiscoverer
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
                's': ['thodde secondanim', 'thodde second'],
                'm': ['eka mintan', 'ek minute'],
                'mm': [number + ' mintanim', number + ' mintam'],
                'h': ['eka horan', 'ek hor'],
                'hh': [number + ' horanim', number + ' hor'],
                'd': ['eka disan', 'ek dis'],
                'dd': [number + ' disanim', number + ' dis'],
                'M': ['eka mhoinean', 'ek mhoino'],
                'MM': [number + ' mhoineanim', number + ' mhoine'],
                'y': ['eka vorsan', 'ek voros'],
                'yy': [number + ' vorsanim', number + ' vorsam']
            };
            return withoutSuffix ? format[key][0] : format[key][1];
        }
    
        var gomLatn = moment.defineLocale('gom-latn', {
            months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
            monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
            monthsParseExact : true,
            weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
            weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
            weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'A h:mm [vazta]',
                LTS : 'A h:mm:ss [vazta]',
                L : 'DD-MM-YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY A h:mm [vazta]',
                LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
                llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
            },
            calendar : {
                sameDay: '[Aiz] LT',
                nextDay: '[Faleam] LT',
                nextWeek: '[Ieta to] dddd[,] LT',
                lastDay: '[Kal] LT',
                lastWeek: '[Fatlo] dddd[,] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : '%s',
                past : '%s adim',
                s : processRelativeTime,
                m : processRelativeTime,
                mm : processRelativeTime,
                h : processRelativeTime,
                hh : processRelativeTime,
                d : processRelativeTime,
                dd : processRelativeTime,
                M : processRelativeTime,
                MM : processRelativeTime,
                y : processRelativeTime,
                yy : processRelativeTime
            },
            dayOfMonthOrdinalParse : /\d{1,2}(er)/,
            ordinal : function (number, period) {
                switch (period) {
                    // the ordinal 'er' only applies to day of the month
                    case 'D':
                        return number + 'er';
                    default:
                    case 'M':
                    case 'Q':
                    case 'DDD':
                    case 'd':
                    case 'w':
                    case 'W':
                        return number;
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            },
            meridiemParse: /rati|sokalli|donparam|sanje/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'rati') {
                    return hour < 4 ? hour : hour + 12;
                } else if (meridiem === 'sokalli') {
                    return hour;
                } else if (meridiem === 'donparam') {
                    return hour > 12 ? hour : hour + 12;
                } else if (meridiem === 'sanje') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'rati';
                } else if (hour < 12) {
                    return 'sokalli';
                } else if (hour < 16) {
                    return 'donparam';
                } else if (hour < 20) {
                    return 'sanje';
                } else {
                    return 'rati';
                }
            }
        });
    
        return gomLatn;
    
        })));
    
    
    /***/ }),
    /* 51 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Hebrew [he]
        //! author : Tomer Cohen : https://github.com/tomer
        //! author : Moshe Simantov : https://github.com/DevelopmentIL
        //! author : Tal Ater : https://github.com/TalAter
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var he = moment.defineLocale('he', {
            months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
            monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
            weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
            weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
            weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D [ב]MMMM YYYY',
                LLL : 'D [ב]MMMM YYYY HH:mm',
                LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
                l : 'D/M/YYYY',
                ll : 'D MMM YYYY',
                lll : 'D MMM YYYY HH:mm',
                llll : 'ddd, D MMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[היום ב־]LT',
                nextDay : '[מחר ב־]LT',
                nextWeek : 'dddd [בשעה] LT',
                lastDay : '[אתמול ב־]LT',
                lastWeek : '[ביום] dddd [האחרון בשעה] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'בעוד %s',
                past : 'לפני %s',
                s : 'מספר שניות',
                m : 'דקה',
                mm : '%d דקות',
                h : 'שעה',
                hh : function (number) {
                    if (number === 2) {
                        return 'שעתיים';
                    }
                    return number + ' שעות';
                },
                d : 'יום',
                dd : function (number) {
                    if (number === 2) {
                        return 'יומיים';
                    }
                    return number + ' ימים';
                },
                M : 'חודש',
                MM : function (number) {
                    if (number === 2) {
                        return 'חודשיים';
                    }
                    return number + ' חודשים';
                },
                y : 'שנה',
                yy : function (number) {
                    if (number === 2) {
                        return 'שנתיים';
                    } else if (number % 10 === 0 && number !== 10) {
                        return number + ' שנה';
                    }
                    return number + ' שנים';
                }
            },
            meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
            isPM : function (input) {
                return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 5) {
                    return 'לפנות בוקר';
                } else if (hour < 10) {
                    return 'בבוקר';
                } else if (hour < 12) {
                    return isLower ? 'לפנה"צ' : 'לפני הצהריים';
                } else if (hour < 18) {
                    return isLower ? 'אחה"צ' : 'אחרי הצהריים';
                } else {
                    return 'בערב';
                }
            }
        });
    
        return he;
    
        })));
    
    
    /***/ }),
    /* 52 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Hindi [hi]
        //! author : Mayank Singhal : https://github.com/mayanksinghal
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '१',
            '2': '२',
            '3': '३',
            '4': '४',
            '5': '५',
            '6': '६',
            '7': '७',
            '8': '८',
            '9': '९',
            '0': '०'
        };
        var numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0'
        };
    
        var hi = moment.defineLocale('hi', {
            months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
            monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
            monthsParseExact: true,
            weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
            weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
            weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
            longDateFormat : {
                LT : 'A h:mm बजे',
                LTS : 'A h:mm:ss बजे',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm बजे',
                LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
            },
            calendar : {
                sameDay : '[आज] LT',
                nextDay : '[कल] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[कल] LT',
                lastWeek : '[पिछले] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s में',
                past : '%s पहले',
                s : 'कुछ ही क्षण',
                m : 'एक मिनट',
                mm : '%d मिनट',
                h : 'एक घंटा',
                hh : '%d घंटे',
                d : 'एक दिन',
                dd : '%d दिन',
                M : 'एक महीने',
                MM : '%d महीने',
                y : 'एक वर्ष',
                yy : '%d वर्ष'
            },
            preparse: function (string) {
                return string.replace(/[१२३४५६७८९०]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            // Hindi notation for meridiems are quite fuzzy in practice. While there exists
            // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
            meridiemParse: /रात|सुबह|दोपहर|शाम/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'रात') {
                    return hour < 4 ? hour : hour + 12;
                } else if (meridiem === 'सुबह') {
                    return hour;
                } else if (meridiem === 'दोपहर') {
                    return hour >= 10 ? hour : hour + 12;
                } else if (meridiem === 'शाम') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'रात';
                } else if (hour < 10) {
                    return 'सुबह';
                } else if (hour < 17) {
                    return 'दोपहर';
                } else if (hour < 20) {
                    return 'शाम';
                } else {
                    return 'रात';
                }
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return hi;
    
        })));
    
    
    /***/ }),
    /* 53 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Croatian [hr]
        //! author : Bojan Marković : https://github.com/bmarkovic
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function translate(number, withoutSuffix, key) {
            var result = number + ' ';
            switch (key) {
                case 'm':
                    return withoutSuffix ? 'jedna minuta' : 'jedne minute';
                case 'mm':
                    if (number === 1) {
                        result += 'minuta';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'minute';
                    } else {
                        result += 'minuta';
                    }
                    return result;
                case 'h':
                    return withoutSuffix ? 'jedan sat' : 'jednog sata';
                case 'hh':
                    if (number === 1) {
                        result += 'sat';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'sata';
                    } else {
                        result += 'sati';
                    }
                    return result;
                case 'dd':
                    if (number === 1) {
                        result += 'dan';
                    } else {
                        result += 'dana';
                    }
                    return result;
                case 'MM':
                    if (number === 1) {
                        result += 'mjesec';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'mjeseca';
                    } else {
                        result += 'mjeseci';
                    }
                    return result;
                case 'yy':
                    if (number === 1) {
                        result += 'godina';
                    } else if (number === 2 || number === 3 || number === 4) {
                        result += 'godine';
                    } else {
                        result += 'godina';
                    }
                    return result;
            }
        }
    
        var hr = moment.defineLocale('hr', {
            months : {
                format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
                standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
            },
            monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
            monthsParseExact: true,
            weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
            weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
            weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY H:mm',
                LLLL : 'dddd, D. MMMM YYYY H:mm'
            },
            calendar : {
                sameDay  : '[danas u] LT',
                nextDay  : '[sutra u] LT',
                nextWeek : function () {
                    switch (this.day()) {
                        case 0:
                            return '[u] [nedjelju] [u] LT';
                        case 3:
                            return '[u] [srijedu] [u] LT';
                        case 6:
                            return '[u] [subotu] [u] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[u] dddd [u] LT';
                    }
                },
                lastDay  : '[jučer u] LT',
                lastWeek : function () {
                    switch (this.day()) {
                        case 0:
                        case 3:
                            return '[prošlu] dddd [u] LT';
                        case 6:
                            return '[prošle] [subote] [u] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[prošli] dddd [u] LT';
                    }
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'za %s',
                past   : 'prije %s',
                s      : 'par sekundi',
                m      : translate,
                mm     : translate,
                h      : translate,
                hh     : translate,
                d      : 'dan',
                dd     : translate,
                M      : 'mjesec',
                MM     : translate,
                y      : 'godinu',
                yy     : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return hr;
    
        })));
    
    
    /***/ }),
    /* 54 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Hungarian [hu]
        //! author : Adam Brunner : https://github.com/adambrunner
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
        function translate(number, withoutSuffix, key, isFuture) {
            var num = number,
                suffix;
            switch (key) {
                case 's':
                    return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
                case 'm':
                    return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
                case 'mm':
                    return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
                case 'h':
                    return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
                case 'hh':
                    return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
                case 'd':
                    return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
                case 'dd':
                    return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
                case 'M':
                    return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
                case 'MM':
                    return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
                case 'y':
                    return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
                case 'yy':
                    return num + (isFuture || withoutSuffix ? ' év' : ' éve');
            }
            return '';
        }
        function week(isFuture) {
            return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
        }
    
        var hu = moment.defineLocale('hu', {
            months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
            monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
            weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
            weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
            weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'YYYY.MM.DD.',
                LL : 'YYYY. MMMM D.',
                LLL : 'YYYY. MMMM D. H:mm',
                LLLL : 'YYYY. MMMM D., dddd H:mm'
            },
            meridiemParse: /de|du/i,
            isPM: function (input) {
                return input.charAt(1).toLowerCase() === 'u';
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours < 12) {
                    return isLower === true ? 'de' : 'DE';
                } else {
                    return isLower === true ? 'du' : 'DU';
                }
            },
            calendar : {
                sameDay : '[ma] LT[-kor]',
                nextDay : '[holnap] LT[-kor]',
                nextWeek : function () {
                    return week.call(this, true);
                },
                lastDay : '[tegnap] LT[-kor]',
                lastWeek : function () {
                    return week.call(this, false);
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s múlva',
                past : '%s',
                s : translate,
                m : translate,
                mm : translate,
                h : translate,
                hh : translate,
                d : translate,
                dd : translate,
                M : translate,
                MM : translate,
                y : translate,
                yy : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return hu;
    
        })));
    
    
    /***/ }),
    /* 55 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Armenian [hy-am]
        //! author : Armendarabyan : https://github.com/armendarabyan
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var hyAm = moment.defineLocale('hy-am', {
            months : {
                format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
                standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
            },
            monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
            weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
            weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
            weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY թ.',
                LLL : 'D MMMM YYYY թ., HH:mm',
                LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
            },
            calendar : {
                sameDay: '[այսօր] LT',
                nextDay: '[վաղը] LT',
                lastDay: '[երեկ] LT',
                nextWeek: function () {
                    return 'dddd [օրը ժամը] LT';
                },
                lastWeek: function () {
                    return '[անցած] dddd [օրը ժամը] LT';
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : '%s հետո',
                past : '%s առաջ',
                s : 'մի քանի վայրկյան',
                m : 'րոպե',
                mm : '%d րոպե',
                h : 'ժամ',
                hh : '%d ժամ',
                d : 'օր',
                dd : '%d օր',
                M : 'ամիս',
                MM : '%d ամիս',
                y : 'տարի',
                yy : '%d տարի'
            },
            meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
            isPM: function (input) {
                return /^(ցերեկվա|երեկոյան)$/.test(input);
            },
            meridiem : function (hour) {
                if (hour < 4) {
                    return 'գիշերվա';
                } else if (hour < 12) {
                    return 'առավոտվա';
                } else if (hour < 17) {
                    return 'ցերեկվա';
                } else {
                    return 'երեկոյան';
                }
            },
            dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
            ordinal: function (number, period) {
                switch (period) {
                    case 'DDD':
                    case 'w':
                    case 'W':
                    case 'DDDo':
                        if (number === 1) {
                            return number + '-ին';
                        }
                        return number + '-րդ';
                    default:
                        return number;
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return hyAm;
    
        })));
    
    
    /***/ }),
    /* 56 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Indonesian [id]
        //! author : Mohammad Satrio Utomo : https://github.com/tyok
        //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var id = moment.defineLocale('id', {
            months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
            monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
            weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
            weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
            weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
            longDateFormat : {
                LT : 'HH.mm',
                LTS : 'HH.mm.ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY [pukul] HH.mm',
                LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
            },
            meridiemParse: /pagi|siang|sore|malam/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'pagi') {
                    return hour;
                } else if (meridiem === 'siang') {
                    return hour >= 11 ? hour : hour + 12;
                } else if (meridiem === 'sore' || meridiem === 'malam') {
                    return hour + 12;
                }
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours < 11) {
                    return 'pagi';
                } else if (hours < 15) {
                    return 'siang';
                } else if (hours < 19) {
                    return 'sore';
                } else {
                    return 'malam';
                }
            },
            calendar : {
                sameDay : '[Hari ini pukul] LT',
                nextDay : '[Besok pukul] LT',
                nextWeek : 'dddd [pukul] LT',
                lastDay : '[Kemarin pukul] LT',
                lastWeek : 'dddd [lalu pukul] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'dalam %s',
                past : '%s yang lalu',
                s : 'beberapa detik',
                m : 'semenit',
                mm : '%d menit',
                h : 'sejam',
                hh : '%d jam',
                d : 'sehari',
                dd : '%d hari',
                M : 'sebulan',
                MM : '%d bulan',
                y : 'setahun',
                yy : '%d tahun'
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return id;
    
        })));
    
    
    /***/ }),
    /* 57 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Icelandic [is]
        //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function plural(n) {
            if (n % 100 === 11) {
                return true;
            } else if (n % 10 === 1) {
                return false;
            }
            return true;
        }
        function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' ';
            switch (key) {
                case 's':
                    return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
                case 'm':
                    return withoutSuffix ? 'mínúta' : 'mínútu';
                case 'mm':
                    if (plural(number)) {
                        return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                    } else if (withoutSuffix) {
                        return result + 'mínúta';
                    }
                    return result + 'mínútu';
                case 'hh':
                    if (plural(number)) {
                        return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                    }
                    return result + 'klukkustund';
                case 'd':
                    if (withoutSuffix) {
                        return 'dagur';
                    }
                    return isFuture ? 'dag' : 'degi';
                case 'dd':
                    if (plural(number)) {
                        if (withoutSuffix) {
                            return result + 'dagar';
                        }
                        return result + (isFuture ? 'daga' : 'dögum');
                    } else if (withoutSuffix) {
                        return result + 'dagur';
                    }
                    return result + (isFuture ? 'dag' : 'degi');
                case 'M':
                    if (withoutSuffix) {
                        return 'mánuður';
                    }
                    return isFuture ? 'mánuð' : 'mánuði';
                case 'MM':
                    if (plural(number)) {
                        if (withoutSuffix) {
                            return result + 'mánuðir';
                        }
                        return result + (isFuture ? 'mánuði' : 'mánuðum');
                    } else if (withoutSuffix) {
                        return result + 'mánuður';
                    }
                    return result + (isFuture ? 'mánuð' : 'mánuði');
                case 'y':
                    return withoutSuffix || isFuture ? 'ár' : 'ári';
                case 'yy':
                    if (plural(number)) {
                        return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                    }
                    return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
            }
        }
    
        var is = moment.defineLocale('is', {
            months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
            monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
            weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
            weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
            weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY [kl.] H:mm',
                LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
            },
            calendar : {
                sameDay : '[í dag kl.] LT',
                nextDay : '[á morgun kl.] LT',
                nextWeek : 'dddd [kl.] LT',
                lastDay : '[í gær kl.] LT',
                lastWeek : '[síðasta] dddd [kl.] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'eftir %s',
                past : 'fyrir %s síðan',
                s : translate,
                m : translate,
                mm : translate,
                h : 'klukkustund',
                hh : translate,
                d : translate,
                dd : translate,
                M : translate,
                MM : translate,
                y : translate,
                yy : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return is;
    
        })));
    
    
    /***/ }),
    /* 58 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Italian [it]
        //! author : Lorenzo : https://github.com/aliem
        //! author: Mattia Larentis: https://github.com/nostalgiaz
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var it = moment.defineLocale('it', {
            months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
            monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
            weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
            weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
            weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[Oggi alle] LT',
                nextDay: '[Domani alle] LT',
                nextWeek: 'dddd [alle] LT',
                lastDay: '[Ieri alle] LT',
                lastWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[la scorsa] dddd [alle] LT';
                        default:
                            return '[lo scorso] dddd [alle] LT';
                    }
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : function (s) {
                    return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
                },
                past : '%s fa',
                s : 'alcuni secondi',
                m : 'un minuto',
                mm : '%d minuti',
                h : 'un\'ora',
                hh : '%d ore',
                d : 'un giorno',
                dd : '%d giorni',
                M : 'un mese',
                MM : '%d mesi',
                y : 'un anno',
                yy : '%d anni'
            },
            dayOfMonthOrdinalParse : /\d{1,2}º/,
            ordinal: '%dº',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return it;
    
        })));
    
    
    /***/ }),
    /* 59 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Japanese [ja]
        //! author : LI Long : https://github.com/baryon
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var ja = moment.defineLocale('ja', {
            months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
            weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
            weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY/MM/DD',
                LL : 'YYYY年M月D日',
                LLL : 'YYYY年M月D日 HH:mm',
                LLLL : 'YYYY年M月D日 HH:mm dddd',
                l : 'YYYY/MM/DD',
                ll : 'YYYY年M月D日',
                lll : 'YYYY年M月D日 HH:mm',
                llll : 'YYYY年M月D日 HH:mm dddd'
            },
            meridiemParse: /午前|午後/i,
            isPM : function (input) {
                return input === '午後';
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return '午前';
                } else {
                    return '午後';
                }
            },
            calendar : {
                sameDay : '[今日] LT',
                nextDay : '[明日] LT',
                nextWeek : '[来週]dddd LT',
                lastDay : '[昨日] LT',
                lastWeek : '[前週]dddd LT',
                sameElse : 'L'
            },
            dayOfMonthOrdinalParse : /\d{1,2}日/,
            ordinal : function (number, period) {
                switch (period) {
                    case 'd':
                    case 'D':
                    case 'DDD':
                        return number + '日';
                    default:
                        return number;
                }
            },
            relativeTime : {
                future : '%s後',
                past : '%s前',
                s : '数秒',
                m : '1分',
                mm : '%d分',
                h : '1時間',
                hh : '%d時間',
                d : '1日',
                dd : '%d日',
                M : '1ヶ月',
                MM : '%dヶ月',
                y : '1年',
                yy : '%d年'
            }
        });
    
        return ja;
    
        })));
    
    
    /***/ }),
    /* 60 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Javanese [jv]
        //! author : Rony Lantip : https://github.com/lantip
        //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var jv = moment.defineLocale('jv', {
            months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
            monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
            weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
            weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
            weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
            longDateFormat : {
                LT : 'HH.mm',
                LTS : 'HH.mm.ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY [pukul] HH.mm',
                LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
            },
            meridiemParse: /enjing|siyang|sonten|ndalu/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'enjing') {
                    return hour;
                } else if (meridiem === 'siyang') {
                    return hour >= 11 ? hour : hour + 12;
                } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                    return hour + 12;
                }
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours < 11) {
                    return 'enjing';
                } else if (hours < 15) {
                    return 'siyang';
                } else if (hours < 19) {
                    return 'sonten';
                } else {
                    return 'ndalu';
                }
            },
            calendar : {
                sameDay : '[Dinten puniko pukul] LT',
                nextDay : '[Mbenjang pukul] LT',
                nextWeek : 'dddd [pukul] LT',
                lastDay : '[Kala wingi pukul] LT',
                lastWeek : 'dddd [kepengker pukul] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'wonten ing %s',
                past : '%s ingkang kepengker',
                s : 'sawetawis detik',
                m : 'setunggal menit',
                mm : '%d menit',
                h : 'setunggal jam',
                hh : '%d jam',
                d : 'sedinten',
                dd : '%d dinten',
                M : 'sewulan',
                MM : '%d wulan',
                y : 'setaun',
                yy : '%d taun'
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return jv;
    
        })));
    
    
    /***/ }),
    /* 61 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Georgian [ka]
        //! author : Irakli Janiashvili : https://github.com/irakli-janiashvili
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var ka = moment.defineLocale('ka', {
            months : {
                standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
                format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
            },
            monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
            weekdays : {
                standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
                format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
                isFormat: /(წინა|შემდეგ)/
            },
            weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
            weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY h:mm A',
                LLLL : 'dddd, D MMMM YYYY h:mm A'
            },
            calendar : {
                sameDay : '[დღეს] LT[-ზე]',
                nextDay : '[ხვალ] LT[-ზე]',
                lastDay : '[გუშინ] LT[-ზე]',
                nextWeek : '[შემდეგ] dddd LT[-ზე]',
                lastWeek : '[წინა] dddd LT-ზე',
                sameElse : 'L'
            },
            relativeTime : {
                future : function (s) {
                    return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                        s.replace(/ი$/, 'ში') :
                        s + 'ში';
                },
                past : function (s) {
                    if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                        return s.replace(/(ი|ე)$/, 'ის უკან');
                    }
                    if ((/წელი/).test(s)) {
                        return s.replace(/წელი$/, 'წლის უკან');
                    }
                },
                s : 'რამდენიმე წამი',
                m : 'წუთი',
                mm : '%d წუთი',
                h : 'საათი',
                hh : '%d საათი',
                d : 'დღე',
                dd : '%d დღე',
                M : 'თვე',
                MM : '%d თვე',
                y : 'წელი',
                yy : '%d წელი'
            },
            dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
            ordinal : function (number) {
                if (number === 0) {
                    return number;
                }
                if (number === 1) {
                    return number + '-ლი';
                }
                if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
                    return 'მე-' + number;
                }
                return number + '-ე';
            },
            week : {
                dow : 1,
                doy : 7
            }
        });
    
        return ka;
    
        })));
    
    
    /***/ }),
    /* 62 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Kazakh [kk]
        //! authors : Nurlan Rakhimzhanov : https://github.com/nurlan
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var suffixes = {
            0: '-ші',
            1: '-ші',
            2: '-ші',
            3: '-ші',
            4: '-ші',
            5: '-ші',
            6: '-шы',
            7: '-ші',
            8: '-ші',
            9: '-шы',
            10: '-шы',
            20: '-шы',
            30: '-шы',
            40: '-шы',
            50: '-ші',
            60: '-шы',
            70: '-ші',
            80: '-ші',
            90: '-шы',
            100: '-ші'
        };
    
        var kk = moment.defineLocale('kk', {
            months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
            monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
            weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
            weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
            weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Бүгін сағат] LT',
                nextDay : '[Ертең сағат] LT',
                nextWeek : 'dddd [сағат] LT',
                lastDay : '[Кеше сағат] LT',
                lastWeek : '[Өткен аптаның] dddd [сағат] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s ішінде',
                past : '%s бұрын',
                s : 'бірнеше секунд',
                m : 'бір минут',
                mm : '%d минут',
                h : 'бір сағат',
                hh : '%d сағат',
                d : 'бір күн',
                dd : '%d күн',
                M : 'бір ай',
                MM : '%d ай',
                y : 'бір жыл',
                yy : '%d жыл'
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
            ordinal : function (number) {
                var a = number % 10,
                    b = number >= 100 ? 100 : null;
                return number + (suffixes[number] || suffixes[a] || suffixes[b]);
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return kk;
    
        })));
    
    
    /***/ }),
    /* 63 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Cambodian [km]
        //! author : Kruy Vanna : https://github.com/kruyvanna
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var km = moment.defineLocale('km', {
            months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
            monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
            weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
            weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
            weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
            longDateFormat: {
                LT: 'HH:mm',
                LTS : 'HH:mm:ss',
                L: 'DD/MM/YYYY',
                LL: 'D MMMM YYYY',
                LLL: 'D MMMM YYYY HH:mm',
                LLLL: 'dddd, D MMMM YYYY HH:mm'
            },
            calendar: {
                sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
                nextDay: '[ស្អែក ម៉ោង] LT',
                nextWeek: 'dddd [ម៉ោង] LT',
                lastDay: '[ម្សិលមិញ ម៉ោង] LT',
                lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
                sameElse: 'L'
            },
            relativeTime: {
                future: '%sទៀត',
                past: '%sមុន',
                s: 'ប៉ុន្មានវិនាទី',
                m: 'មួយនាទី',
                mm: '%d នាទី',
                h: 'មួយម៉ោង',
                hh: '%d ម៉ោង',
                d: 'មួយថ្ងៃ',
                dd: '%d ថ្ងៃ',
                M: 'មួយខែ',
                MM: '%d ខែ',
                y: 'មួយឆ្នាំ',
                yy: '%d ឆ្នាំ'
            },
            week: {
                dow: 1, // Monday is the first day of the week.
                doy: 4 // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return km;
    
        })));
    
    
    /***/ }),
    /* 64 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Kannada [kn]
        //! author : Rajeev Naik : https://github.com/rajeevnaikte
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '೧',
            '2': '೨',
            '3': '೩',
            '4': '೪',
            '5': '೫',
            '6': '೬',
            '7': '೭',
            '8': '೮',
            '9': '೯',
            '0': '೦'
        };
        var numberMap = {
            '೧': '1',
            '೨': '2',
            '೩': '3',
            '೪': '4',
            '೫': '5',
            '೬': '6',
            '೭': '7',
            '೮': '8',
            '೯': '9',
            '೦': '0'
        };
    
        var kn = moment.defineLocale('kn', {
            months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
            monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),
            monthsParseExact: true,
            weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
            weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
            weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
            longDateFormat : {
                LT : 'A h:mm',
                LTS : 'A h:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm',
                LLLL : 'dddd, D MMMM YYYY, A h:mm'
            },
            calendar : {
                sameDay : '[ಇಂದು] LT',
                nextDay : '[ನಾಳೆ] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[ನಿನ್ನೆ] LT',
                lastWeek : '[ಕೊನೆಯ] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s ನಂತರ',
                past : '%s ಹಿಂದೆ',
                s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
                m : 'ಒಂದು ನಿಮಿಷ',
                mm : '%d ನಿಮಿಷ',
                h : 'ಒಂದು ಗಂಟೆ',
                hh : '%d ಗಂಟೆ',
                d : 'ಒಂದು ದಿನ',
                dd : '%d ದಿನ',
                M : 'ಒಂದು ತಿಂಗಳು',
                MM : '%d ತಿಂಗಳು',
                y : 'ಒಂದು ವರ್ಷ',
                yy : '%d ವರ್ಷ'
            },
            preparse: function (string) {
                return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'ರಾತ್ರಿ') {
                    return hour < 4 ? hour : hour + 12;
                } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                    return hour;
                } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                    return hour >= 10 ? hour : hour + 12;
                } else if (meridiem === 'ಸಂಜೆ') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'ರಾತ್ರಿ';
                } else if (hour < 10) {
                    return 'ಬೆಳಿಗ್ಗೆ';
                } else if (hour < 17) {
                    return 'ಮಧ್ಯಾಹ್ನ';
                } else if (hour < 20) {
                    return 'ಸಂಜೆ';
                } else {
                    return 'ರಾತ್ರಿ';
                }
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
            ordinal : function (number) {
                return number + 'ನೇ';
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return kn;
    
        })));
    
    
    /***/ }),
    /* 65 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Korean [ko]
        //! author : Kyungwook, Park : https://github.com/kyungw00k
        //! author : Jeeeyul Lee <jeeeyul@gmail.com>
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var ko = moment.defineLocale('ko', {
            months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
            monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
            weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
            weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
            weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
            longDateFormat : {
                LT : 'A h:mm',
                LTS : 'A h:mm:ss',
                L : 'YYYY.MM.DD',
                LL : 'YYYY년 MMMM D일',
                LLL : 'YYYY년 MMMM D일 A h:mm',
                LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
                l : 'YYYY.MM.DD',
                ll : 'YYYY년 MMMM D일',
                lll : 'YYYY년 MMMM D일 A h:mm',
                llll : 'YYYY년 MMMM D일 dddd A h:mm'
            },
            calendar : {
                sameDay : '오늘 LT',
                nextDay : '내일 LT',
                nextWeek : 'dddd LT',
                lastDay : '어제 LT',
                lastWeek : '지난주 dddd LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s 후',
                past : '%s 전',
                s : '몇 초',
                ss : '%d초',
                m : '1분',
                mm : '%d분',
                h : '한 시간',
                hh : '%d시간',
                d : '하루',
                dd : '%d일',
                M : '한 달',
                MM : '%d달',
                y : '일 년',
                yy : '%d년'
            },
            dayOfMonthOrdinalParse : /\d{1,2}일/,
            ordinal : '%d일',
            meridiemParse : /오전|오후/,
            isPM : function (token) {
                return token === '오후';
            },
            meridiem : function (hour, minute, isUpper) {
                return hour < 12 ? '오전' : '오후';
            }
        });
    
        return ko;
    
        })));
    
    
    /***/ }),
    /* 66 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Kyrgyz [ky]
        //! author : Chyngyz Arystan uulu : https://github.com/chyngyz
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
    
        var suffixes = {
            0: '-чү',
            1: '-чи',
            2: '-чи',
            3: '-чү',
            4: '-чү',
            5: '-чи',
            6: '-чы',
            7: '-чи',
            8: '-чи',
            9: '-чу',
            10: '-чу',
            20: '-чы',
            30: '-чу',
            40: '-чы',
            50: '-чү',
            60: '-чы',
            70: '-чи',
            80: '-чи',
            90: '-чу',
            100: '-чү'
        };
    
        var ky = moment.defineLocale('ky', {
            months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
            monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
            weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
            weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
            weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Бүгүн саат] LT',
                nextDay : '[Эртең саат] LT',
                nextWeek : 'dddd [саат] LT',
                lastDay : '[Кече саат] LT',
                lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s ичинде',
                past : '%s мурун',
                s : 'бирнече секунд',
                m : 'бир мүнөт',
                mm : '%d мүнөт',
                h : 'бир саат',
                hh : '%d саат',
                d : 'бир күн',
                dd : '%d күн',
                M : 'бир ай',
                MM : '%d ай',
                y : 'бир жыл',
                yy : '%d жыл'
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
            ordinal : function (number) {
                var a = number % 10,
                    b = number >= 100 ? 100 : null;
                return number + (suffixes[number] || suffixes[a] || suffixes[b]);
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return ky;
    
        })));
    
    
    /***/ }),
    /* 67 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Luxembourgish [lb]
        //! author : mweimerskirch : https://github.com/mweimerskirch
        //! author : David Raison : https://github.com/kwisatz
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
                'm': ['eng Minutt', 'enger Minutt'],
                'h': ['eng Stonn', 'enger Stonn'],
                'd': ['een Dag', 'engem Dag'],
                'M': ['ee Mount', 'engem Mount'],
                'y': ['ee Joer', 'engem Joer']
            };
            return withoutSuffix ? format[key][0] : format[key][1];
        }
        function processFutureTime(string) {
            var number = string.substr(0, string.indexOf(' '));
            if (eifelerRegelAppliesToNumber(number)) {
                return 'a ' + string;
            }
            return 'an ' + string;
        }
        function processPastTime(string) {
            var number = string.substr(0, string.indexOf(' '));
            if (eifelerRegelAppliesToNumber(number)) {
                return 'viru ' + string;
            }
            return 'virun ' + string;
        }
        /**
         * Returns true if the word before the given number loses the '-n' ending.
         * e.g. 'an 10 Deeg' but 'a 5 Deeg'
         *
         * @param number {integer}
         * @returns {boolean}
         */
        function eifelerRegelAppliesToNumber(number) {
            number = parseInt(number, 10);
            if (isNaN(number)) {
                return false;
            }
            if (number < 0) {
                // Negative Number --> always true
                return true;
            } else if (number < 10) {
                // Only 1 digit
                if (4 <= number && number <= 7) {
                    return true;
                }
                return false;
            } else if (number < 100) {
                // 2 digits
                var lastDigit = number % 10, firstDigit = number / 10;
                if (lastDigit === 0) {
                    return eifelerRegelAppliesToNumber(firstDigit);
                }
                return eifelerRegelAppliesToNumber(lastDigit);
            } else if (number < 10000) {
                // 3 or 4 digits --> recursively check first digit
                while (number >= 10) {
                    number = number / 10;
                }
                return eifelerRegelAppliesToNumber(number);
            } else {
                // Anything larger than 4 digits: recursively check first n-3 digits
                number = number / 1000;
                return eifelerRegelAppliesToNumber(number);
            }
        }
    
        var lb = moment.defineLocale('lb', {
            months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
            monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
            monthsParseExact : true,
            weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
            weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
            weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
            weekdaysParseExact : true,
            longDateFormat: {
                LT: 'H:mm [Auer]',
                LTS: 'H:mm:ss [Auer]',
                L: 'DD.MM.YYYY',
                LL: 'D. MMMM YYYY',
                LLL: 'D. MMMM YYYY H:mm [Auer]',
                LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
            },
            calendar: {
                sameDay: '[Haut um] LT',
                sameElse: 'L',
                nextDay: '[Muer um] LT',
                nextWeek: 'dddd [um] LT',
                lastDay: '[Gëschter um] LT',
                lastWeek: function () {
                    // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                    switch (this.day()) {
                        case 2:
                        case 4:
                            return '[Leschten] dddd [um] LT';
                        default:
                            return '[Leschte] dddd [um] LT';
                    }
                }
            },
            relativeTime : {
                future : processFutureTime,
                past : processPastTime,
                s : 'e puer Sekonnen',
                m : processRelativeTime,
                mm : '%d Minutten',
                h : processRelativeTime,
                hh : '%d Stonnen',
                d : processRelativeTime,
                dd : '%d Deeg',
                M : processRelativeTime,
                MM : '%d Méint',
                y : processRelativeTime,
                yy : '%d Joer'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
                dow: 1, // Monday is the first day of the week.
                doy: 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return lb;
    
        })));
    
    
    /***/ }),
    /* 68 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Lao [lo]
        //! author : Ryan Hart : https://github.com/ryanhart2
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var lo = moment.defineLocale('lo', {
            months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
            monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
            weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
            weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
            weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
            },
            meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
            isPM: function (input) {
                return input === 'ຕອນແລງ';
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'ຕອນເຊົ້າ';
                } else {
                    return 'ຕອນແລງ';
                }
            },
            calendar : {
                sameDay : '[ມື້ນີ້ເວລາ] LT',
                nextDay : '[ມື້ອື່ນເວລາ] LT',
                nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
                lastDay : '[ມື້ວານນີ້ເວລາ] LT',
                lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'ອີກ %s',
                past : '%sຜ່ານມາ',
                s : 'ບໍ່ເທົ່າໃດວິນາທີ',
                m : '1 ນາທີ',
                mm : '%d ນາທີ',
                h : '1 ຊົ່ວໂມງ',
                hh : '%d ຊົ່ວໂມງ',
                d : '1 ມື້',
                dd : '%d ມື້',
                M : '1 ເດືອນ',
                MM : '%d ເດືອນ',
                y : '1 ປີ',
                yy : '%d ປີ'
            },
            dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
            ordinal : function (number) {
                return 'ທີ່' + number;
            }
        });
    
        return lo;
    
        })));
    
    
    /***/ }),
    /* 69 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Lithuanian [lt]
        //! author : Mindaugas Mozūras : https://github.com/mmozuras
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var units = {
            'm' : 'minutė_minutės_minutę',
            'mm': 'minutės_minučių_minutes',
            'h' : 'valanda_valandos_valandą',
            'hh': 'valandos_valandų_valandas',
            'd' : 'diena_dienos_dieną',
            'dd': 'dienos_dienų_dienas',
            'M' : 'mėnuo_mėnesio_mėnesį',
            'MM': 'mėnesiai_mėnesių_mėnesius',
            'y' : 'metai_metų_metus',
            'yy': 'metai_metų_metus'
        };
        function translateSeconds(number, withoutSuffix, key, isFuture) {
            if (withoutSuffix) {
                return 'kelios sekundės';
            } else {
                return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
            }
        }
        function translateSingular(number, withoutSuffix, key, isFuture) {
            return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
        }
        function special(number) {
            return number % 10 === 0 || (number > 10 && number < 20);
        }
        function forms(key) {
            return units[key].split('_');
        }
        function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' ';
            if (number === 1) {
                return result + translateSingular(number, withoutSuffix, key[0], isFuture);
            } else if (withoutSuffix) {
                return result + (special(number) ? forms(key)[1] : forms(key)[0]);
            } else {
                if (isFuture) {
                    return result + forms(key)[1];
                } else {
                    return result + (special(number) ? forms(key)[1] : forms(key)[2]);
                }
            }
        }
        var lt = moment.defineLocale('lt', {
            months : {
                format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
                standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
                isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
            },
            monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
            weekdays : {
                format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
                standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
                isFormat: /dddd HH:mm/
            },
            weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
            weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY-MM-DD',
                LL : 'YYYY [m.] MMMM D [d.]',
                LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
                LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
                l : 'YYYY-MM-DD',
                ll : 'YYYY [m.] MMMM D [d.]',
                lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
                llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
            },
            calendar : {
                sameDay : '[Šiandien] LT',
                nextDay : '[Rytoj] LT',
                nextWeek : 'dddd LT',
                lastDay : '[Vakar] LT',
                lastWeek : '[Praėjusį] dddd LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'po %s',
                past : 'prieš %s',
                s : translateSeconds,
                m : translateSingular,
                mm : translate,
                h : translateSingular,
                hh : translate,
                d : translateSingular,
                dd : translate,
                M : translateSingular,
                MM : translate,
                y : translateSingular,
                yy : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}-oji/,
            ordinal : function (number) {
                return number + '-oji';
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return lt;
    
        })));
    
    
    /***/ }),
    /* 70 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Latvian [lv]
        //! author : Kristaps Karlsons : https://github.com/skakri
        //! author : Jānis Elmeris : https://github.com/JanisE
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var units = {
            'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
            'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
            'h': 'stundas_stundām_stunda_stundas'.split('_'),
            'hh': 'stundas_stundām_stunda_stundas'.split('_'),
            'd': 'dienas_dienām_diena_dienas'.split('_'),
            'dd': 'dienas_dienām_diena_dienas'.split('_'),
            'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
            'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
            'y': 'gada_gadiem_gads_gadi'.split('_'),
            'yy': 'gada_gadiem_gads_gadi'.split('_')
        };
        /**
         * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
         */
        function format(forms, number, withoutSuffix) {
            if (withoutSuffix) {
                // E.g. "21 minūte", "3 minūtes".
                return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
            } else {
                // E.g. "21 minūtes" as in "pēc 21 minūtes".
                // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
                return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
            }
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
            return number + ' ' + format(units[key], number, withoutSuffix);
        }
        function relativeTimeWithSingular(number, withoutSuffix, key) {
            return format(units[key], number, withoutSuffix);
        }
        function relativeSeconds(number, withoutSuffix) {
            return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
        }
    
        var lv = moment.defineLocale('lv', {
            months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
            monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
            weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
            weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
            weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY.',
                LL : 'YYYY. [gada] D. MMMM',
                LLL : 'YYYY. [gada] D. MMMM, HH:mm',
                LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
            },
            calendar : {
                sameDay : '[Šodien pulksten] LT',
                nextDay : '[Rīt pulksten] LT',
                nextWeek : 'dddd [pulksten] LT',
                lastDay : '[Vakar pulksten] LT',
                lastWeek : '[Pagājušā] dddd [pulksten] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'pēc %s',
                past : 'pirms %s',
                s : relativeSeconds,
                m : relativeTimeWithSingular,
                mm : relativeTimeWithPlural,
                h : relativeTimeWithSingular,
                hh : relativeTimeWithPlural,
                d : relativeTimeWithSingular,
                dd : relativeTimeWithPlural,
                M : relativeTimeWithSingular,
                MM : relativeTimeWithPlural,
                y : relativeTimeWithSingular,
                yy : relativeTimeWithPlural
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return lv;
    
        })));
    
    
    /***/ }),
    /* 71 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Montenegrin [me]
        //! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var translator = {
            words: { //Different grammatical cases
                m: ['jedan minut', 'jednog minuta'],
                mm: ['minut', 'minuta', 'minuta'],
                h: ['jedan sat', 'jednog sata'],
                hh: ['sat', 'sata', 'sati'],
                dd: ['dan', 'dana', 'dana'],
                MM: ['mjesec', 'mjeseca', 'mjeseci'],
                yy: ['godina', 'godine', 'godina']
            },
            correctGrammaticalCase: function (number, wordKey) {
                return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
            },
            translate: function (number, withoutSuffix, key) {
                var wordKey = translator.words[key];
                if (key.length === 1) {
                    return withoutSuffix ? wordKey[0] : wordKey[1];
                } else {
                    return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
                }
            }
        };
    
        var me = moment.defineLocale('me', {
            months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
            monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
            monthsParseExact : true,
            weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
            weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
            weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact : true,
            longDateFormat: {
                LT: 'H:mm',
                LTS : 'H:mm:ss',
                L: 'DD.MM.YYYY',
                LL: 'D. MMMM YYYY',
                LLL: 'D. MMMM YYYY H:mm',
                LLLL: 'dddd, D. MMMM YYYY H:mm'
            },
            calendar: {
                sameDay: '[danas u] LT',
                nextDay: '[sjutra u] LT',
    
                nextWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[u] [nedjelju] [u] LT';
                        case 3:
                            return '[u] [srijedu] [u] LT';
                        case 6:
                            return '[u] [subotu] [u] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[u] dddd [u] LT';
                    }
                },
                lastDay  : '[juče u] LT',
                lastWeek : function () {
                    var lastWeekDays = [
                        '[prošle] [nedjelje] [u] LT',
                        '[prošlog] [ponedjeljka] [u] LT',
                        '[prošlog] [utorka] [u] LT',
                        '[prošle] [srijede] [u] LT',
                        '[prošlog] [četvrtka] [u] LT',
                        '[prošlog] [petka] [u] LT',
                        '[prošle] [subote] [u] LT'
                    ];
                    return lastWeekDays[this.day()];
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'za %s',
                past   : 'prije %s',
                s      : 'nekoliko sekundi',
                m      : translator.translate,
                mm     : translator.translate,
                h      : translator.translate,
                hh     : translator.translate,
                d      : 'dan',
                dd     : translator.translate,
                M      : 'mjesec',
                MM     : translator.translate,
                y      : 'godinu',
                yy     : translator.translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return me;
    
        })));
    
    
    /***/ }),
    /* 72 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Maori [mi]
        //! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var mi = moment.defineLocale('mi', {
            months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
            monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
            monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
            weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
            weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
            weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
            longDateFormat: {
                LT: 'HH:mm',
                LTS: 'HH:mm:ss',
                L: 'DD/MM/YYYY',
                LL: 'D MMMM YYYY',
                LLL: 'D MMMM YYYY [i] HH:mm',
                LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
            },
            calendar: {
                sameDay: '[i teie mahana, i] LT',
                nextDay: '[apopo i] LT',
                nextWeek: 'dddd [i] LT',
                lastDay: '[inanahi i] LT',
                lastWeek: 'dddd [whakamutunga i] LT',
                sameElse: 'L'
            },
            relativeTime: {
                future: 'i roto i %s',
                past: '%s i mua',
                s: 'te hēkona ruarua',
                m: 'he meneti',
                mm: '%d meneti',
                h: 'te haora',
                hh: '%d haora',
                d: 'he ra',
                dd: '%d ra',
                M: 'he marama',
                MM: '%d marama',
                y: 'he tau',
                yy: '%d tau'
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return mi;
    
        })));
    
    
    /***/ }),
    /* 73 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Macedonian [mk]
        //! author : Borislav Mickov : https://github.com/B0k0
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var mk = moment.defineLocale('mk', {
            months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
            monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
            weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
            weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
            weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'D.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY H:mm',
                LLLL : 'dddd, D MMMM YYYY H:mm'
            },
            calendar : {
                sameDay : '[Денес во] LT',
                nextDay : '[Утре во] LT',
                nextWeek : '[Во] dddd [во] LT',
                lastDay : '[Вчера во] LT',
                lastWeek : function () {
                    switch (this.day()) {
                        case 0:
                        case 3:
                        case 6:
                            return '[Изминатата] dddd [во] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[Изминатиот] dddd [во] LT';
                    }
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'после %s',
                past : 'пред %s',
                s : 'неколку секунди',
                m : 'минута',
                mm : '%d минути',
                h : 'час',
                hh : '%d часа',
                d : 'ден',
                dd : '%d дена',
                M : 'месец',
                MM : '%d месеци',
                y : 'година',
                yy : '%d години'
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal : function (number) {
                var lastDigit = number % 10,
                    last2Digits = number % 100;
                if (number === 0) {
                    return number + '-ев';
                } else if (last2Digits === 0) {
                    return number + '-ен';
                } else if (last2Digits > 10 && last2Digits < 20) {
                    return number + '-ти';
                } else if (lastDigit === 1) {
                    return number + '-ви';
                } else if (lastDigit === 2) {
                    return number + '-ри';
                } else if (lastDigit === 7 || lastDigit === 8) {
                    return number + '-ми';
                } else {
                    return number + '-ти';
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return mk;
    
        })));
    
    
    /***/ }),
    /* 74 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Malayalam [ml]
        //! author : Floyd Pink : https://github.com/floydpink
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var ml = moment.defineLocale('ml', {
            months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
            monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
            monthsParseExact : true,
            weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
            weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
            weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
            longDateFormat : {
                LT : 'A h:mm -നു',
                LTS : 'A h:mm:ss -നു',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm -നു',
                LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
            },
            calendar : {
                sameDay : '[ഇന്ന്] LT',
                nextDay : '[നാളെ] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[ഇന്നലെ] LT',
                lastWeek : '[കഴിഞ്ഞ] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s കഴിഞ്ഞ്',
                past : '%s മുൻപ്',
                s : 'അൽപ നിമിഷങ്ങൾ',
                m : 'ഒരു മിനിറ്റ്',
                mm : '%d മിനിറ്റ്',
                h : 'ഒരു മണിക്കൂർ',
                hh : '%d മണിക്കൂർ',
                d : 'ഒരു ദിവസം',
                dd : '%d ദിവസം',
                M : 'ഒരു മാസം',
                MM : '%d മാസം',
                y : 'ഒരു വർഷം',
                yy : '%d വർഷം'
            },
            meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if ((meridiem === 'രാത്രി' && hour >= 4) ||
                        meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                        meridiem === 'വൈകുന്നേരം') {
                    return hour + 12;
                } else {
                    return hour;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'രാത്രി';
                } else if (hour < 12) {
                    return 'രാവിലെ';
                } else if (hour < 17) {
                    return 'ഉച്ച കഴിഞ്ഞ്';
                } else if (hour < 20) {
                    return 'വൈകുന്നേരം';
                } else {
                    return 'രാത്രി';
                }
            }
        });
    
        return ml;
    
        })));
    
    
    /***/ }),
    /* 75 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Marathi [mr]
        //! author : Harshad Kale : https://github.com/kalehv
        //! author : Vivek Athalye : https://github.com/vnathalye
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '१',
            '2': '२',
            '3': '३',
            '4': '४',
            '5': '५',
            '6': '६',
            '7': '७',
            '8': '८',
            '9': '९',
            '0': '०'
        };
        var numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0'
        };
    
        function relativeTimeMr(number, withoutSuffix, string, isFuture)
        {
            var output = '';
            if (withoutSuffix) {
                switch (string) {
                    case 's': output = 'काही सेकंद'; break;
                    case 'm': output = 'एक मिनिट'; break;
                    case 'mm': output = '%d मिनिटे'; break;
                    case 'h': output = 'एक तास'; break;
                    case 'hh': output = '%d तास'; break;
                    case 'd': output = 'एक दिवस'; break;
                    case 'dd': output = '%d दिवस'; break;
                    case 'M': output = 'एक महिना'; break;
                    case 'MM': output = '%d महिने'; break;
                    case 'y': output = 'एक वर्ष'; break;
                    case 'yy': output = '%d वर्षे'; break;
                }
            }
            else {
                switch (string) {
                    case 's': output = 'काही सेकंदां'; break;
                    case 'm': output = 'एका मिनिटा'; break;
                    case 'mm': output = '%d मिनिटां'; break;
                    case 'h': output = 'एका तासा'; break;
                    case 'hh': output = '%d तासां'; break;
                    case 'd': output = 'एका दिवसा'; break;
                    case 'dd': output = '%d दिवसां'; break;
                    case 'M': output = 'एका महिन्या'; break;
                    case 'MM': output = '%d महिन्यां'; break;
                    case 'y': output = 'एका वर्षा'; break;
                    case 'yy': output = '%d वर्षां'; break;
                }
            }
            return output.replace(/%d/i, number);
        }
    
        var mr = moment.defineLocale('mr', {
            months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
            monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
            monthsParseExact : true,
            weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
            weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
            weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
            longDateFormat : {
                LT : 'A h:mm वाजता',
                LTS : 'A h:mm:ss वाजता',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm वाजता',
                LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
            },
            calendar : {
                sameDay : '[आज] LT',
                nextDay : '[उद्या] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[काल] LT',
                lastWeek: '[मागील] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future: '%sमध्ये',
                past: '%sपूर्वी',
                s: relativeTimeMr,
                m: relativeTimeMr,
                mm: relativeTimeMr,
                h: relativeTimeMr,
                hh: relativeTimeMr,
                d: relativeTimeMr,
                dd: relativeTimeMr,
                M: relativeTimeMr,
                MM: relativeTimeMr,
                y: relativeTimeMr,
                yy: relativeTimeMr
            },
            preparse: function (string) {
                return string.replace(/[१२३४५६७८९०]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'रात्री') {
                    return hour < 4 ? hour : hour + 12;
                } else if (meridiem === 'सकाळी') {
                    return hour;
                } else if (meridiem === 'दुपारी') {
                    return hour >= 10 ? hour : hour + 12;
                } else if (meridiem === 'सायंकाळी') {
                    return hour + 12;
                }
            },
            meridiem: function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'रात्री';
                } else if (hour < 10) {
                    return 'सकाळी';
                } else if (hour < 17) {
                    return 'दुपारी';
                } else if (hour < 20) {
                    return 'सायंकाळी';
                } else {
                    return 'रात्री';
                }
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return mr;
    
        })));
    
    
    /***/ }),
    /* 76 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Malay [ms]
        //! author : Weldan Jamili : https://github.com/weldan
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var ms = moment.defineLocale('ms', {
            months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
            monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
            weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
            weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
            weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
            longDateFormat : {
                LT : 'HH.mm',
                LTS : 'HH.mm.ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY [pukul] HH.mm',
                LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'pagi') {
                    return hour;
                } else if (meridiem === 'tengahari') {
                    return hour >= 11 ? hour : hour + 12;
                } else if (meridiem === 'petang' || meridiem === 'malam') {
                    return hour + 12;
                }
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours < 11) {
                    return 'pagi';
                } else if (hours < 15) {
                    return 'tengahari';
                } else if (hours < 19) {
                    return 'petang';
                } else {
                    return 'malam';
                }
            },
            calendar : {
                sameDay : '[Hari ini pukul] LT',
                nextDay : '[Esok pukul] LT',
                nextWeek : 'dddd [pukul] LT',
                lastDay : '[Kelmarin pukul] LT',
                lastWeek : 'dddd [lepas pukul] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'dalam %s',
                past : '%s yang lepas',
                s : 'beberapa saat',
                m : 'seminit',
                mm : '%d minit',
                h : 'sejam',
                hh : '%d jam',
                d : 'sehari',
                dd : '%d hari',
                M : 'sebulan',
                MM : '%d bulan',
                y : 'setahun',
                yy : '%d tahun'
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return ms;
    
        })));
    
    
    /***/ }),
    /* 77 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Malay [ms-my]
        //! note : DEPRECATED, the correct one is [ms]
        //! author : Weldan Jamili : https://github.com/weldan
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var msMy = moment.defineLocale('ms-my', {
            months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
            monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
            weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
            weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
            weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
            longDateFormat : {
                LT : 'HH.mm',
                LTS : 'HH.mm.ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY [pukul] HH.mm',
                LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'pagi') {
                    return hour;
                } else if (meridiem === 'tengahari') {
                    return hour >= 11 ? hour : hour + 12;
                } else if (meridiem === 'petang' || meridiem === 'malam') {
                    return hour + 12;
                }
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours < 11) {
                    return 'pagi';
                } else if (hours < 15) {
                    return 'tengahari';
                } else if (hours < 19) {
                    return 'petang';
                } else {
                    return 'malam';
                }
            },
            calendar : {
                sameDay : '[Hari ini pukul] LT',
                nextDay : '[Esok pukul] LT',
                nextWeek : 'dddd [pukul] LT',
                lastDay : '[Kelmarin pukul] LT',
                lastWeek : 'dddd [lepas pukul] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'dalam %s',
                past : '%s yang lepas',
                s : 'beberapa saat',
                m : 'seminit',
                mm : '%d minit',
                h : 'sejam',
                hh : '%d jam',
                d : 'sehari',
                dd : '%d hari',
                M : 'sebulan',
                MM : '%d bulan',
                y : 'setahun',
                yy : '%d tahun'
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return msMy;
    
        })));
    
    
    /***/ }),
    /* 78 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Burmese [my]
        //! author : Squar team, mysquar.com
        //! author : David Rossellat : https://github.com/gholadr
        //! author : Tin Aung Lin : https://github.com/thanyawzinmin
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '၁',
            '2': '၂',
            '3': '၃',
            '4': '၄',
            '5': '၅',
            '6': '၆',
            '7': '၇',
            '8': '၈',
            '9': '၉',
            '0': '၀'
        };
        var numberMap = {
            '၁': '1',
            '၂': '2',
            '၃': '3',
            '၄': '4',
            '၅': '5',
            '၆': '6',
            '၇': '7',
            '၈': '8',
            '၉': '9',
            '၀': '0'
        };
    
        var my = moment.defineLocale('my', {
            months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
            monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
            weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
            weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
            weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
    
            longDateFormat: {
                LT: 'HH:mm',
                LTS: 'HH:mm:ss',
                L: 'DD/MM/YYYY',
                LL: 'D MMMM YYYY',
                LLL: 'D MMMM YYYY HH:mm',
                LLLL: 'dddd D MMMM YYYY HH:mm'
            },
            calendar: {
                sameDay: '[ယနေ.] LT [မှာ]',
                nextDay: '[မနက်ဖြန်] LT [မှာ]',
                nextWeek: 'dddd LT [မှာ]',
                lastDay: '[မနေ.က] LT [မှာ]',
                lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
                sameElse: 'L'
            },
            relativeTime: {
                future: 'လာမည့် %s မှာ',
                past: 'လွန်ခဲ့သော %s က',
                s: 'စက္ကန်.အနည်းငယ်',
                m: 'တစ်မိနစ်',
                mm: '%d မိနစ်',
                h: 'တစ်နာရီ',
                hh: '%d နာရီ',
                d: 'တစ်ရက်',
                dd: '%d ရက်',
                M: 'တစ်လ',
                MM: '%d လ',
                y: 'တစ်နှစ်',
                yy: '%d နှစ်'
            },
            preparse: function (string) {
                return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            week: {
                dow: 1, // Monday is the first day of the week.
                doy: 4 // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return my;
    
        })));
    
    
    /***/ }),
    /* 79 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Norwegian Bokmål [nb]
        //! authors : Espen Hovlandsdal : https://github.com/rexxars
        //!           Sigurd Gartmann : https://github.com/sigurdga
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var nb = moment.defineLocale('nb', {
            months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
            monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
            monthsParseExact : true,
            weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
            weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
            weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY [kl.] HH:mm',
                LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
            },
            calendar : {
                sameDay: '[i dag kl.] LT',
                nextDay: '[i morgen kl.] LT',
                nextWeek: 'dddd [kl.] LT',
                lastDay: '[i går kl.] LT',
                lastWeek: '[forrige] dddd [kl.] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'om %s',
                past : '%s siden',
                s : 'noen sekunder',
                m : 'ett minutt',
                mm : '%d minutter',
                h : 'en time',
                hh : '%d timer',
                d : 'en dag',
                dd : '%d dager',
                M : 'en måned',
                MM : '%d måneder',
                y : 'ett år',
                yy : '%d år'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return nb;
    
        })));
    
    
    /***/ }),
    /* 80 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Nepalese [ne]
        //! author : suvash : https://github.com/suvash
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '१',
            '2': '२',
            '3': '३',
            '4': '४',
            '5': '५',
            '6': '६',
            '7': '७',
            '8': '८',
            '9': '९',
            '0': '०'
        };
        var numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0'
        };
    
        var ne = moment.defineLocale('ne', {
            months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
            monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
            monthsParseExact : true,
            weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
            weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
            weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'Aको h:mm बजे',
                LTS : 'Aको h:mm:ss बजे',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, Aको h:mm बजे',
                LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
            },
            preparse: function (string) {
                return string.replace(/[१२३४५६७८९०]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'राति') {
                    return hour < 4 ? hour : hour + 12;
                } else if (meridiem === 'बिहान') {
                    return hour;
                } else if (meridiem === 'दिउँसो') {
                    return hour >= 10 ? hour : hour + 12;
                } else if (meridiem === 'साँझ') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 3) {
                    return 'राति';
                } else if (hour < 12) {
                    return 'बिहान';
                } else if (hour < 16) {
                    return 'दिउँसो';
                } else if (hour < 20) {
                    return 'साँझ';
                } else {
                    return 'राति';
                }
            },
            calendar : {
                sameDay : '[आज] LT',
                nextDay : '[भोलि] LT',
                nextWeek : '[आउँदो] dddd[,] LT',
                lastDay : '[हिजो] LT',
                lastWeek : '[गएको] dddd[,] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%sमा',
                past : '%s अगाडि',
                s : 'केही क्षण',
                m : 'एक मिनेट',
                mm : '%d मिनेट',
                h : 'एक घण्टा',
                hh : '%d घण्टा',
                d : 'एक दिन',
                dd : '%d दिन',
                M : 'एक महिना',
                MM : '%d महिना',
                y : 'एक बर्ष',
                yy : '%d बर्ष'
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return ne;
    
        })));
    
    
    /***/ }),
    /* 81 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Dutch [nl]
        //! author : Joris Röling : https://github.com/jorisroling
        //! author : Jacob Middag : https://github.com/middagj
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
        var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
    
        var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
        var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
    
        var nl = moment.defineLocale('nl', {
            months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
            monthsShort : function (m, format) {
                if (!m) {
                    return monthsShortWithDots;
                } else if (/-MMM-/.test(format)) {
                    return monthsShortWithoutDots[m.month()];
                } else {
                    return monthsShortWithDots[m.month()];
                }
            },
    
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
            monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
    
            monthsParse : monthsParse,
            longMonthsParse : monthsParse,
            shortMonthsParse : monthsParse,
    
            weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
            weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
            weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD-MM-YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[vandaag om] LT',
                nextDay: '[morgen om] LT',
                nextWeek: 'dddd [om] LT',
                lastDay: '[gisteren om] LT',
                lastWeek: '[afgelopen] dddd [om] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'over %s',
                past : '%s geleden',
                s : 'een paar seconden',
                m : 'één minuut',
                mm : '%d minuten',
                h : 'één uur',
                hh : '%d uur',
                d : 'één dag',
                dd : '%d dagen',
                M : 'één maand',
                MM : '%d maanden',
                y : 'één jaar',
                yy : '%d jaar'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal : function (number) {
                return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return nl;
    
        })));
    
    
    /***/ }),
    /* 82 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Dutch (Belgium) [nl-be]
        //! author : Joris Röling : https://github.com/jorisroling
        //! author : Jacob Middag : https://github.com/middagj
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
        var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
    
        var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
        var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
    
        var nlBe = moment.defineLocale('nl-be', {
            months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
            monthsShort : function (m, format) {
                if (!m) {
                    return monthsShortWithDots;
                } else if (/-MMM-/.test(format)) {
                    return monthsShortWithoutDots[m.month()];
                } else {
                    return monthsShortWithDots[m.month()];
                }
            },
    
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
            monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
    
            monthsParse : monthsParse,
            longMonthsParse : monthsParse,
            shortMonthsParse : monthsParse,
    
            weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
            weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
            weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[vandaag om] LT',
                nextDay: '[morgen om] LT',
                nextWeek: 'dddd [om] LT',
                lastDay: '[gisteren om] LT',
                lastWeek: '[afgelopen] dddd [om] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'over %s',
                past : '%s geleden',
                s : 'een paar seconden',
                m : 'één minuut',
                mm : '%d minuten',
                h : 'één uur',
                hh : '%d uur',
                d : 'één dag',
                dd : '%d dagen',
                M : 'één maand',
                MM : '%d maanden',
                y : 'één jaar',
                yy : '%d jaar'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal : function (number) {
                return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return nlBe;
    
        })));
    
    
    /***/ }),
    /* 83 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Nynorsk [nn]
        //! author : https://github.com/mechuwind
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var nn = moment.defineLocale('nn', {
            months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
            monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
            weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
            weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
            weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY [kl.] H:mm',
                LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
            },
            calendar : {
                sameDay: '[I dag klokka] LT',
                nextDay: '[I morgon klokka] LT',
                nextWeek: 'dddd [klokka] LT',
                lastDay: '[I går klokka] LT',
                lastWeek: '[Føregåande] dddd [klokka] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'om %s',
                past : '%s sidan',
                s : 'nokre sekund',
                m : 'eit minutt',
                mm : '%d minutt',
                h : 'ein time',
                hh : '%d timar',
                d : 'ein dag',
                dd : '%d dagar',
                M : 'ein månad',
                MM : '%d månader',
                y : 'eit år',
                yy : '%d år'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return nn;
    
        })));
    
    
    /***/ }),
    /* 84 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Punjabi (India) [pa-in]
        //! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '੧',
            '2': '੨',
            '3': '੩',
            '4': '੪',
            '5': '੫',
            '6': '੬',
            '7': '੭',
            '8': '੮',
            '9': '੯',
            '0': '੦'
        };
        var numberMap = {
            '੧': '1',
            '੨': '2',
            '੩': '3',
            '੪': '4',
            '੫': '5',
            '੬': '6',
            '੭': '7',
            '੮': '8',
            '੯': '9',
            '੦': '0'
        };
    
        var paIn = moment.defineLocale('pa-in', {
            // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
            months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
            monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
            weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
            weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
            weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
            longDateFormat : {
                LT : 'A h:mm ਵਜੇ',
                LTS : 'A h:mm:ss ਵਜੇ',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
                LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
            },
            calendar : {
                sameDay : '[ਅਜ] LT',
                nextDay : '[ਕਲ] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[ਕਲ] LT',
                lastWeek : '[ਪਿਛਲੇ] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s ਵਿੱਚ',
                past : '%s ਪਿਛਲੇ',
                s : 'ਕੁਝ ਸਕਿੰਟ',
                m : 'ਇਕ ਮਿੰਟ',
                mm : '%d ਮਿੰਟ',
                h : 'ਇੱਕ ਘੰਟਾ',
                hh : '%d ਘੰਟੇ',
                d : 'ਇੱਕ ਦਿਨ',
                dd : '%d ਦਿਨ',
                M : 'ਇੱਕ ਮਹੀਨਾ',
                MM : '%d ਮਹੀਨੇ',
                y : 'ਇੱਕ ਸਾਲ',
                yy : '%d ਸਾਲ'
            },
            preparse: function (string) {
                return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
            // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
            meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'ਰਾਤ') {
                    return hour < 4 ? hour : hour + 12;
                } else if (meridiem === 'ਸਵੇਰ') {
                    return hour;
                } else if (meridiem === 'ਦੁਪਹਿਰ') {
                    return hour >= 10 ? hour : hour + 12;
                } else if (meridiem === 'ਸ਼ਾਮ') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'ਰਾਤ';
                } else if (hour < 10) {
                    return 'ਸਵੇਰ';
                } else if (hour < 17) {
                    return 'ਦੁਪਹਿਰ';
                } else if (hour < 20) {
                    return 'ਸ਼ਾਮ';
                } else {
                    return 'ਰਾਤ';
                }
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return paIn;
    
        })));
    
    
    /***/ }),
    /* 85 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Polish [pl]
        //! author : Rafal Hirsz : https://github.com/evoL
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
        var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
        function plural(n) {
            return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
        }
        function translate(number, withoutSuffix, key) {
            var result = number + ' ';
            switch (key) {
                case 'm':
                    return withoutSuffix ? 'minuta' : 'minutę';
                case 'mm':
                    return result + (plural(number) ? 'minuty' : 'minut');
                case 'h':
                    return withoutSuffix  ? 'godzina'  : 'godzinę';
                case 'hh':
                    return result + (plural(number) ? 'godziny' : 'godzin');
                case 'MM':
                    return result + (plural(number) ? 'miesiące' : 'miesięcy');
                case 'yy':
                    return result + (plural(number) ? 'lata' : 'lat');
            }
        }
    
        var pl = moment.defineLocale('pl', {
            months : function (momentToFormat, format) {
                if (!momentToFormat) {
                    return monthsNominative;
                } else if (format === '') {
                    // Hack: if format empty we know this is used to generate
                    // RegExp by moment. Give then back both valid forms of months
                    // in RegExp ready format.
                    return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
                } else if (/D MMMM/.test(format)) {
                    return monthsSubjective[momentToFormat.month()];
                } else {
                    return monthsNominative[momentToFormat.month()];
                }
            },
            monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
            weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
            weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
            weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[Dziś o] LT',
                nextDay: '[Jutro o] LT',
                nextWeek: '[W] dddd [o] LT',
                lastDay: '[Wczoraj o] LT',
                lastWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[W zeszłą niedzielę o] LT';
                        case 3:
                            return '[W zeszłą środę o] LT';
                        case 6:
                            return '[W zeszłą sobotę o] LT';
                        default:
                            return '[W zeszły] dddd [o] LT';
                    }
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'za %s',
                past : '%s temu',
                s : 'kilka sekund',
                m : translate,
                mm : translate,
                h : translate,
                hh : translate,
                d : '1 dzień',
                dd : '%d dni',
                M : 'miesiąc',
                MM : translate,
                y : 'rok',
                yy : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return pl;
    
        })));
    
    
    /***/ }),
    /* 86 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Portuguese [pt]
        //! author : Jefferson : https://github.com/jalex79
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var pt = moment.defineLocale('pt', {
            months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
            monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
            weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
            weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
            weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D [de] MMMM [de] YYYY',
                LLL : 'D [de] MMMM [de] YYYY HH:mm',
                LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
            },
            calendar : {
                sameDay: '[Hoje às] LT',
                nextDay: '[Amanhã às] LT',
                nextWeek: 'dddd [às] LT',
                lastDay: '[Ontem às] LT',
                lastWeek: function () {
                    return (this.day() === 0 || this.day() === 6) ?
                        '[Último] dddd [às] LT' : // Saturday + Sunday
                        '[Última] dddd [às] LT'; // Monday - Friday
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'em %s',
                past : 'há %s',
                s : 'segundos',
                m : 'um minuto',
                mm : '%d minutos',
                h : 'uma hora',
                hh : '%d horas',
                d : 'um dia',
                dd : '%d dias',
                M : 'um mês',
                MM : '%d meses',
                y : 'um ano',
                yy : '%d anos'
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal : '%dº',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return pt;
    
        })));
    
    
    /***/ }),
    /* 87 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Portuguese (Brazil) [pt-br]
        //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var ptBr = moment.defineLocale('pt-br', {
            months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
            monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
            weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
            weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
            weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D [de] MMMM [de] YYYY',
                LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
                LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
            },
            calendar : {
                sameDay: '[Hoje às] LT',
                nextDay: '[Amanhã às] LT',
                nextWeek: 'dddd [às] LT',
                lastDay: '[Ontem às] LT',
                lastWeek: function () {
                    return (this.day() === 0 || this.day() === 6) ?
                        '[Último] dddd [às] LT' : // Saturday + Sunday
                        '[Última] dddd [às] LT'; // Monday - Friday
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'em %s',
                past : '%s atrás',
                s : 'poucos segundos',
                m : 'um minuto',
                mm : '%d minutos',
                h : 'uma hora',
                hh : '%d horas',
                d : 'um dia',
                dd : '%d dias',
                M : 'um mês',
                MM : '%d meses',
                y : 'um ano',
                yy : '%d anos'
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal : '%dº'
        });
    
        return ptBr;
    
        })));
    
    
    /***/ }),
    /* 88 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Romanian [ro]
        //! author : Vlad Gurdiga : https://github.com/gurdiga
        //! author : Valentin Agachi : https://github.com/avaly
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
                    'mm': 'minute',
                    'hh': 'ore',
                    'dd': 'zile',
                    'MM': 'luni',
                    'yy': 'ani'
                },
                separator = ' ';
            if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
                separator = ' de ';
            }
            return number + separator + format[key];
        }
    
        var ro = moment.defineLocale('ro', {
            months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
            monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
            monthsParseExact: true,
            weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
            weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
            weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY H:mm',
                LLLL : 'dddd, D MMMM YYYY H:mm'
            },
            calendar : {
                sameDay: '[azi la] LT',
                nextDay: '[mâine la] LT',
                nextWeek: 'dddd [la] LT',
                lastDay: '[ieri la] LT',
                lastWeek: '[fosta] dddd [la] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'peste %s',
                past : '%s în urmă',
                s : 'câteva secunde',
                m : 'un minut',
                mm : relativeTimeWithPlural,
                h : 'o oră',
                hh : relativeTimeWithPlural,
                d : 'o zi',
                dd : relativeTimeWithPlural,
                M : 'o lună',
                MM : relativeTimeWithPlural,
                y : 'un an',
                yy : relativeTimeWithPlural
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return ro;
    
        })));
    
    
    /***/ }),
    /* 89 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Russian [ru]
        //! author : Viktorminator : https://github.com/Viktorminator
        //! Author : Menelion Elensúle : https://github.com/Oire
        //! author : Коренберг Марк : https://github.com/socketpair
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function plural(word, num) {
            var forms = word.split('_');
            return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
                'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
                'hh': 'час_часа_часов',
                'dd': 'день_дня_дней',
                'MM': 'месяц_месяца_месяцев',
                'yy': 'год_года_лет'
            };
            if (key === 'm') {
                return withoutSuffix ? 'минута' : 'минуту';
            }
            else {
                return number + ' ' + plural(format[key], +number);
            }
        }
        var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];
    
        // http://new.gramota.ru/spravka/rules/139-prop : § 103
        // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
        // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
        var ru = moment.defineLocale('ru', {
            months : {
                format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
                standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
            },
            monthsShort : {
                // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
                format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
                standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
            },
            weekdays : {
                standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
                format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
                isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
            },
            weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
            weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
            monthsParse : monthsParse,
            longMonthsParse : monthsParse,
            shortMonthsParse : monthsParse,
    
            // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
            monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
    
            // копия предыдущего
            monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
    
            // полные названия с падежами
            monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
    
            // Выражение, которое соотвествует только сокращённым формам
            monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY г.',
                LLL : 'D MMMM YYYY г., HH:mm',
                LLLL : 'dddd, D MMMM YYYY г., HH:mm'
            },
            calendar : {
                sameDay: '[Сегодня в] LT',
                nextDay: '[Завтра в] LT',
                lastDay: '[Вчера в] LT',
                nextWeek: function (now) {
                    if (now.week() !== this.week()) {
                        switch (this.day()) {
                            case 0:
                                return '[В следующее] dddd [в] LT';
                            case 1:
                            case 2:
                            case 4:
                                return '[В следующий] dddd [в] LT';
                            case 3:
                            case 5:
                            case 6:
                                return '[В следующую] dddd [в] LT';
                        }
                    } else {
                        if (this.day() === 2) {
                            return '[Во] dddd [в] LT';
                        } else {
                            return '[В] dddd [в] LT';
                        }
                    }
                },
                lastWeek: function (now) {
                    if (now.week() !== this.week()) {
                        switch (this.day()) {
                            case 0:
                                return '[В прошлое] dddd [в] LT';
                            case 1:
                            case 2:
                            case 4:
                                return '[В прошлый] dddd [в] LT';
                            case 3:
                            case 5:
                            case 6:
                                return '[В прошлую] dddd [в] LT';
                        }
                    } else {
                        if (this.day() === 2) {
                            return '[Во] dddd [в] LT';
                        } else {
                            return '[В] dddd [в] LT';
                        }
                    }
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'через %s',
                past : '%s назад',
                s : 'несколько секунд',
                m : relativeTimeWithPlural,
                mm : relativeTimeWithPlural,
                h : 'час',
                hh : relativeTimeWithPlural,
                d : 'день',
                dd : relativeTimeWithPlural,
                M : 'месяц',
                MM : relativeTimeWithPlural,
                y : 'год',
                yy : relativeTimeWithPlural
            },
            meridiemParse: /ночи|утра|дня|вечера/i,
            isPM : function (input) {
                return /^(дня|вечера)$/.test(input);
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'ночи';
                } else if (hour < 12) {
                    return 'утра';
                } else if (hour < 17) {
                    return 'дня';
                } else {
                    return 'вечера';
                }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
            ordinal: function (number, period) {
                switch (period) {
                    case 'M':
                    case 'd':
                    case 'DDD':
                        return number + '-й';
                    case 'D':
                        return number + '-го';
                    case 'w':
                    case 'W':
                        return number + '-я';
                    default:
                        return number;
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return ru;
    
        })));
    
    
    /***/ }),
    /* 90 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Sindhi [sd]
        //! author : Narain Sagar : https://github.com/narainsagar
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var months = [
            'جنوري',
            'فيبروري',
            'مارچ',
            'اپريل',
            'مئي',
            'جون',
            'جولاءِ',
            'آگسٽ',
            'سيپٽمبر',
            'آڪٽوبر',
            'نومبر',
            'ڊسمبر'
        ];
        var days = [
            'آچر',
            'سومر',
            'اڱارو',
            'اربع',
            'خميس',
            'جمع',
            'ڇنڇر'
        ];
    
        var sd = moment.defineLocale('sd', {
            months : months,
            monthsShort : months,
            weekdays : days,
            weekdaysShort : days,
            weekdaysMin : days,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd، D MMMM YYYY HH:mm'
            },
            meridiemParse: /صبح|شام/,
            isPM : function (input) {
                return 'شام' === input;
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'صبح';
                }
                return 'شام';
            },
            calendar : {
                sameDay : '[اڄ] LT',
                nextDay : '[سڀاڻي] LT',
                nextWeek : 'dddd [اڳين هفتي تي] LT',
                lastDay : '[ڪالهه] LT',
                lastWeek : '[گزريل هفتي] dddd [تي] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s پوء',
                past : '%s اڳ',
                s : 'چند سيڪنڊ',
                m : 'هڪ منٽ',
                mm : '%d منٽ',
                h : 'هڪ ڪلاڪ',
                hh : '%d ڪلاڪ',
                d : 'هڪ ڏينهن',
                dd : '%d ڏينهن',
                M : 'هڪ مهينو',
                MM : '%d مهينا',
                y : 'هڪ سال',
                yy : '%d سال'
            },
            preparse: function (string) {
                return string.replace(/،/g, ',');
            },
            postformat: function (string) {
                return string.replace(/,/g, '،');
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return sd;
    
        })));
    
    
    /***/ }),
    /* 91 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Northern Sami [se]
        //! authors : Bård Rolstad Henriksen : https://github.com/karamell
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
    
        var se = moment.defineLocale('se', {
            months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
            monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
            weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
            weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
            weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'MMMM D. [b.] YYYY',
                LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
                LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
            },
            calendar : {
                sameDay: '[otne ti] LT',
                nextDay: '[ihttin ti] LT',
                nextWeek: 'dddd [ti] LT',
                lastDay: '[ikte ti] LT',
                lastWeek: '[ovddit] dddd [ti] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : '%s geažes',
                past : 'maŋit %s',
                s : 'moadde sekunddat',
                m : 'okta minuhta',
                mm : '%d minuhtat',
                h : 'okta diimmu',
                hh : '%d diimmut',
                d : 'okta beaivi',
                dd : '%d beaivvit',
                M : 'okta mánnu',
                MM : '%d mánut',
                y : 'okta jahki',
                yy : '%d jagit'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return se;
    
        })));
    
    
    /***/ }),
    /* 92 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Sinhalese [si]
        //! author : Sampath Sitinamaluwa : https://github.com/sampathsris
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        /*jshint -W100*/
        var si = moment.defineLocale('si', {
            months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
            monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
            weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
            weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
            weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'a h:mm',
                LTS : 'a h:mm:ss',
                L : 'YYYY/MM/DD',
                LL : 'YYYY MMMM D',
                LLL : 'YYYY MMMM D, a h:mm',
                LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
            },
            calendar : {
                sameDay : '[අද] LT[ට]',
                nextDay : '[හෙට] LT[ට]',
                nextWeek : 'dddd LT[ට]',
                lastDay : '[ඊයේ] LT[ට]',
                lastWeek : '[පසුගිය] dddd LT[ට]',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%sකින්',
                past : '%sකට පෙර',
                s : 'තත්පර කිහිපය',
                m : 'මිනිත්තුව',
                mm : 'මිනිත්තු %d',
                h : 'පැය',
                hh : 'පැය %d',
                d : 'දිනය',
                dd : 'දින %d',
                M : 'මාසය',
                MM : 'මාස %d',
                y : 'වසර',
                yy : 'වසර %d'
            },
            dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
            ordinal : function (number) {
                return number + ' වැනි';
            },
            meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
            isPM : function (input) {
                return input === 'ප.ව.' || input === 'පස් වරු';
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours > 11) {
                    return isLower ? 'ප.ව.' : 'පස් වරු';
                } else {
                    return isLower ? 'පෙ.ව.' : 'පෙර වරු';
                }
            }
        });
    
        return si;
    
        })));
    
    
    /***/ }),
    /* 93 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Slovak [sk]
        //! author : Martin Minka : https://github.com/k2s
        //! based on work of petrbela : https://github.com/petrbela
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
        var monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
        function plural(n) {
            return (n > 1) && (n < 5);
        }
        function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' ';
            switch (key) {
                case 's':  // a few seconds / in a few seconds / a few seconds ago
                    return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
                case 'm':  // a minute / in a minute / a minute ago
                    return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
                case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'minúty' : 'minút');
                    } else {
                        return result + 'minútami';
                    }
                    break;
                case 'h':  // an hour / in an hour / an hour ago
                    return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
                case 'hh': // 9 hours / in 9 hours / 9 hours ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'hodiny' : 'hodín');
                    } else {
                        return result + 'hodinami';
                    }
                    break;
                case 'd':  // a day / in a day / a day ago
                    return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
                case 'dd': // 9 days / in 9 days / 9 days ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'dni' : 'dní');
                    } else {
                        return result + 'dňami';
                    }
                    break;
                case 'M':  // a month / in a month / a month ago
                    return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
                case 'MM': // 9 months / in 9 months / 9 months ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'mesiace' : 'mesiacov');
                    } else {
                        return result + 'mesiacmi';
                    }
                    break;
                case 'y':  // a year / in a year / a year ago
                    return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
                case 'yy': // 9 years / in 9 years / 9 years ago
                    if (withoutSuffix || isFuture) {
                        return result + (plural(number) ? 'roky' : 'rokov');
                    } else {
                        return result + 'rokmi';
                    }
                    break;
            }
        }
    
        var sk = moment.defineLocale('sk', {
            months : months,
            monthsShort : monthsShort,
            weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
            weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
            weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
            longDateFormat : {
                LT: 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY H:mm',
                LLLL : 'dddd D. MMMM YYYY H:mm'
            },
            calendar : {
                sameDay: '[dnes o] LT',
                nextDay: '[zajtra o] LT',
                nextWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[v nedeľu o] LT';
                        case 1:
                        case 2:
                            return '[v] dddd [o] LT';
                        case 3:
                            return '[v stredu o] LT';
                        case 4:
                            return '[vo štvrtok o] LT';
                        case 5:
                            return '[v piatok o] LT';
                        case 6:
                            return '[v sobotu o] LT';
                    }
                },
                lastDay: '[včera o] LT',
                lastWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[minulú nedeľu o] LT';
                        case 1:
                        case 2:
                            return '[minulý] dddd [o] LT';
                        case 3:
                            return '[minulú stredu o] LT';
                        case 4:
                        case 5:
                            return '[minulý] dddd [o] LT';
                        case 6:
                            return '[minulú sobotu o] LT';
                    }
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'za %s',
                past : 'pred %s',
                s : translate,
                m : translate,
                mm : translate,
                h : translate,
                hh : translate,
                d : translate,
                dd : translate,
                M : translate,
                MM : translate,
                y : translate,
                yy : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return sk;
    
        })));
    
    
    /***/ }),
    /* 94 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Slovenian [sl]
        //! author : Robert Sedovšek : https://github.com/sedovsek
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var result = number + ' ';
            switch (key) {
                case 's':
                    return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
                case 'm':
                    return withoutSuffix ? 'ena minuta' : 'eno minuto';
                case 'mm':
                    if (number === 1) {
                        result += withoutSuffix ? 'minuta' : 'minuto';
                    } else if (number === 2) {
                        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                    } else if (number < 5) {
                        result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                    } else {
                        result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                    }
                    return result;
                case 'h':
                    return withoutSuffix ? 'ena ura' : 'eno uro';
                case 'hh':
                    if (number === 1) {
                        result += withoutSuffix ? 'ura' : 'uro';
                    } else if (number === 2) {
                        result += withoutSuffix || isFuture ? 'uri' : 'urama';
                    } else if (number < 5) {
                        result += withoutSuffix || isFuture ? 'ure' : 'urami';
                    } else {
                        result += withoutSuffix || isFuture ? 'ur' : 'urami';
                    }
                    return result;
                case 'd':
                    return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
                case 'dd':
                    if (number === 1) {
                        result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                    } else if (number === 2) {
                        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                    } else {
                        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                    }
                    return result;
                case 'M':
                    return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
                case 'MM':
                    if (number === 1) {
                        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                    } else if (number === 2) {
                        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                    } else if (number < 5) {
                        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                    } else {
                        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                    }
                    return result;
                case 'y':
                    return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
                case 'yy':
                    if (number === 1) {
                        result += withoutSuffix || isFuture ? 'leto' : 'letom';
                    } else if (number === 2) {
                        result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                    } else if (number < 5) {
                        result += withoutSuffix || isFuture ? 'leta' : 'leti';
                    } else {
                        result += withoutSuffix || isFuture ? 'let' : 'leti';
                    }
                    return result;
            }
        }
    
        var sl = moment.defineLocale('sl', {
            months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
            monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
            monthsParseExact: true,
            weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
            weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
            weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM YYYY',
                LLL : 'D. MMMM YYYY H:mm',
                LLLL : 'dddd, D. MMMM YYYY H:mm'
            },
            calendar : {
                sameDay  : '[danes ob] LT',
                nextDay  : '[jutri ob] LT',
    
                nextWeek : function () {
                    switch (this.day()) {
                        case 0:
                            return '[v] [nedeljo] [ob] LT';
                        case 3:
                            return '[v] [sredo] [ob] LT';
                        case 6:
                            return '[v] [soboto] [ob] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[v] dddd [ob] LT';
                    }
                },
                lastDay  : '[včeraj ob] LT',
                lastWeek : function () {
                    switch (this.day()) {
                        case 0:
                            return '[prejšnjo] [nedeljo] [ob] LT';
                        case 3:
                            return '[prejšnjo] [sredo] [ob] LT';
                        case 6:
                            return '[prejšnjo] [soboto] [ob] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[prejšnji] dddd [ob] LT';
                    }
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'čez %s',
                past   : 'pred %s',
                s      : processRelativeTime,
                m      : processRelativeTime,
                mm     : processRelativeTime,
                h      : processRelativeTime,
                hh     : processRelativeTime,
                d      : processRelativeTime,
                dd     : processRelativeTime,
                M      : processRelativeTime,
                MM     : processRelativeTime,
                y      : processRelativeTime,
                yy     : processRelativeTime
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return sl;
    
        })));
    
    
    /***/ }),
    /* 95 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Albanian [sq]
        //! author : Flakërim Ismani : https://github.com/flakerimi
        //! author : Menelion Elensúle : https://github.com/Oire
        //! author : Oerd Cukalla : https://github.com/oerd
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var sq = moment.defineLocale('sq', {
            months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
            monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
            weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
            weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
            weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
            weekdaysParseExact : true,
            meridiemParse: /PD|MD/,
            isPM: function (input) {
                return input.charAt(0) === 'M';
            },
            meridiem : function (hours, minutes, isLower) {
                return hours < 12 ? 'PD' : 'MD';
            },
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[Sot në] LT',
                nextDay : '[Nesër në] LT',
                nextWeek : 'dddd [në] LT',
                lastDay : '[Dje në] LT',
                lastWeek : 'dddd [e kaluar në] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'në %s',
                past : '%s më parë',
                s : 'disa sekonda',
                m : 'një minutë',
                mm : '%d minuta',
                h : 'një orë',
                hh : '%d orë',
                d : 'një ditë',
                dd : '%d ditë',
                M : 'një muaj',
                MM : '%d muaj',
                y : 'një vit',
                yy : '%d vite'
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return sq;
    
        })));
    
    
    /***/ }),
    /* 96 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Serbian [sr]
        //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var translator = {
            words: { //Different grammatical cases
                m: ['jedan minut', 'jedne minute'],
                mm: ['minut', 'minute', 'minuta'],
                h: ['jedan sat', 'jednog sata'],
                hh: ['sat', 'sata', 'sati'],
                dd: ['dan', 'dana', 'dana'],
                MM: ['mesec', 'meseca', 'meseci'],
                yy: ['godina', 'godine', 'godina']
            },
            correctGrammaticalCase: function (number, wordKey) {
                return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
            },
            translate: function (number, withoutSuffix, key) {
                var wordKey = translator.words[key];
                if (key.length === 1) {
                    return withoutSuffix ? wordKey[0] : wordKey[1];
                } else {
                    return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
                }
            }
        };
    
        var sr = moment.defineLocale('sr', {
            months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
            monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
            monthsParseExact: true,
            weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
            weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
            weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact : true,
            longDateFormat: {
                LT: 'H:mm',
                LTS : 'H:mm:ss',
                L: 'DD.MM.YYYY',
                LL: 'D. MMMM YYYY',
                LLL: 'D. MMMM YYYY H:mm',
                LLLL: 'dddd, D. MMMM YYYY H:mm'
            },
            calendar: {
                sameDay: '[danas u] LT',
                nextDay: '[sutra u] LT',
                nextWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[u] [nedelju] [u] LT';
                        case 3:
                            return '[u] [sredu] [u] LT';
                        case 6:
                            return '[u] [subotu] [u] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[u] dddd [u] LT';
                    }
                },
                lastDay  : '[juče u] LT',
                lastWeek : function () {
                    var lastWeekDays = [
                        '[prošle] [nedelje] [u] LT',
                        '[prošlog] [ponedeljka] [u] LT',
                        '[prošlog] [utorka] [u] LT',
                        '[prošle] [srede] [u] LT',
                        '[prošlog] [četvrtka] [u] LT',
                        '[prošlog] [petka] [u] LT',
                        '[prošle] [subote] [u] LT'
                    ];
                    return lastWeekDays[this.day()];
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'za %s',
                past   : 'pre %s',
                s      : 'nekoliko sekundi',
                m      : translator.translate,
                mm     : translator.translate,
                h      : translator.translate,
                hh     : translator.translate,
                d      : 'dan',
                dd     : translator.translate,
                M      : 'mesec',
                MM     : translator.translate,
                y      : 'godinu',
                yy     : translator.translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return sr;
    
        })));
    
    
    /***/ }),
    /* 97 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Serbian Cyrillic [sr-cyrl]
        //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var translator = {
            words: { //Different grammatical cases
                m: ['један минут', 'једне минуте'],
                mm: ['минут', 'минуте', 'минута'],
                h: ['један сат', 'једног сата'],
                hh: ['сат', 'сата', 'сати'],
                dd: ['дан', 'дана', 'дана'],
                MM: ['месец', 'месеца', 'месеци'],
                yy: ['година', 'године', 'година']
            },
            correctGrammaticalCase: function (number, wordKey) {
                return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
            },
            translate: function (number, withoutSuffix, key) {
                var wordKey = translator.words[key];
                if (key.length === 1) {
                    return withoutSuffix ? wordKey[0] : wordKey[1];
                } else {
                    return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
                }
            }
        };
    
        var srCyrl = moment.defineLocale('sr-cyrl', {
            months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
            monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
            monthsParseExact: true,
            weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
            weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
            weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
            weekdaysParseExact : true,
            longDateFormat: {
                LT: 'H:mm',
                LTS : 'H:mm:ss',
                L: 'DD.MM.YYYY',
                LL: 'D. MMMM YYYY',
                LLL: 'D. MMMM YYYY H:mm',
                LLLL: 'dddd, D. MMMM YYYY H:mm'
            },
            calendar: {
                sameDay: '[данас у] LT',
                nextDay: '[сутра у] LT',
                nextWeek: function () {
                    switch (this.day()) {
                        case 0:
                            return '[у] [недељу] [у] LT';
                        case 3:
                            return '[у] [среду] [у] LT';
                        case 6:
                            return '[у] [суботу] [у] LT';
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                            return '[у] dddd [у] LT';
                    }
                },
                lastDay  : '[јуче у] LT',
                lastWeek : function () {
                    var lastWeekDays = [
                        '[прошле] [недеље] [у] LT',
                        '[прошлог] [понедељка] [у] LT',
                        '[прошлог] [уторка] [у] LT',
                        '[прошле] [среде] [у] LT',
                        '[прошлог] [четвртка] [у] LT',
                        '[прошлог] [петка] [у] LT',
                        '[прошле] [суботе] [у] LT'
                    ];
                    return lastWeekDays[this.day()];
                },
                sameElse : 'L'
            },
            relativeTime : {
                future : 'за %s',
                past   : 'пре %s',
                s      : 'неколико секунди',
                m      : translator.translate,
                mm     : translator.translate,
                h      : translator.translate,
                hh     : translator.translate,
                d      : 'дан',
                dd     : translator.translate,
                M      : 'месец',
                MM     : translator.translate,
                y      : 'годину',
                yy     : translator.translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return srCyrl;
    
        })));
    
    
    /***/ }),
    /* 98 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : siSwati [ss]
        //! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
    
        var ss = moment.defineLocale('ss', {
            months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
            monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
            weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
            weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
            weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY h:mm A',
                LLLL : 'dddd, D MMMM YYYY h:mm A'
            },
            calendar : {
                sameDay : '[Namuhla nga] LT',
                nextDay : '[Kusasa nga] LT',
                nextWeek : 'dddd [nga] LT',
                lastDay : '[Itolo nga] LT',
                lastWeek : 'dddd [leliphelile] [nga] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'nga %s',
                past : 'wenteka nga %s',
                s : 'emizuzwana lomcane',
                m : 'umzuzu',
                mm : '%d emizuzu',
                h : 'lihora',
                hh : '%d emahora',
                d : 'lilanga',
                dd : '%d emalanga',
                M : 'inyanga',
                MM : '%d tinyanga',
                y : 'umnyaka',
                yy : '%d iminyaka'
            },
            meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
            meridiem : function (hours, minutes, isLower) {
                if (hours < 11) {
                    return 'ekuseni';
                } else if (hours < 15) {
                    return 'emini';
                } else if (hours < 19) {
                    return 'entsambama';
                } else {
                    return 'ebusuku';
                }
            },
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'ekuseni') {
                    return hour;
                } else if (meridiem === 'emini') {
                    return hour >= 11 ? hour : hour + 12;
                } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                    if (hour === 0) {
                        return 0;
                    }
                    return hour + 12;
                }
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal : '%d',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return ss;
    
        })));
    
    
    /***/ }),
    /* 99 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Swedish [sv]
        //! author : Jens Alm : https://github.com/ulmus
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var sv = moment.defineLocale('sv', {
            months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
            monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
            weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
            weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY-MM-DD',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY [kl.] HH:mm',
                LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
                lll : 'D MMM YYYY HH:mm',
                llll : 'ddd D MMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[Idag] LT',
                nextDay: '[Imorgon] LT',
                lastDay: '[Igår] LT',
                nextWeek: '[På] dddd LT',
                lastWeek: '[I] dddd[s] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'om %s',
                past : 'för %s sedan',
                s : 'några sekunder',
                m : 'en minut',
                mm : '%d minuter',
                h : 'en timme',
                hh : '%d timmar',
                d : 'en dag',
                dd : '%d dagar',
                M : 'en månad',
                MM : '%d månader',
                y : 'ett år',
                yy : '%d år'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'e' :
                    (b === 1) ? 'a' :
                    (b === 2) ? 'a' :
                    (b === 3) ? 'e' : 'e';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return sv;
    
        })));
    
    
    /***/ }),
    /* 100 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Swahili [sw]
        //! author : Fahad Kassim : https://github.com/fadsel
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var sw = moment.defineLocale('sw', {
            months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
            monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
            weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
            weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
            weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[leo saa] LT',
                nextDay : '[kesho saa] LT',
                nextWeek : '[wiki ijayo] dddd [saat] LT',
                lastDay : '[jana] LT',
                lastWeek : '[wiki iliyopita] dddd [saat] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s baadaye',
                past : 'tokea %s',
                s : 'hivi punde',
                m : 'dakika moja',
                mm : 'dakika %d',
                h : 'saa limoja',
                hh : 'masaa %d',
                d : 'siku moja',
                dd : 'masiku %d',
                M : 'mwezi mmoja',
                MM : 'miezi %d',
                y : 'mwaka mmoja',
                yy : 'miaka %d'
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return sw;
    
        })));
    
    
    /***/ }),
    /* 101 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Tamil [ta]
        //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var symbolMap = {
            '1': '௧',
            '2': '௨',
            '3': '௩',
            '4': '௪',
            '5': '௫',
            '6': '௬',
            '7': '௭',
            '8': '௮',
            '9': '௯',
            '0': '௦'
        };
        var numberMap = {
            '௧': '1',
            '௨': '2',
            '௩': '3',
            '௪': '4',
            '௫': '5',
            '௬': '6',
            '௭': '7',
            '௮': '8',
            '௯': '9',
            '௦': '0'
        };
    
        var ta = moment.defineLocale('ta', {
            months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
            monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
            weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
            weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
            weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, HH:mm',
                LLLL : 'dddd, D MMMM YYYY, HH:mm'
            },
            calendar : {
                sameDay : '[இன்று] LT',
                nextDay : '[நாளை] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[நேற்று] LT',
                lastWeek : '[கடந்த வாரம்] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s இல்',
                past : '%s முன்',
                s : 'ஒரு சில விநாடிகள்',
                m : 'ஒரு நிமிடம்',
                mm : '%d நிமிடங்கள்',
                h : 'ஒரு மணி நேரம்',
                hh : '%d மணி நேரம்',
                d : 'ஒரு நாள்',
                dd : '%d நாட்கள்',
                M : 'ஒரு மாதம்',
                MM : '%d மாதங்கள்',
                y : 'ஒரு வருடம்',
                yy : '%d ஆண்டுகள்'
            },
            dayOfMonthOrdinalParse: /\d{1,2}வது/,
            ordinal : function (number) {
                return number + 'வது';
            },
            preparse: function (string) {
                return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                    return numberMap[match];
                });
            },
            postformat: function (string) {
                return string.replace(/\d/g, function (match) {
                    return symbolMap[match];
                });
            },
            // refer http://ta.wikipedia.org/s/1er1
            meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
            meridiem : function (hour, minute, isLower) {
                if (hour < 2) {
                    return ' யாமம்';
                } else if (hour < 6) {
                    return ' வைகறை';  // வைகறை
                } else if (hour < 10) {
                    return ' காலை'; // காலை
                } else if (hour < 14) {
                    return ' நண்பகல்'; // நண்பகல்
                } else if (hour < 18) {
                    return ' எற்பாடு'; // எற்பாடு
                } else if (hour < 22) {
                    return ' மாலை'; // மாலை
                } else {
                    return ' யாமம்';
                }
            },
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'யாமம்') {
                    return hour < 2 ? hour : hour + 12;
                } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                    return hour;
                } else if (meridiem === 'நண்பகல்') {
                    return hour >= 10 ? hour : hour + 12;
                } else {
                    return hour + 12;
                }
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return ta;
    
        })));
    
    
    /***/ }),
    /* 102 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Telugu [te]
        //! author : Krishna Chaitanya Thota : https://github.com/kcthota
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var te = moment.defineLocale('te', {
            months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
            monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
            monthsParseExact : true,
            weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
            weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
            weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
            longDateFormat : {
                LT : 'A h:mm',
                LTS : 'A h:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY, A h:mm',
                LLLL : 'dddd, D MMMM YYYY, A h:mm'
            },
            calendar : {
                sameDay : '[నేడు] LT',
                nextDay : '[రేపు] LT',
                nextWeek : 'dddd, LT',
                lastDay : '[నిన్న] LT',
                lastWeek : '[గత] dddd, LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s లో',
                past : '%s క్రితం',
                s : 'కొన్ని క్షణాలు',
                m : 'ఒక నిమిషం',
                mm : '%d నిమిషాలు',
                h : 'ఒక గంట',
                hh : '%d గంటలు',
                d : 'ఒక రోజు',
                dd : '%d రోజులు',
                M : 'ఒక నెల',
                MM : '%d నెలలు',
                y : 'ఒక సంవత్సరం',
                yy : '%d సంవత్సరాలు'
            },
            dayOfMonthOrdinalParse : /\d{1,2}వ/,
            ordinal : '%dవ',
            meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === 'రాత్రి') {
                    return hour < 4 ? hour : hour + 12;
                } else if (meridiem === 'ఉదయం') {
                    return hour;
                } else if (meridiem === 'మధ్యాహ్నం') {
                    return hour >= 10 ? hour : hour + 12;
                } else if (meridiem === 'సాయంత్రం') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'రాత్రి';
                } else if (hour < 10) {
                    return 'ఉదయం';
                } else if (hour < 17) {
                    return 'మధ్యాహ్నం';
                } else if (hour < 20) {
                    return 'సాయంత్రం';
                } else {
                    return 'రాత్రి';
                }
            },
            week : {
                dow : 0, // Sunday is the first day of the week.
                doy : 6  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return te;
    
        })));
    
    
    /***/ }),
    /* 103 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Tetun Dili (East Timor) [tet]
        //! author : Joshua Brooks : https://github.com/joshbrooks
        //! author : Onorio De J. Afonso : https://github.com/marobo
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var tet = moment.defineLocale('tet', {
            months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
            monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
            weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
            weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
            weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[Ohin iha] LT',
                nextDay: '[Aban iha] LT',
                nextWeek: 'dddd [iha] LT',
                lastDay: '[Horiseik iha] LT',
                lastWeek: 'dddd [semana kotuk] [iha] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'iha %s',
                past : '%s liuba',
                s : 'minutu balun',
                m : 'minutu ida',
                mm : 'minutus %d',
                h : 'horas ida',
                hh : 'horas %d',
                d : 'loron ida',
                dd : 'loron %d',
                M : 'fulan ida',
                MM : 'fulan %d',
                y : 'tinan ida',
                yy : 'tinan %d'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return tet;
    
        })));
    
    
    /***/ }),
    /* 104 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Thai [th]
        //! author : Kridsada Thanabulpong : https://github.com/sirn
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var th = moment.defineLocale('th', {
            months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
            monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
            monthsParseExact: true,
            weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
            weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
            weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'H:mm',
                LTS : 'H:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY เวลา H:mm',
                LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
            },
            meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
            isPM: function (input) {
                return input === 'หลังเที่ยง';
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'ก่อนเที่ยง';
                } else {
                    return 'หลังเที่ยง';
                }
            },
            calendar : {
                sameDay : '[วันนี้ เวลา] LT',
                nextDay : '[พรุ่งนี้ เวลา] LT',
                nextWeek : 'dddd[หน้า เวลา] LT',
                lastDay : '[เมื่อวานนี้ เวลา] LT',
                lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'อีก %s',
                past : '%sที่แล้ว',
                s : 'ไม่กี่วินาที',
                m : '1 นาที',
                mm : '%d นาที',
                h : '1 ชั่วโมง',
                hh : '%d ชั่วโมง',
                d : '1 วัน',
                dd : '%d วัน',
                M : '1 เดือน',
                MM : '%d เดือน',
                y : '1 ปี',
                yy : '%d ปี'
            }
        });
    
        return th;
    
        })));
    
    
    /***/ }),
    /* 105 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Tagalog (Philippines) [tl-ph]
        //! author : Dan Hagman : https://github.com/hagmandan
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var tlPh = moment.defineLocale('tl-ph', {
            months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
            monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
            weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
            weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
            weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'MM/D/YYYY',
                LL : 'MMMM D, YYYY',
                LLL : 'MMMM D, YYYY HH:mm',
                LLLL : 'dddd, MMMM DD, YYYY HH:mm'
            },
            calendar : {
                sameDay: 'LT [ngayong araw]',
                nextDay: '[Bukas ng] LT',
                nextWeek: 'LT [sa susunod na] dddd',
                lastDay: 'LT [kahapon]',
                lastWeek: 'LT [noong nakaraang] dddd',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'sa loob ng %s',
                past : '%s ang nakalipas',
                s : 'ilang segundo',
                m : 'isang minuto',
                mm : '%d minuto',
                h : 'isang oras',
                hh : '%d oras',
                d : 'isang araw',
                dd : '%d araw',
                M : 'isang buwan',
                MM : '%d buwan',
                y : 'isang taon',
                yy : '%d taon'
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal : function (number) {
                return number;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return tlPh;
    
        })));
    
    
    /***/ }),
    /* 106 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Klingon [tlh]
        //! author : Dominika Kruk : https://github.com/amaranthrose
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
    
        function translateFuture(output) {
            var time = output;
            time = (output.indexOf('jaj') !== -1) ?
            time.slice(0, -3) + 'leS' :
            (output.indexOf('jar') !== -1) ?
            time.slice(0, -3) + 'waQ' :
            (output.indexOf('DIS') !== -1) ?
            time.slice(0, -3) + 'nem' :
            time + ' pIq';
            return time;
        }
    
        function translatePast(output) {
            var time = output;
            time = (output.indexOf('jaj') !== -1) ?
            time.slice(0, -3) + 'Hu’' :
            (output.indexOf('jar') !== -1) ?
            time.slice(0, -3) + 'wen' :
            (output.indexOf('DIS') !== -1) ?
            time.slice(0, -3) + 'ben' :
            time + ' ret';
            return time;
        }
    
        function translate(number, withoutSuffix, string, isFuture) {
            var numberNoun = numberAsNoun(number);
            switch (string) {
                case 'mm':
                    return numberNoun + ' tup';
                case 'hh':
                    return numberNoun + ' rep';
                case 'dd':
                    return numberNoun + ' jaj';
                case 'MM':
                    return numberNoun + ' jar';
                case 'yy':
                    return numberNoun + ' DIS';
            }
        }
    
        function numberAsNoun(number) {
            var hundred = Math.floor((number % 1000) / 100),
            ten = Math.floor((number % 100) / 10),
            one = number % 10,
            word = '';
            if (hundred > 0) {
                word += numbersNouns[hundred] + 'vatlh';
            }
            if (ten > 0) {
                word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
            }
            if (one > 0) {
                word += ((word !== '') ? ' ' : '') + numbersNouns[one];
            }
            return (word === '') ? 'pagh' : word;
        }
    
        var tlh = moment.defineLocale('tlh', {
            months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
            monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
            monthsParseExact : true,
            weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
            weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
            weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[DaHjaj] LT',
                nextDay: '[wa’leS] LT',
                nextWeek: 'LLL',
                lastDay: '[wa’Hu’] LT',
                lastWeek: 'LLL',
                sameElse: 'L'
            },
            relativeTime : {
                future : translateFuture,
                past : translatePast,
                s : 'puS lup',
                m : 'wa’ tup',
                mm : translate,
                h : 'wa’ rep',
                hh : translate,
                d : 'wa’ jaj',
                dd : translate,
                M : 'wa’ jar',
                MM : translate,
                y : 'wa’ DIS',
                yy : translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return tlh;
    
        })));
    
    
    /***/ }),
    /* 107 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Turkish [tr]
        //! authors : Erhan Gundogan : https://github.com/erhangundogan,
        //!           Burak Yiğit Kaya: https://github.com/BYK
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var suffixes = {
            1: '\'inci',
            5: '\'inci',
            8: '\'inci',
            70: '\'inci',
            80: '\'inci',
            2: '\'nci',
            7: '\'nci',
            20: '\'nci',
            50: '\'nci',
            3: '\'üncü',
            4: '\'üncü',
            100: '\'üncü',
            6: '\'ncı',
            9: '\'uncu',
            10: '\'uncu',
            30: '\'uncu',
            60: '\'ıncı',
            90: '\'ıncı'
        };
    
        var tr = moment.defineLocale('tr', {
            months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
            monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
            weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
            weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
            weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[bugün saat] LT',
                nextDay : '[yarın saat] LT',
                nextWeek : '[haftaya] dddd [saat] LT',
                lastDay : '[dün] LT',
                lastWeek : '[geçen hafta] dddd [saat] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s sonra',
                past : '%s önce',
                s : 'birkaç saniye',
                m : 'bir dakika',
                mm : '%d dakika',
                h : 'bir saat',
                hh : '%d saat',
                d : 'bir gün',
                dd : '%d gün',
                M : 'bir ay',
                MM : '%d ay',
                y : 'bir yıl',
                yy : '%d yıl'
            },
            dayOfMonthOrdinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
            ordinal : function (number) {
                if (number === 0) {  // special case for zero
                    return number + '\'ıncı';
                }
                var a = number % 10,
                    b = number % 100 - a,
                    c = number >= 100 ? 100 : null;
                return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return tr;
    
        })));
    
    
    /***/ }),
    /* 108 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Talossan [tzl]
        //! author : Robin van der Vliet : https://github.com/robin0van0der0v
        //! author : Iustì Canun
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
        // This is currently too difficult (maybe even impossible) to add.
        var tzl = moment.defineLocale('tzl', {
            months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
            monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
            weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
            weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
            weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
            longDateFormat : {
                LT : 'HH.mm',
                LTS : 'HH.mm.ss',
                L : 'DD.MM.YYYY',
                LL : 'D. MMMM [dallas] YYYY',
                LLL : 'D. MMMM [dallas] YYYY HH.mm',
                LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
            },
            meridiemParse: /d\'o|d\'a/i,
            isPM : function (input) {
                return 'd\'o' === input.toLowerCase();
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours > 11) {
                    return isLower ? 'd\'o' : 'D\'O';
                } else {
                    return isLower ? 'd\'a' : 'D\'A';
                }
            },
            calendar : {
                sameDay : '[oxhi à] LT',
                nextDay : '[demà à] LT',
                nextWeek : 'dddd [à] LT',
                lastDay : '[ieiri à] LT',
                lastWeek : '[sür el] dddd [lasteu à] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'osprei %s',
                past : 'ja%s',
                s : processRelativeTime,
                m : processRelativeTime,
                mm : processRelativeTime,
                h : processRelativeTime,
                hh : processRelativeTime,
                d : processRelativeTime,
                dd : processRelativeTime,
                M : processRelativeTime,
                MM : processRelativeTime,
                y : processRelativeTime,
                yy : processRelativeTime
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal : '%d.',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
                's': ['viensas secunds', '\'iensas secunds'],
                'm': ['\'n míut', '\'iens míut'],
                'mm': [number + ' míuts', '' + number + ' míuts'],
                'h': ['\'n þora', '\'iensa þora'],
                'hh': [number + ' þoras', '' + number + ' þoras'],
                'd': ['\'n ziua', '\'iensa ziua'],
                'dd': [number + ' ziuas', '' + number + ' ziuas'],
                'M': ['\'n mes', '\'iens mes'],
                'MM': [number + ' mesen', '' + number + ' mesen'],
                'y': ['\'n ar', '\'iens ar'],
                'yy': [number + ' ars', '' + number + ' ars']
            };
            return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
        }
    
        return tzl;
    
        })));
    
    
    /***/ }),
    /* 109 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Central Atlas Tamazight [tzm]
        //! author : Abdel Said : https://github.com/abdelsaid
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var tzm = moment.defineLocale('tzm', {
            months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
            monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
            weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
            weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
            weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS: 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
                nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
                nextWeek: 'dddd [ⴴ] LT',
                lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
                lastWeek: 'dddd [ⴴ] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
                past : 'ⵢⴰⵏ %s',
                s : 'ⵉⵎⵉⴽ',
                m : 'ⵎⵉⵏⵓⴺ',
                mm : '%d ⵎⵉⵏⵓⴺ',
                h : 'ⵙⴰⵄⴰ',
                hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
                d : 'ⴰⵙⵙ',
                dd : '%d oⵙⵙⴰⵏ',
                M : 'ⴰⵢoⵓⵔ',
                MM : '%d ⵉⵢⵢⵉⵔⵏ',
                y : 'ⴰⵙⴳⴰⵙ',
                yy : '%d ⵉⵙⴳⴰⵙⵏ'
            },
            week : {
                dow : 6, // Saturday is the first day of the week.
                doy : 12  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return tzm;
    
        })));
    
    
    /***/ }),
    /* 110 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Central Atlas Tamazight Latin [tzm-latn]
        //! author : Abdel Said : https://github.com/abdelsaid
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var tzmLatn = moment.defineLocale('tzm-latn', {
            months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
            monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
            weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
            weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
            weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[asdkh g] LT',
                nextDay: '[aska g] LT',
                nextWeek: 'dddd [g] LT',
                lastDay: '[assant g] LT',
                lastWeek: 'dddd [g] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : 'dadkh s yan %s',
                past : 'yan %s',
                s : 'imik',
                m : 'minuḍ',
                mm : '%d minuḍ',
                h : 'saɛa',
                hh : '%d tassaɛin',
                d : 'ass',
                dd : '%d ossan',
                M : 'ayowr',
                MM : '%d iyyirn',
                y : 'asgas',
                yy : '%d isgasn'
            },
            week : {
                dow : 6, // Saturday is the first day of the week.
                doy : 12  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return tzmLatn;
    
        })));
    
    
    /***/ }),
    /* 111 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Ukrainian [uk]
        //! author : zemlanin : https://github.com/zemlanin
        //! Author : Menelion Elensúle : https://github.com/Oire
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        function plural(word, num) {
            var forms = word.split('_');
            return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
                'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
                'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
                'dd': 'день_дні_днів',
                'MM': 'місяць_місяці_місяців',
                'yy': 'рік_роки_років'
            };
            if (key === 'm') {
                return withoutSuffix ? 'хвилина' : 'хвилину';
            }
            else if (key === 'h') {
                return withoutSuffix ? 'година' : 'годину';
            }
            else {
                return number + ' ' + plural(format[key], +number);
            }
        }
        function weekdaysCaseReplace(m, format) {
            var weekdays = {
                'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
                'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
                'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
            };
    
            if (!m) {
                return weekdays['nominative'];
            }
    
            var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
                'accusative' :
                ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
                    'genitive' :
                    'nominative');
            return weekdays[nounCase][m.day()];
        }
        function processHoursFunction(str) {
            return function () {
                return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
            };
        }
    
        var uk = moment.defineLocale('uk', {
            months : {
                'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
                'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
            },
            monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
            weekdays : weekdaysCaseReplace,
            weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
            weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD.MM.YYYY',
                LL : 'D MMMM YYYY р.',
                LLL : 'D MMMM YYYY р., HH:mm',
                LLLL : 'dddd, D MMMM YYYY р., HH:mm'
            },
            calendar : {
                sameDay: processHoursFunction('[Сьогодні '),
                nextDay: processHoursFunction('[Завтра '),
                lastDay: processHoursFunction('[Вчора '),
                nextWeek: processHoursFunction('[У] dddd ['),
                lastWeek: function () {
                    switch (this.day()) {
                        case 0:
                        case 3:
                        case 5:
                        case 6:
                            return processHoursFunction('[Минулої] dddd [').call(this);
                        case 1:
                        case 2:
                        case 4:
                            return processHoursFunction('[Минулого] dddd [').call(this);
                    }
                },
                sameElse: 'L'
            },
            relativeTime : {
                future : 'за %s',
                past : '%s тому',
                s : 'декілька секунд',
                m : relativeTimeWithPlural,
                mm : relativeTimeWithPlural,
                h : 'годину',
                hh : relativeTimeWithPlural,
                d : 'день',
                dd : relativeTimeWithPlural,
                M : 'місяць',
                MM : relativeTimeWithPlural,
                y : 'рік',
                yy : relativeTimeWithPlural
            },
            // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
            meridiemParse: /ночі|ранку|дня|вечора/,
            isPM: function (input) {
                return /^(дня|вечора)$/.test(input);
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 4) {
                    return 'ночі';
                } else if (hour < 12) {
                    return 'ранку';
                } else if (hour < 17) {
                    return 'дня';
                } else {
                    return 'вечора';
                }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
            ordinal: function (number, period) {
                switch (period) {
                    case 'M':
                    case 'd':
                    case 'DDD':
                    case 'w':
                    case 'W':
                        return number + '-й';
                    case 'D':
                        return number + '-го';
                    default:
                        return number;
                }
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return uk;
    
        })));
    
    
    /***/ }),
    /* 112 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Urdu [ur]
        //! author : Sawood Alam : https://github.com/ibnesayeed
        //! author : Zack : https://github.com/ZackVision
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var months = [
            'جنوری',
            'فروری',
            'مارچ',
            'اپریل',
            'مئی',
            'جون',
            'جولائی',
            'اگست',
            'ستمبر',
            'اکتوبر',
            'نومبر',
            'دسمبر'
        ];
        var days = [
            'اتوار',
            'پیر',
            'منگل',
            'بدھ',
            'جمعرات',
            'جمعہ',
            'ہفتہ'
        ];
    
        var ur = moment.defineLocale('ur', {
            months : months,
            monthsShort : months,
            weekdays : days,
            weekdaysShort : days,
            weekdaysMin : days,
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd، D MMMM YYYY HH:mm'
            },
            meridiemParse: /صبح|شام/,
            isPM : function (input) {
                return 'شام' === input;
            },
            meridiem : function (hour, minute, isLower) {
                if (hour < 12) {
                    return 'صبح';
                }
                return 'شام';
            },
            calendar : {
                sameDay : '[آج بوقت] LT',
                nextDay : '[کل بوقت] LT',
                nextWeek : 'dddd [بوقت] LT',
                lastDay : '[گذشتہ روز بوقت] LT',
                lastWeek : '[گذشتہ] dddd [بوقت] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : '%s بعد',
                past : '%s قبل',
                s : 'چند سیکنڈ',
                m : 'ایک منٹ',
                mm : '%d منٹ',
                h : 'ایک گھنٹہ',
                hh : '%d گھنٹے',
                d : 'ایک دن',
                dd : '%d دن',
                M : 'ایک ماہ',
                MM : '%d ماہ',
                y : 'ایک سال',
                yy : '%d سال'
            },
            preparse: function (string) {
                return string.replace(/،/g, ',');
            },
            postformat: function (string) {
                return string.replace(/,/g, '،');
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return ur;
    
        })));
    
    
    /***/ }),
    /* 113 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Uzbek [uz]
        //! author : Sardor Muminov : https://github.com/muminoff
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var uz = moment.defineLocale('uz', {
            months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
            monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
            weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
            weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
            weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'D MMMM YYYY, dddd HH:mm'
            },
            calendar : {
                sameDay : '[Бугун соат] LT [да]',
                nextDay : '[Эртага] LT [да]',
                nextWeek : 'dddd [куни соат] LT [да]',
                lastDay : '[Кеча соат] LT [да]',
                lastWeek : '[Утган] dddd [куни соат] LT [да]',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'Якин %s ичида',
                past : 'Бир неча %s олдин',
                s : 'фурсат',
                m : 'бир дакика',
                mm : '%d дакика',
                h : 'бир соат',
                hh : '%d соат',
                d : 'бир кун',
                dd : '%d кун',
                M : 'бир ой',
                MM : '%d ой',
                y : 'бир йил',
                yy : '%d йил'
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return uz;
    
        })));
    
    
    /***/ }),
    /* 114 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Uzbek Latin [uz-latn]
        //! author : Rasulbek Mirzayev : github.com/Rasulbeeek
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var uzLatn = moment.defineLocale('uz-latn', {
            months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
            monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
            weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
            weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
            weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'D MMMM YYYY, dddd HH:mm'
            },
            calendar : {
                sameDay : '[Bugun soat] LT [da]',
                nextDay : '[Ertaga] LT [da]',
                nextWeek : 'dddd [kuni soat] LT [da]',
                lastDay : '[Kecha soat] LT [da]',
                lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'Yaqin %s ichida',
                past : 'Bir necha %s oldin',
                s : 'soniya',
                m : 'bir daqiqa',
                mm : '%d daqiqa',
                h : 'bir soat',
                hh : '%d soat',
                d : 'bir kun',
                dd : '%d kun',
                M : 'bir oy',
                MM : '%d oy',
                y : 'bir yil',
                yy : '%d yil'
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 7  // The week that contains Jan 1st is the first week of the year.
            }
        });
    
        return uzLatn;
    
        })));
    
    
    /***/ }),
    /* 115 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Vietnamese [vi]
        //! author : Bang Nguyen : https://github.com/bangnk
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var vi = moment.defineLocale('vi', {
            months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
            monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
            monthsParseExact : true,
            weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
            weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
            weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
            weekdaysParseExact : true,
            meridiemParse: /sa|ch/i,
            isPM : function (input) {
                return /^ch$/i.test(input);
            },
            meridiem : function (hours, minutes, isLower) {
                if (hours < 12) {
                    return isLower ? 'sa' : 'SA';
                } else {
                    return isLower ? 'ch' : 'CH';
                }
            },
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM [năm] YYYY',
                LLL : 'D MMMM [năm] YYYY HH:mm',
                LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
                l : 'DD/M/YYYY',
                ll : 'D MMM YYYY',
                lll : 'D MMM YYYY HH:mm',
                llll : 'ddd, D MMM YYYY HH:mm'
            },
            calendar : {
                sameDay: '[Hôm nay lúc] LT',
                nextDay: '[Ngày mai lúc] LT',
                nextWeek: 'dddd [tuần tới lúc] LT',
                lastDay: '[Hôm qua lúc] LT',
                lastWeek: 'dddd [tuần rồi lúc] LT',
                sameElse: 'L'
            },
            relativeTime : {
                future : '%s tới',
                past : '%s trước',
                s : 'vài giây',
                m : 'một phút',
                mm : '%d phút',
                h : 'một giờ',
                hh : '%d giờ',
                d : 'một ngày',
                dd : '%d ngày',
                M : 'một tháng',
                MM : '%d tháng',
                y : 'một năm',
                yy : '%d năm'
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal : function (number) {
                return number;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return vi;
    
        })));
    
    
    /***/ }),
    /* 116 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Pseudo [x-pseudo]
        //! author : Andrew Hood : https://github.com/andrewhood125
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var xPseudo = moment.defineLocale('x-pseudo', {
            months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
            monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
            monthsParseExact : true,
            weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
            weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
            weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
            weekdaysParseExact : true,
            longDateFormat : {
                LT : 'HH:mm',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY HH:mm',
                LLLL : 'dddd, D MMMM YYYY HH:mm'
            },
            calendar : {
                sameDay : '[T~ódá~ý át] LT',
                nextDay : '[T~ómó~rró~w át] LT',
                nextWeek : 'dddd [át] LT',
                lastDay : '[Ý~ést~érdá~ý át] LT',
                lastWeek : '[L~ást] dddd [át] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'í~ñ %s',
                past : '%s á~gó',
                s : 'á ~féw ~sécó~ñds',
                m : 'á ~míñ~úté',
                mm : '%d m~íñú~tés',
                h : 'á~ñ hó~úr',
                hh : '%d h~óúrs',
                d : 'á ~dáý',
                dd : '%d d~áýs',
                M : 'á ~móñ~th',
                MM : '%d m~óñt~hs',
                y : 'á ~ýéár',
                yy : '%d ý~éárs'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal : function (number) {
                var b = number % 10,
                    output = (~~(number % 100 / 10) === 1) ? 'th' :
                    (b === 1) ? 'st' :
                    (b === 2) ? 'nd' :
                    (b === 3) ? 'rd' : 'th';
                return number + output;
            },
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return xPseudo;
    
        })));
    
    
    /***/ }),
    /* 117 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Yoruba Nigeria [yo]
        //! author : Atolagbe Abisoye : https://github.com/andela-batolagbe
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var yo = moment.defineLocale('yo', {
            months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
            monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
            weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
            weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
            weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
            longDateFormat : {
                LT : 'h:mm A',
                LTS : 'h:mm:ss A',
                L : 'DD/MM/YYYY',
                LL : 'D MMMM YYYY',
                LLL : 'D MMMM YYYY h:mm A',
                LLLL : 'dddd, D MMMM YYYY h:mm A'
            },
            calendar : {
                sameDay : '[Ònì ni] LT',
                nextDay : '[Ọ̀la ni] LT',
                nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
                lastDay : '[Àna ni] LT',
                lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
                sameElse : 'L'
            },
            relativeTime : {
                future : 'ní %s',
                past : '%s kọjá',
                s : 'ìsẹjú aayá die',
                m : 'ìsẹjú kan',
                mm : 'ìsẹjú %d',
                h : 'wákati kan',
                hh : 'wákati %d',
                d : 'ọjọ́ kan',
                dd : 'ọjọ́ %d',
                M : 'osù kan',
                MM : 'osù %d',
                y : 'ọdún kan',
                yy : 'ọdún %d'
            },
            dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
            ordinal : 'ọjọ́ %d',
            week : {
                dow : 1, // Monday is the first day of the week.
                doy : 4 // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return yo;
    
        })));
    
    
    /***/ }),
    /* 118 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Chinese (China) [zh-cn]
        //! author : suupic : https://github.com/suupic
        //! author : Zeno Zeng : https://github.com/zenozeng
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var zhCn = moment.defineLocale('zh-cn', {
            months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
            monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
            weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
            weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY年MMMD日',
                LL : 'YYYY年MMMD日',
                LLL : 'YYYY年MMMD日Ah点mm分',
                LLLL : 'YYYY年MMMD日ddddAh点mm分',
                l : 'YYYY年MMMD日',
                ll : 'YYYY年MMMD日',
                lll : 'YYYY年MMMD日 HH:mm',
                llll : 'YYYY年MMMD日dddd HH:mm'
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === '凌晨' || meridiem === '早上' ||
                        meridiem === '上午') {
                    return hour;
                } else if (meridiem === '下午' || meridiem === '晚上') {
                    return hour + 12;
                } else {
                    // '中午'
                    return hour >= 11 ? hour : hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                var hm = hour * 100 + minute;
                if (hm < 600) {
                    return '凌晨';
                } else if (hm < 900) {
                    return '早上';
                } else if (hm < 1130) {
                    return '上午';
                } else if (hm < 1230) {
                    return '中午';
                } else if (hm < 1800) {
                    return '下午';
                } else {
                    return '晚上';
                }
            },
            calendar : {
                sameDay : '[今天]LT',
                nextDay : '[明天]LT',
                nextWeek : '[下]ddddLT',
                lastDay : '[昨天]LT',
                lastWeek : '[上]ddddLT',
                sameElse : 'L'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
            ordinal : function (number, period) {
                switch (period) {
                    case 'd':
                    case 'D':
                    case 'DDD':
                        return number + '日';
                    case 'M':
                        return number + '月';
                    case 'w':
                    case 'W':
                        return number + '周';
                    default:
                        return number;
                }
            },
            relativeTime : {
                future : '%s内',
                past : '%s前',
                s : '几秒',
                m : '1 分钟',
                mm : '%d 分钟',
                h : '1 小时',
                hh : '%d 小时',
                d : '1 天',
                dd : '%d 天',
                M : '1 个月',
                MM : '%d 个月',
                y : '1 年',
                yy : '%d 年'
            },
            week : {
                // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
                dow : 1, // Monday is the first day of the week.
                doy : 4  // The week that contains Jan 4th is the first week of the year.
            }
        });
    
        return zhCn;
    
        })));
    
    
    /***/ }),
    /* 119 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Chinese (Hong Kong) [zh-hk]
        //! author : Ben : https://github.com/ben-lin
        //! author : Chris Lam : https://github.com/hehachris
        //! author : Konstantin : https://github.com/skfd
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var zhHk = moment.defineLocale('zh-hk', {
            months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
            monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
            weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
            weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY年MMMD日',
                LL : 'YYYY年MMMD日',
                LLL : 'YYYY年MMMD日 HH:mm',
                LLLL : 'YYYY年MMMD日dddd HH:mm',
                l : 'YYYY年MMMD日',
                ll : 'YYYY年MMMD日',
                lll : 'YYYY年MMMD日 HH:mm',
                llll : 'YYYY年MMMD日dddd HH:mm'
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                    return hour;
                } else if (meridiem === '中午') {
                    return hour >= 11 ? hour : hour + 12;
                } else if (meridiem === '下午' || meridiem === '晚上') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                var hm = hour * 100 + minute;
                if (hm < 600) {
                    return '凌晨';
                } else if (hm < 900) {
                    return '早上';
                } else if (hm < 1130) {
                    return '上午';
                } else if (hm < 1230) {
                    return '中午';
                } else if (hm < 1800) {
                    return '下午';
                } else {
                    return '晚上';
                }
            },
            calendar : {
                sameDay : '[今天]LT',
                nextDay : '[明天]LT',
                nextWeek : '[下]ddddLT',
                lastDay : '[昨天]LT',
                lastWeek : '[上]ddddLT',
                sameElse : 'L'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
            ordinal : function (number, period) {
                switch (period) {
                    case 'd' :
                    case 'D' :
                    case 'DDD' :
                        return number + '日';
                    case 'M' :
                        return number + '月';
                    case 'w' :
                    case 'W' :
                        return number + '週';
                    default :
                        return number;
                }
            },
            relativeTime : {
                future : '%s內',
                past : '%s前',
                s : '幾秒',
                m : '1 分鐘',
                mm : '%d 分鐘',
                h : '1 小時',
                hh : '%d 小時',
                d : '1 天',
                dd : '%d 天',
                M : '1 個月',
                MM : '%d 個月',
                y : '1 年',
                yy : '%d 年'
            }
        });
    
        return zhHk;
    
        })));
    
    
    /***/ }),
    /* 120 */
    /***/ (function(module, exports, __webpack_require__) {
    
        //! moment.js locale configuration
        //! locale : Chinese (Taiwan) [zh-tw]
        //! author : Ben : https://github.com/ben-lin
        //! author : Chris Lam : https://github.com/hehachris
    
        ;(function (global, factory) {
            true ? factory(__webpack_require__(3)) :
           typeof define === 'function' && define.amd ? define(['../moment'], factory) :
           factory(global.moment)
        }(this, (function (moment) { 'use strict';
    
    
        var zhTw = moment.defineLocale('zh-tw', {
            months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
            monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
            weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
            weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
            longDateFormat : {
                LT : 'HH:mm',
                LTS : 'HH:mm:ss',
                L : 'YYYY年MMMD日',
                LL : 'YYYY年MMMD日',
                LLL : 'YYYY年MMMD日 HH:mm',
                LLLL : 'YYYY年MMMD日dddd HH:mm',
                l : 'YYYY年MMMD日',
                ll : 'YYYY年MMMD日',
                lll : 'YYYY年MMMD日 HH:mm',
                llll : 'YYYY年MMMD日dddd HH:mm'
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour : function (hour, meridiem) {
                if (hour === 12) {
                    hour = 0;
                }
                if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                    return hour;
                } else if (meridiem === '中午') {
                    return hour >= 11 ? hour : hour + 12;
                } else if (meridiem === '下午' || meridiem === '晚上') {
                    return hour + 12;
                }
            },
            meridiem : function (hour, minute, isLower) {
                var hm = hour * 100 + minute;
                if (hm < 600) {
                    return '凌晨';
                } else if (hm < 900) {
                    return '早上';
                } else if (hm < 1130) {
                    return '上午';
                } else if (hm < 1230) {
                    return '中午';
                } else if (hm < 1800) {
                    return '下午';
                } else {
                    return '晚上';
                }
            },
            calendar : {
                sameDay : '[今天]LT',
                nextDay : '[明天]LT',
                nextWeek : '[下]ddddLT',
                lastDay : '[昨天]LT',
                lastWeek : '[上]ddddLT',
                sameElse : 'L'
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
            ordinal : function (number, period) {
                switch (period) {
                    case 'd' :
                    case 'D' :
                    case 'DDD' :
                        return number + '日';
                    case 'M' :
                        return number + '月';
                    case 'w' :
                    case 'W' :
                        return number + '週';
                    default :
                        return number;
                }
            },
            relativeTime : {
                future : '%s內',
                past : '%s前',
                s : '幾秒',
                m : '1 分鐘',
                mm : '%d 分鐘',
                h : '1 小時',
                hh : '%d 小時',
                d : '1 天',
                dd : '%d 天',
                M : '1 個月',
                MM : '%d 個月',
                y : '1 年',
                yy : '%d 年'
            }
        });
    
        return zhTw;
    
        })));
    
    
    /***/ }),
    /* 121 */
    /***/ (function(module, exports) {
    
        module.exports = __WEBPACK_EXTERNAL_MODULE_121__;
    
    /***/ }),
    /* 122 */
    /***/ (function(module, exports) {
    
        module.exports = __WEBPACK_EXTERNAL_MODULE_122__;
    
    /***/ }),
    /* 123 */
    /***/ (function(module, exports) {
    
        module.exports = __WEBPACK_EXTERNAL_MODULE_123__;
    
    /***/ }),
    /* 124 */
    /***/ (function(module, exports, __webpack_require__) {
    
        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3
        //     http://underscorejs.org
        //     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
        //     Underscore may be freely distributed under the MIT license.
    
        (function() {
    
          // Baseline setup
          // --------------
    
          // Establish the root object, `window` in the browser, or `exports` on the server.
          var root = this;
    
          // Save the previous value of the `_` variable.
          var previousUnderscore = root._;
    
          // Save bytes in the minified (but not gzipped) version:
          var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;
    
          // Create quick reference variables for speed access to core prototypes.
          var
            push             = ArrayProto.push,
            slice            = ArrayProto.slice,
            toString         = ObjProto.toString,
            hasOwnProperty   = ObjProto.hasOwnProperty;
    
          // All **ECMAScript 5** native function implementations that we hope to use
          // are declared here.
          var
            nativeIsArray      = Array.isArray,
            nativeKeys         = Object.keys,
            nativeBind         = FuncProto.bind,
            nativeCreate       = Object.create;
    
          // Naked function reference for surrogate-prototype-swapping.
          var Ctor = function(){};
    
          // Create a safe reference to the Underscore object for use below.
          var _ = function(obj) {
            if (obj instanceof _) return obj;
            if (!(this instanceof _)) return new _(obj);
            this._wrapped = obj;
          };
    
          // Export the Underscore object for **Node.js**, with
          // backwards-compatibility for the old `require()` API. If we're in
          // the browser, add `_` as a global object.
          if (true) {
            if (typeof module !== 'undefined' && module.exports) {
              exports = module.exports = _;
            }
            exports._ = _;
          } else {
            root._ = _;
          }
    
          // Current version.
          _.VERSION = '1.8.3';
    
          // Internal function that returns an efficient (for current engines) version
          // of the passed-in callback, to be repeatedly applied in other Underscore
          // functions.
          var optimizeCb = function(func, context, argCount) {
            if (context === void 0) return func;
            switch (argCount == null ? 3 : argCount) {
              case 1: return function(value) {
                return func.call(context, value);
              };
              case 2: return function(value, other) {
                return func.call(context, value, other);
              };
              case 3: return function(value, index, collection) {
                return func.call(context, value, index, collection);
              };
              case 4: return function(accumulator, value, index, collection) {
                return func.call(context, accumulator, value, index, collection);
              };
            }
            return function() {
              return func.apply(context, arguments);
            };
          };
    
          // A mostly-internal function to generate callbacks that can be applied
          // to each element in a collection, returning the desired result — either
          // identity, an arbitrary callback, a property matcher, or a property accessor.
          var cb = function(value, context, argCount) {
            if (value == null) return _.identity;
            if (_.isFunction(value)) return optimizeCb(value, context, argCount);
            if (_.isObject(value)) return _.matcher(value);
            return _.property(value);
          };
          _.iteratee = function(value, context) {
            return cb(value, context, Infinity);
          };
    
          // An internal function for creating assigner functions.
          var createAssigner = function(keysFunc, undefinedOnly) {
            return function(obj) {
              var length = arguments.length;
              if (length < 2 || obj == null) return obj;
              for (var index = 1; index < length; index++) {
                var source = arguments[index],
                    keys = keysFunc(source),
                    l = keys.length;
                for (var i = 0; i < l; i++) {
                  var key = keys[i];
                  if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
                }
              }
              return obj;
            };
          };
    
          // An internal function for creating a new object that inherits from another.
          var baseCreate = function(prototype) {
            if (!_.isObject(prototype)) return {};
            if (nativeCreate) return nativeCreate(prototype);
            Ctor.prototype = prototype;
            var result = new Ctor;
            Ctor.prototype = null;
            return result;
          };
    
          var property = function(key) {
            return function(obj) {
              return obj == null ? void 0 : obj[key];
            };
          };
    
          // Helper for collection methods to determine whether a collection
          // should be iterated as an array or as an object
          // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
          // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
          var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
          var getLength = property('length');
          var isArrayLike = function(collection) {
            var length = getLength(collection);
            return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
          };
    
          // Collection Functions
          // --------------------
    
          // The cornerstone, an `each` implementation, aka `forEach`.
          // Handles raw objects in addition to array-likes. Treats all
          // sparse array-likes as if they were dense.
          _.each = _.forEach = function(obj, iteratee, context) {
            iteratee = optimizeCb(iteratee, context);
            var i, length;
            if (isArrayLike(obj)) {
              for (i = 0, length = obj.length; i < length; i++) {
                iteratee(obj[i], i, obj);
              }
            } else {
              var keys = _.keys(obj);
              for (i = 0, length = keys.length; i < length; i++) {
                iteratee(obj[keys[i]], keys[i], obj);
              }
            }
            return obj;
          };
    
          // Return the results of applying the iteratee to each element.
          _.map = _.collect = function(obj, iteratee, context) {
            iteratee = cb(iteratee, context);
            var keys = !isArrayLike(obj) && _.keys(obj),
                length = (keys || obj).length,
                results = Array(length);
            for (var index = 0; index < length; index++) {
              var currentKey = keys ? keys[index] : index;
              results[index] = iteratee(obj[currentKey], currentKey, obj);
            }
            return results;
          };
    
          // Create a reducing function iterating left or right.
          function createReduce(dir) {
            // Optimized iterator function as using arguments.length
            // in the main function will deoptimize the, see #1991.
            function iterator(obj, iteratee, memo, keys, index, length) {
              for (; index >= 0 && index < length; index += dir) {
                var currentKey = keys ? keys[index] : index;
                memo = iteratee(memo, obj[currentKey], currentKey, obj);
              }
              return memo;
            }
    
            return function(obj, iteratee, memo, context) {
              iteratee = optimizeCb(iteratee, context, 4);
              var keys = !isArrayLike(obj) && _.keys(obj),
                  length = (keys || obj).length,
                  index = dir > 0 ? 0 : length - 1;
              // Determine the initial value if none is provided.
              if (arguments.length < 3) {
                memo = obj[keys ? keys[index] : index];
                index += dir;
              }
              return iterator(obj, iteratee, memo, keys, index, length);
            };
          }
    
          // **Reduce** builds up a single result from a list of values, aka `inject`,
          // or `foldl`.
          _.reduce = _.foldl = _.inject = createReduce(1);
    
          // The right-associative version of reduce, also known as `foldr`.
          _.reduceRight = _.foldr = createReduce(-1);
    
          // Return the first value which passes a truth test. Aliased as `detect`.
          _.find = _.detect = function(obj, predicate, context) {
            var key;
            if (isArrayLike(obj)) {
              key = _.findIndex(obj, predicate, context);
            } else {
              key = _.findKey(obj, predicate, context);
            }
            if (key !== void 0 && key !== -1) return obj[key];
          };
    
          // Return all the elements that pass a truth test.
          // Aliased as `select`.
          _.filter = _.select = function(obj, predicate, context) {
            var results = [];
            predicate = cb(predicate, context);
            _.each(obj, function(value, index, list) {
              if (predicate(value, index, list)) results.push(value);
            });
            return results;
          };
    
          // Return all the elements for which a truth test fails.
          _.reject = function(obj, predicate, context) {
            return _.filter(obj, _.negate(cb(predicate)), context);
          };
    
          // Determine whether all of the elements match a truth test.
          // Aliased as `all`.
          _.every = _.all = function(obj, predicate, context) {
            predicate = cb(predicate, context);
            var keys = !isArrayLike(obj) && _.keys(obj),
                length = (keys || obj).length;
            for (var index = 0; index < length; index++) {
              var currentKey = keys ? keys[index] : index;
              if (!predicate(obj[currentKey], currentKey, obj)) return false;
            }
            return true;
          };
    
          // Determine if at least one element in the object matches a truth test.
          // Aliased as `any`.
          _.some = _.any = function(obj, predicate, context) {
            predicate = cb(predicate, context);
            var keys = !isArrayLike(obj) && _.keys(obj),
                length = (keys || obj).length;
            for (var index = 0; index < length; index++) {
              var currentKey = keys ? keys[index] : index;
              if (predicate(obj[currentKey], currentKey, obj)) return true;
            }
            return false;
          };
    
          // Determine if the array or object contains a given item (using `===`).
          // Aliased as `includes` and `include`.
          _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
            if (!isArrayLike(obj)) obj = _.values(obj);
            if (typeof fromIndex != 'number' || guard) fromIndex = 0;
            return _.indexOf(obj, item, fromIndex) >= 0;
          };
    
          // Invoke a method (with arguments) on every item in a collection.
          _.invoke = function(obj, method) {
            var args = slice.call(arguments, 2);
            var isFunc = _.isFunction(method);
            return _.map(obj, function(value) {
              var func = isFunc ? method : value[method];
              return func == null ? func : func.apply(value, args);
            });
          };
    
          // Convenience version of a common use case of `map`: fetching a property.
          _.pluck = function(obj, key) {
            return _.map(obj, _.property(key));
          };
    
          // Convenience version of a common use case of `filter`: selecting only objects
          // containing specific `key:value` pairs.
          _.where = function(obj, attrs) {
            return _.filter(obj, _.matcher(attrs));
          };
    
          // Convenience version of a common use case of `find`: getting the first object
          // containing specific `key:value` pairs.
          _.findWhere = function(obj, attrs) {
            return _.find(obj, _.matcher(attrs));
          };
    
          // Return the maximum element (or element-based computation).
          _.max = function(obj, iteratee, context) {
            var result = -Infinity, lastComputed = -Infinity,
                value, computed;
            if (iteratee == null && obj != null) {
              obj = isArrayLike(obj) ? obj : _.values(obj);
              for (var i = 0, length = obj.length; i < length; i++) {
                value = obj[i];
                if (value > result) {
                  result = value;
                }
              }
            } else {
              iteratee = cb(iteratee, context);
              _.each(obj, function(value, index, list) {
                computed = iteratee(value, index, list);
                if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
                  result = value;
                  lastComputed = computed;
                }
              });
            }
            return result;
          };
    
          // Return the minimum element (or element-based computation).
          _.min = function(obj, iteratee, context) {
            var result = Infinity, lastComputed = Infinity,
                value, computed;
            if (iteratee == null && obj != null) {
              obj = isArrayLike(obj) ? obj : _.values(obj);
              for (var i = 0, length = obj.length; i < length; i++) {
                value = obj[i];
                if (value < result) {
                  result = value;
                }
              }
            } else {
              iteratee = cb(iteratee, context);
              _.each(obj, function(value, index, list) {
                computed = iteratee(value, index, list);
                if (computed < lastComputed || computed === Infinity && result === Infinity) {
                  result = value;
                  lastComputed = computed;
                }
              });
            }
            return result;
          };
    
          // Shuffle a collection, using the modern version of the
          // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
          _.shuffle = function(obj) {
            var set = isArrayLike(obj) ? obj : _.values(obj);
            var length = set.length;
            var shuffled = Array(length);
            for (var index = 0, rand; index < length; index++) {
              rand = _.random(0, index);
              if (rand !== index) shuffled[index] = shuffled[rand];
              shuffled[rand] = set[index];
            }
            return shuffled;
          };
    
          // Sample **n** random values from a collection.
          // If **n** is not specified, returns a single random element.
          // The internal `guard` argument allows it to work with `map`.
          _.sample = function(obj, n, guard) {
            if (n == null || guard) {
              if (!isArrayLike(obj)) obj = _.values(obj);
              return obj[_.random(obj.length - 1)];
            }
            return _.shuffle(obj).slice(0, Math.max(0, n));
          };
    
          // Sort the object's values by a criterion produced by an iteratee.
          _.sortBy = function(obj, iteratee, context) {
            iteratee = cb(iteratee, context);
            return _.pluck(_.map(obj, function(value, index, list) {
              return {
                value: value,
                index: index,
                criteria: iteratee(value, index, list)
              };
            }).sort(function(left, right) {
              var a = left.criteria;
              var b = right.criteria;
              if (a !== b) {
                if (a > b || a === void 0) return 1;
                if (a < b || b === void 0) return -1;
              }
              return left.index - right.index;
            }), 'value');
          };
    
          // An internal function used for aggregate "group by" operations.
          var group = function(behavior) {
            return function(obj, iteratee, context) {
              var result = {};
              iteratee = cb(iteratee, context);
              _.each(obj, function(value, index) {
                var key = iteratee(value, index, obj);
                behavior(result, value, key);
              });
              return result;
            };
          };
    
          // Groups the object's values by a criterion. Pass either a string attribute
          // to group by, or a function that returns the criterion.
          _.groupBy = group(function(result, value, key) {
            if (_.has(result, key)) result[key].push(value); else result[key] = [value];
          });
    
          // Indexes the object's values by a criterion, similar to `groupBy`, but for
          // when you know that your index values will be unique.
          _.indexBy = group(function(result, value, key) {
            result[key] = value;
          });
    
          // Counts instances of an object that group by a certain criterion. Pass
          // either a string attribute to count by, or a function that returns the
          // criterion.
          _.countBy = group(function(result, value, key) {
            if (_.has(result, key)) result[key]++; else result[key] = 1;
          });
    
          // Safely create a real, live array from anything iterable.
          _.toArray = function(obj) {
            if (!obj) return [];
            if (_.isArray(obj)) return slice.call(obj);
            if (isArrayLike(obj)) return _.map(obj, _.identity);
            return _.values(obj);
          };
    
          // Return the number of elements in an object.
          _.size = function(obj) {
            if (obj == null) return 0;
            return isArrayLike(obj) ? obj.length : _.keys(obj).length;
          };
    
          // Split a collection into two arrays: one whose elements all satisfy the given
          // predicate, and one whose elements all do not satisfy the predicate.
          _.partition = function(obj, predicate, context) {
            predicate = cb(predicate, context);
            var pass = [], fail = [];
            _.each(obj, function(value, key, obj) {
              (predicate(value, key, obj) ? pass : fail).push(value);
            });
            return [pass, fail];
          };
    
          // Array Functions
          // ---------------
    
          // Get the first element of an array. Passing **n** will return the first N
          // values in the array. Aliased as `head` and `take`. The **guard** check
          // allows it to work with `_.map`.
          _.first = _.head = _.take = function(array, n, guard) {
            if (array == null) return void 0;
            if (n == null || guard) return array[0];
            return _.initial(array, array.length - n);
          };
    
          // Returns everything but the last entry of the array. Especially useful on
          // the arguments object. Passing **n** will return all the values in
          // the array, excluding the last N.
          _.initial = function(array, n, guard) {
            return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
          };
    
          // Get the last element of an array. Passing **n** will return the last N
          // values in the array.
          _.last = function(array, n, guard) {
            if (array == null) return void 0;
            if (n == null || guard) return array[array.length - 1];
            return _.rest(array, Math.max(0, array.length - n));
          };
    
          // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
          // Especially useful on the arguments object. Passing an **n** will return
          // the rest N values in the array.
          _.rest = _.tail = _.drop = function(array, n, guard) {
            return slice.call(array, n == null || guard ? 1 : n);
          };
    
          // Trim out all falsy values from an array.
          _.compact = function(array) {
            return _.filter(array, _.identity);
          };
    
          // Internal implementation of a recursive `flatten` function.
          var flatten = function(input, shallow, strict, startIndex) {
            var output = [], idx = 0;
            for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
              var value = input[i];
              if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
                //flatten current level of array or arguments object
                if (!shallow) value = flatten(value, shallow, strict);
                var j = 0, len = value.length;
                output.length += len;
                while (j < len) {
                  output[idx++] = value[j++];
                }
              } else if (!strict) {
                output[idx++] = value;
              }
            }
            return output;
          };
    
          // Flatten out an array, either recursively (by default), or just one level.
          _.flatten = function(array, shallow) {
            return flatten(array, shallow, false);
          };
    
          // Return a version of the array that does not contain the specified value(s).
          _.without = function(array) {
            return _.difference(array, slice.call(arguments, 1));
          };
    
          // Produce a duplicate-free version of the array. If the array has already
          // been sorted, you have the option of using a faster algorithm.
          // Aliased as `unique`.
          _.uniq = _.unique = function(array, isSorted, iteratee, context) {
            if (!_.isBoolean(isSorted)) {
              context = iteratee;
              iteratee = isSorted;
              isSorted = false;
            }
            if (iteratee != null) iteratee = cb(iteratee, context);
            var result = [];
            var seen = [];
            for (var i = 0, length = getLength(array); i < length; i++) {
              var value = array[i],
                  computed = iteratee ? iteratee(value, i, array) : value;
              if (isSorted) {
                if (!i || seen !== computed) result.push(value);
                seen = computed;
              } else if (iteratee) {
                if (!_.contains(seen, computed)) {
                  seen.push(computed);
                  result.push(value);
                }
              } else if (!_.contains(result, value)) {
                result.push(value);
              }
            }
            return result;
          };
    
          // Produce an array that contains the union: each distinct element from all of
          // the passed-in arrays.
          _.union = function() {
            return _.uniq(flatten(arguments, true, true));
          };
    
          // Produce an array that contains every item shared between all the
          // passed-in arrays.
          _.intersection = function(array) {
            var result = [];
            var argsLength = arguments.length;
            for (var i = 0, length = getLength(array); i < length; i++) {
              var item = array[i];
              if (_.contains(result, item)) continue;
              for (var j = 1; j < argsLength; j++) {
                if (!_.contains(arguments[j], item)) break;
              }
              if (j === argsLength) result.push(item);
            }
            return result;
          };
    
          // Take the difference between one array and a number of other arrays.
          // Only the elements present in just the first array will remain.
          _.difference = function(array) {
            var rest = flatten(arguments, true, true, 1);
            return _.filter(array, function(value){
              return !_.contains(rest, value);
            });
          };
    
          // Zip together multiple lists into a single array -- elements that share
          // an index go together.
          _.zip = function() {
            return _.unzip(arguments);
          };
    
          // Complement of _.zip. Unzip accepts an array of arrays and groups
          // each array's elements on shared indices
          _.unzip = function(array) {
            var length = array && _.max(array, getLength).length || 0;
            var result = Array(length);
    
            for (var index = 0; index < length; index++) {
              result[index] = _.pluck(array, index);
            }
            return result;
          };
    
          // Converts lists into objects. Pass either a single array of `[key, value]`
          // pairs, or two parallel arrays of the same length -- one of keys, and one of
          // the corresponding values.
          _.object = function(list, values) {
            var result = {};
            for (var i = 0, length = getLength(list); i < length; i++) {
              if (values) {
                result[list[i]] = values[i];
              } else {
                result[list[i][0]] = list[i][1];
              }
            }
            return result;
          };
    
          // Generator function to create the findIndex and findLastIndex functions
          function createPredicateIndexFinder(dir) {
            return function(array, predicate, context) {
              predicate = cb(predicate, context);
              var length = getLength(array);
              var index = dir > 0 ? 0 : length - 1;
              for (; index >= 0 && index < length; index += dir) {
                if (predicate(array[index], index, array)) return index;
              }
              return -1;
            };
          }
    
          // Returns the first index on an array-like that passes a predicate test
          _.findIndex = createPredicateIndexFinder(1);
          _.findLastIndex = createPredicateIndexFinder(-1);
    
          // Use a comparator function to figure out the smallest index at which
          // an object should be inserted so as to maintain order. Uses binary search.
          _.sortedIndex = function(array, obj, iteratee, context) {
            iteratee = cb(iteratee, context, 1);
            var value = iteratee(obj);
            var low = 0, high = getLength(array);
            while (low < high) {
              var mid = Math.floor((low + high) / 2);
              if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
            }
            return low;
          };
    
          // Generator function to create the indexOf and lastIndexOf functions
          function createIndexFinder(dir, predicateFind, sortedIndex) {
            return function(array, item, idx) {
              var i = 0, length = getLength(array);
              if (typeof idx == 'number') {
                if (dir > 0) {
                    i = idx >= 0 ? idx : Math.max(idx + length, i);
                } else {
                    length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
                }
              } else if (sortedIndex && idx && length) {
                idx = sortedIndex(array, item);
                return array[idx] === item ? idx : -1;
              }
              if (item !== item) {
                idx = predicateFind(slice.call(array, i, length), _.isNaN);
                return idx >= 0 ? idx + i : -1;
              }
              for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
                if (array[idx] === item) return idx;
              }
              return -1;
            };
          }
    
          // Return the position of the first occurrence of an item in an array,
          // or -1 if the item is not included in the array.
          // If the array is large and already in sort order, pass `true`
          // for **isSorted** to use binary search.
          _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
          _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);
    
          // Generate an integer Array containing an arithmetic progression. A port of
          // the native Python `range()` function. See
          // [the Python documentation](http://docs.python.org/library/functions.html#range).
          _.range = function(start, stop, step) {
            if (stop == null) {
              stop = start || 0;
              start = 0;
            }
            step = step || 1;
    
            var length = Math.max(Math.ceil((stop - start) / step), 0);
            var range = Array(length);
    
            for (var idx = 0; idx < length; idx++, start += step) {
              range[idx] = start;
            }
    
            return range;
          };
    
          // Function (ahem) Functions
          // ------------------
    
          // Determines whether to execute a function as a constructor
          // or a normal function with the provided arguments
          var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
            if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
            var self = baseCreate(sourceFunc.prototype);
            var result = sourceFunc.apply(self, args);
            if (_.isObject(result)) return result;
            return self;
          };
    
          // Create a function bound to a given object (assigning `this`, and arguments,
          // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
          // available.
          _.bind = function(func, context) {
            if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
            if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
            var args = slice.call(arguments, 2);
            var bound = function() {
              return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
            };
            return bound;
          };
    
          // Partially apply a function by creating a version that has had some of its
          // arguments pre-filled, without changing its dynamic `this` context. _ acts
          // as a placeholder, allowing any combination of arguments to be pre-filled.
          _.partial = function(func) {
            var boundArgs = slice.call(arguments, 1);
            var bound = function() {
              var position = 0, length = boundArgs.length;
              var args = Array(length);
              for (var i = 0; i < length; i++) {
                args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
              }
              while (position < arguments.length) args.push(arguments[position++]);
              return executeBound(func, bound, this, this, args);
            };
            return bound;
          };
    
          // Bind a number of an object's methods to that object. Remaining arguments
          // are the method names to be bound. Useful for ensuring that all callbacks
          // defined on an object belong to it.
          _.bindAll = function(obj) {
            var i, length = arguments.length, key;
            if (length <= 1) throw new Error('bindAll must be passed function names');
            for (i = 1; i < length; i++) {
              key = arguments[i];
              obj[key] = _.bind(obj[key], obj);
            }
            return obj;
          };
    
          // Memoize an expensive function by storing its results.
          _.memoize = function(func, hasher) {
            var memoize = function(key) {
              var cache = memoize.cache;
              var address = '' + (hasher ? hasher.apply(this, arguments) : key);
              if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
              return cache[address];
            };
            memoize.cache = {};
            return memoize;
          };
    
          // Delays a function for the given number of milliseconds, and then calls
          // it with the arguments supplied.
          _.delay = function(func, wait) {
            var args = slice.call(arguments, 2);
            return setTimeout(function(){
              return func.apply(null, args);
            }, wait);
          };
    
          // Defers a function, scheduling it to run after the current call stack has
          // cleared.
          _.defer = _.partial(_.delay, _, 1);
    
          // Returns a function, that, when invoked, will only be triggered at most once
          // during a given window of time. Normally, the throttled function will run
          // as much as it can, without ever going more than once per `wait` duration;
          // but if you'd like to disable the execution on the leading edge, pass
          // `{leading: false}`. To disable execution on the trailing edge, ditto.
          _.throttle = function(func, wait, options) {
            var context, args, result;
            var timeout = null;
            var previous = 0;
            if (!options) options = {};
            var later = function() {
              previous = options.leading === false ? 0 : _.now();
              timeout = null;
              result = func.apply(context, args);
              if (!timeout) context = args = null;
            };
            return function() {
              var now = _.now();
              if (!previous && options.leading === false) previous = now;
              var remaining = wait - (now - previous);
              context = this;
              args = arguments;
              if (remaining <= 0 || remaining > wait) {
                if (timeout) {
                  clearTimeout(timeout);
                  timeout = null;
                }
                previous = now;
                result = func.apply(context, args);
                if (!timeout) context = args = null;
              } else if (!timeout && options.trailing !== false) {
                timeout = setTimeout(later, remaining);
              }
              return result;
            };
          };
    
          // Returns a function, that, as long as it continues to be invoked, will not
          // be triggered. The function will be called after it stops being called for
          // N milliseconds. If `immediate` is passed, trigger the function on the
          // leading edge, instead of the trailing.
          _.debounce = function(func, wait, immediate) {
            var timeout, args, context, timestamp, result;
    
            var later = function() {
              var last = _.now() - timestamp;
    
              if (last < wait && last >= 0) {
                timeout = setTimeout(later, wait - last);
              } else {
                timeout = null;
                if (!immediate) {
                  result = func.apply(context, args);
                  if (!timeout) context = args = null;
                }
              }
            };
    
            return function() {
              context = this;
              args = arguments;
              timestamp = _.now();
              var callNow = immediate && !timeout;
              if (!timeout) timeout = setTimeout(later, wait);
              if (callNow) {
                result = func.apply(context, args);
                context = args = null;
              }
    
              return result;
            };
          };
    
          // Returns the first function passed as an argument to the second,
          // allowing you to adjust arguments, run code before and after, and
          // conditionally execute the original function.
          _.wrap = function(func, wrapper) {
            return _.partial(wrapper, func);
          };
    
          // Returns a negated version of the passed-in predicate.
          _.negate = function(predicate) {
            return function() {
              return !predicate.apply(this, arguments);
            };
          };
    
          // Returns a function that is the composition of a list of functions, each
          // consuming the return value of the function that follows.
          _.compose = function() {
            var args = arguments;
            var start = args.length - 1;
            return function() {
              var i = start;
              var result = args[start].apply(this, arguments);
              while (i--) result = args[i].call(this, result);
              return result;
            };
          };
    
          // Returns a function that will only be executed on and after the Nth call.
          _.after = function(times, func) {
            return function() {
              if (--times < 1) {
                return func.apply(this, arguments);
              }
            };
          };
    
          // Returns a function that will only be executed up to (but not including) the Nth call.
          _.before = function(times, func) {
            var memo;
            return function() {
              if (--times > 0) {
                memo = func.apply(this, arguments);
              }
              if (times <= 1) func = null;
              return memo;
            };
          };
    
          // Returns a function that will be executed at most one time, no matter how
          // often you call it. Useful for lazy initialization.
          _.once = _.partial(_.before, 2);
    
          // Object Functions
          // ----------------
    
          // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
          var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
          var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
                              'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];
    
          function collectNonEnumProps(obj, keys) {
            var nonEnumIdx = nonEnumerableProps.length;
            var constructor = obj.constructor;
            var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;
    
            // Constructor is a special case.
            var prop = 'constructor';
            if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);
    
            while (nonEnumIdx--) {
              prop = nonEnumerableProps[nonEnumIdx];
              if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
                keys.push(prop);
              }
            }
          }
    
          // Retrieve the names of an object's own properties.
          // Delegates to **ECMAScript 5**'s native `Object.keys`
          _.keys = function(obj) {
            if (!_.isObject(obj)) return [];
            if (nativeKeys) return nativeKeys(obj);
            var keys = [];
            for (var key in obj) if (_.has(obj, key)) keys.push(key);
            // Ahem, IE < 9.
            if (hasEnumBug) collectNonEnumProps(obj, keys);
            return keys;
          };
    
          // Retrieve all the property names of an object.
          _.allKeys = function(obj) {
            if (!_.isObject(obj)) return [];
            var keys = [];
            for (var key in obj) keys.push(key);
            // Ahem, IE < 9.
            if (hasEnumBug) collectNonEnumProps(obj, keys);
            return keys;
          };
    
          // Retrieve the values of an object's properties.
          _.values = function(obj) {
            var keys = _.keys(obj);
            var length = keys.length;
            var values = Array(length);
            for (var i = 0; i < length; i++) {
              values[i] = obj[keys[i]];
            }
            return values;
          };
    
          // Returns the results of applying the iteratee to each element of the object
          // In contrast to _.map it returns an object
          _.mapObject = function(obj, iteratee, context) {
            iteratee = cb(iteratee, context);
            var keys =  _.keys(obj),
                  length = keys.length,
                  results = {},
                  currentKey;
              for (var index = 0; index < length; index++) {
                currentKey = keys[index];
                results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
              }
              return results;
          };
    
          // Convert an object into a list of `[key, value]` pairs.
          _.pairs = function(obj) {
            var keys = _.keys(obj);
            var length = keys.length;
            var pairs = Array(length);
            for (var i = 0; i < length; i++) {
              pairs[i] = [keys[i], obj[keys[i]]];
            }
            return pairs;
          };
    
          // Invert the keys and values of an object. The values must be serializable.
          _.invert = function(obj) {
            var result = {};
            var keys = _.keys(obj);
            for (var i = 0, length = keys.length; i < length; i++) {
              result[obj[keys[i]]] = keys[i];
            }
            return result;
          };
    
          // Return a sorted list of the function names available on the object.
          // Aliased as `methods`
          _.functions = _.methods = function(obj) {
            var names = [];
            for (var key in obj) {
              if (_.isFunction(obj[key])) names.push(key);
            }
            return names.sort();
          };
    
          // Extend a given object with all the properties in passed-in object(s).
          _.extend = createAssigner(_.allKeys);
    
          // Assigns a given object with all the own properties in the passed-in object(s)
          // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
          _.extendOwn = _.assign = createAssigner(_.keys);
    
          // Returns the first key on an object that passes a predicate test
          _.findKey = function(obj, predicate, context) {
            predicate = cb(predicate, context);
            var keys = _.keys(obj), key;
            for (var i = 0, length = keys.length; i < length; i++) {
              key = keys[i];
              if (predicate(obj[key], key, obj)) return key;
            }
          };
    
          // Return a copy of the object only containing the whitelisted properties.
          _.pick = function(object, oiteratee, context) {
            var result = {}, obj = object, iteratee, keys;
            if (obj == null) return result;
            if (_.isFunction(oiteratee)) {
              keys = _.allKeys(obj);
              iteratee = optimizeCb(oiteratee, context);
            } else {
              keys = flatten(arguments, false, false, 1);
              iteratee = function(value, key, obj) { return key in obj; };
              obj = Object(obj);
            }
            for (var i = 0, length = keys.length; i < length; i++) {
              var key = keys[i];
              var value = obj[key];
              if (iteratee(value, key, obj)) result[key] = value;
            }
            return result;
          };
    
           // Return a copy of the object without the blacklisted properties.
          _.omit = function(obj, iteratee, context) {
            if (_.isFunction(iteratee)) {
              iteratee = _.negate(iteratee);
            } else {
              var keys = _.map(flatten(arguments, false, false, 1), String);
              iteratee = function(value, key) {
                return !_.contains(keys, key);
              };
            }
            return _.pick(obj, iteratee, context);
          };
    
          // Fill in a given object with default properties.
          _.defaults = createAssigner(_.allKeys, true);
    
          // Creates an object that inherits from the given prototype object.
          // If additional properties are provided then they will be added to the
          // created object.
          _.create = function(prototype, props) {
            var result = baseCreate(prototype);
            if (props) _.extendOwn(result, props);
            return result;
          };
    
          // Create a (shallow-cloned) duplicate of an object.
          _.clone = function(obj) {
            if (!_.isObject(obj)) return obj;
            return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
          };
    
          // Invokes interceptor with the obj, and then returns obj.
          // The primary purpose of this method is to "tap into" a method chain, in
          // order to perform operations on intermediate results within the chain.
          _.tap = function(obj, interceptor) {
            interceptor(obj);
            return obj;
          };
    
          // Returns whether an object has a given set of `key:value` pairs.
          _.isMatch = function(object, attrs) {
            var keys = _.keys(attrs), length = keys.length;
            if (object == null) return !length;
            var obj = Object(object);
            for (var i = 0; i < length; i++) {
              var key = keys[i];
              if (attrs[key] !== obj[key] || !(key in obj)) return false;
            }
            return true;
          };
    
    
          // Internal recursive comparison function for `isEqual`.
          var eq = function(a, b, aStack, bStack) {
            // Identical objects are equal. `0 === -0`, but they aren't identical.
            // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
            if (a === b) return a !== 0 || 1 / a === 1 / b;
            // A strict comparison is necessary because `null == undefined`.
            if (a == null || b == null) return a === b;
            // Unwrap any wrapped objects.
            if (a instanceof _) a = a._wrapped;
            if (b instanceof _) b = b._wrapped;
            // Compare `[[Class]]` names.
            var className = toString.call(a);
            if (className !== toString.call(b)) return false;
            switch (className) {
              // Strings, numbers, regular expressions, dates, and booleans are compared by value.
              case '[object RegExp]':
              // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
              case '[object String]':
                // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
                // equivalent to `new String("5")`.
                return '' + a === '' + b;
              case '[object Number]':
                // `NaN`s are equivalent, but non-reflexive.
                // Object(NaN) is equivalent to NaN
                if (+a !== +a) return +b !== +b;
                // An `egal` comparison is performed for other numeric values.
                return +a === 0 ? 1 / +a === 1 / b : +a === +b;
              case '[object Date]':
              case '[object Boolean]':
                // Coerce dates and booleans to numeric primitive values. Dates are compared by their
                // millisecond representations. Note that invalid dates with millisecond representations
                // of `NaN` are not equivalent.
                return +a === +b;
            }
    
            var areArrays = className === '[object Array]';
            if (!areArrays) {
              if (typeof a != 'object' || typeof b != 'object') return false;
    
              // Objects with different constructors are not equivalent, but `Object`s or `Array`s
              // from different frames are.
              var aCtor = a.constructor, bCtor = b.constructor;
              if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                                       _.isFunction(bCtor) && bCtor instanceof bCtor)
                                  && ('constructor' in a && 'constructor' in b)) {
                return false;
              }
            }
            // Assume equality for cyclic structures. The algorithm for detecting cyclic
            // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    
            // Initializing stack of traversed objects.
            // It's done here since we only need them for objects and arrays comparison.
            aStack = aStack || [];
            bStack = bStack || [];
            var length = aStack.length;
            while (length--) {
              // Linear search. Performance is inversely proportional to the number of
              // unique nested structures.
              if (aStack[length] === a) return bStack[length] === b;
            }
    
            // Add the first object to the stack of traversed objects.
            aStack.push(a);
            bStack.push(b);
    
            // Recursively compare objects and arrays.
            if (areArrays) {
              // Compare array lengths to determine if a deep comparison is necessary.
              length = a.length;
              if (length !== b.length) return false;
              // Deep compare the contents, ignoring non-numeric properties.
              while (length--) {
                if (!eq(a[length], b[length], aStack, bStack)) return false;
              }
            } else {
              // Deep compare objects.
              var keys = _.keys(a), key;
              length = keys.length;
              // Ensure that both objects contain the same number of properties before comparing deep equality.
              if (_.keys(b).length !== length) return false;
              while (length--) {
                // Deep compare each member
                key = keys[length];
                if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
              }
            }
            // Remove the first object from the stack of traversed objects.
            aStack.pop();
            bStack.pop();
            return true;
          };
    
          // Perform a deep comparison to check if two objects are equal.
          _.isEqual = function(a, b) {
            return eq(a, b);
          };
    
          // Is a given array, string, or object empty?
          // An "empty" object has no enumerable own-properties.
          _.isEmpty = function(obj) {
            if (obj == null) return true;
            if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
            return _.keys(obj).length === 0;
          };
    
          // Is a given value a DOM element?
          _.isElement = function(obj) {
            return !!(obj && obj.nodeType === 1);
          };
    
          // Is a given value an array?
          // Delegates to ECMA5's native Array.isArray
          _.isArray = nativeIsArray || function(obj) {
            return toString.call(obj) === '[object Array]';
          };
    
          // Is a given variable an object?
          _.isObject = function(obj) {
            var type = typeof obj;
            return type === 'function' || type === 'object' && !!obj;
          };
    
          // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
          _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
            _['is' + name] = function(obj) {
              return toString.call(obj) === '[object ' + name + ']';
            };
          });
    
          // Define a fallback version of the method in browsers (ahem, IE < 9), where
          // there isn't any inspectable "Arguments" type.
          if (!_.isArguments(arguments)) {
            _.isArguments = function(obj) {
              return _.has(obj, 'callee');
            };
          }
    
          // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
          // IE 11 (#1621), and in Safari 8 (#1929).
          if (typeof /./ != 'function' && typeof Int8Array != 'object') {
            _.isFunction = function(obj) {
              return typeof obj == 'function' || false;
            };
          }
    
          // Is a given object a finite number?
          _.isFinite = function(obj) {
            return isFinite(obj) && !isNaN(parseFloat(obj));
          };
    
          // Is the given value `NaN`? (NaN is the only number which does not equal itself).
          _.isNaN = function(obj) {
            return _.isNumber(obj) && obj !== +obj;
          };
    
          // Is a given value a boolean?
          _.isBoolean = function(obj) {
            return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
          };
    
          // Is a given value equal to null?
          _.isNull = function(obj) {
            return obj === null;
          };
    
          // Is a given variable undefined?
          _.isUndefined = function(obj) {
            return obj === void 0;
          };
    
          // Shortcut function for checking if an object has a given property directly
          // on itself (in other words, not on a prototype).
          _.has = function(obj, key) {
            return obj != null && hasOwnProperty.call(obj, key);
          };
    
          // Utility Functions
          // -----------------
    
          // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
          // previous owner. Returns a reference to the Underscore object.
          _.noConflict = function() {
            root._ = previousUnderscore;
            return this;
          };
    
          // Keep the identity function around for default iteratees.
          _.identity = function(value) {
            return value;
          };
    
          // Predicate-generating functions. Often useful outside of Underscore.
          _.constant = function(value) {
            return function() {
              return value;
            };
          };
    
          _.noop = function(){};
    
          _.property = property;
    
          // Generates a function for a given object that returns a given property.
          _.propertyOf = function(obj) {
            return obj == null ? function(){} : function(key) {
              return obj[key];
            };
          };
    
          // Returns a predicate for checking whether an object has a given set of
          // `key:value` pairs.
          _.matcher = _.matches = function(attrs) {
            attrs = _.extendOwn({}, attrs);
            return function(obj) {
              return _.isMatch(obj, attrs);
            };
          };
    
          // Run a function **n** times.
          _.times = function(n, iteratee, context) {
            var accum = Array(Math.max(0, n));
            iteratee = optimizeCb(iteratee, context, 1);
            for (var i = 0; i < n; i++) accum[i] = iteratee(i);
            return accum;
          };
    
          // Return a random integer between min and max (inclusive).
          _.random = function(min, max) {
            if (max == null) {
              max = min;
              min = 0;
            }
            return min + Math.floor(Math.random() * (max - min + 1));
          };
    
          // A (possibly faster) way to get the current timestamp as an integer.
          _.now = Date.now || function() {
            return new Date().getTime();
          };
    
           // List of HTML entities for escaping.
          var escapeMap = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#x27;',
            '`': '&#x60;'
          };
          var unescapeMap = _.invert(escapeMap);
    
          // Functions for escaping and unescaping strings to/from HTML interpolation.
          var createEscaper = function(map) {
            var escaper = function(match) {
              return map[match];
            };
            // Regexes for identifying a key that needs to be escaped
            var source = '(?:' + _.keys(map).join('|') + ')';
            var testRegexp = RegExp(source);
            var replaceRegexp = RegExp(source, 'g');
            return function(string) {
              string = string == null ? '' : '' + string;
              return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
            };
          };
          _.escape = createEscaper(escapeMap);
          _.unescape = createEscaper(unescapeMap);
    
          // If the value of the named `property` is a function then invoke it with the
          // `object` as context; otherwise, return it.
          _.result = function(object, property, fallback) {
            var value = object == null ? void 0 : object[property];
            if (value === void 0) {
              value = fallback;
            }
            return _.isFunction(value) ? value.call(object) : value;
          };
    
          // Generate a unique integer id (unique within the entire client session).
          // Useful for temporary DOM ids.
          var idCounter = 0;
          _.uniqueId = function(prefix) {
            var id = ++idCounter + '';
            return prefix ? prefix + id : id;
          };
    
          // By default, Underscore uses ERB-style template delimiters, change the
          // following template settings to use alternative delimiters.
          _.templateSettings = {
            evaluate    : /<%([\s\S]+?)%>/g,
            interpolate : /<%=([\s\S]+?)%>/g,
            escape      : /<%-([\s\S]+?)%>/g
          };
    
          // When customizing `templateSettings`, if you don't want to define an
          // interpolation, evaluation or escaping regex, we need one that is
          // guaranteed not to match.
          var noMatch = /(.)^/;
    
          // Certain characters need to be escaped so that they can be put into a
          // string literal.
          var escapes = {
            "'":      "'",
            '\\':     '\\',
            '\r':     'r',
            '\n':     'n',
            '\u2028': 'u2028',
            '\u2029': 'u2029'
          };
    
          var escaper = /\\|'|\r|\n|\u2028|\u2029/g;
    
          var escapeChar = function(match) {
            return '\\' + escapes[match];
          };
    
          // JavaScript micro-templating, similar to John Resig's implementation.
          // Underscore templating handles arbitrary delimiters, preserves whitespace,
          // and correctly escapes quotes within interpolated code.
          // NB: `oldSettings` only exists for backwards compatibility.
          _.template = function(text, settings, oldSettings) {
            if (!settings && oldSettings) settings = oldSettings;
            settings = _.defaults({}, settings, _.templateSettings);
    
            // Combine delimiters into one regular expression via alternation.
            var matcher = RegExp([
              (settings.escape || noMatch).source,
              (settings.interpolate || noMatch).source,
              (settings.evaluate || noMatch).source
            ].join('|') + '|$', 'g');
    
            // Compile the template source, escaping string literals appropriately.
            var index = 0;
            var source = "__p+='";
            text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
              source += text.slice(index, offset).replace(escaper, escapeChar);
              index = offset + match.length;
    
              if (escape) {
                source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
              } else if (interpolate) {
                source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
              } else if (evaluate) {
                source += "';\n" + evaluate + "\n__p+='";
              }
    
              // Adobe VMs need the match returned to produce the correct offest.
              return match;
            });
            source += "';\n";
    
            // If a variable is not specified, place data values in local scope.
            if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';
    
            source = "var __t,__p='',__j=Array.prototype.join," +
              "print=function(){__p+=__j.call(arguments,'');};\n" +
              source + 'return __p;\n';
    
            try {
              var render = new Function(settings.variable || 'obj', '_', source);
            } catch (e) {
              e.source = source;
              throw e;
            }
    
            var template = function(data) {
              return render.call(this, data, _);
            };
    
            // Provide the compiled source as a convenience for precompilation.
            var argument = settings.variable || 'obj';
            template.source = 'function(' + argument + '){\n' + source + '}';
    
            return template;
          };
    
          // Add a "chain" function. Start chaining a wrapped Underscore object.
          _.chain = function(obj) {
            var instance = _(obj);
            instance._chain = true;
            return instance;
          };
    
          // OOP
          // ---------------
          // If Underscore is called as a function, it returns a wrapped object that
          // can be used OO-style. This wrapper holds altered versions of all the
          // underscore functions. Wrapped objects may be chained.
    
          // Helper function to continue chaining intermediate results.
          var result = function(instance, obj) {
            return instance._chain ? _(obj).chain() : obj;
          };
    
          // Add your own custom functions to the Underscore object.
          _.mixin = function(obj) {
            _.each(_.functions(obj), function(name) {
              var func = _[name] = obj[name];
              _.prototype[name] = function() {
                var args = [this._wrapped];
                push.apply(args, arguments);
                return result(this, func.apply(_, args));
              };
            });
          };
    
          // Add all of the Underscore functions to the wrapper object.
          _.mixin(_);
    
          // Add all mutator Array functions to the wrapper.
          _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
            var method = ArrayProto[name];
            _.prototype[name] = function() {
              var obj = this._wrapped;
              method.apply(obj, arguments);
              if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
              return result(this, obj);
            };
          });
    
          // Add all accessor Array functions to the wrapper.
          _.each(['concat', 'join', 'slice'], function(name) {
            var method = ArrayProto[name];
            _.prototype[name] = function() {
              return result(this, method.apply(this._wrapped, arguments));
            };
          });
    
          // Extracts the result from a wrapped and chained object.
          _.prototype.value = function() {
            return this._wrapped;
          };
    
          // Provide unwrapping proxy for some methods used in engine operations
          // such as arithmetic and JSON stringification.
          _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;
    
          _.prototype.toString = function() {
            return '' + this._wrapped;
          };
    
          // AMD registration happens at the end for compatibility with AMD loaders
          // that may not enforce next-turn semantics on modules. Even though general
          // practice for AMD registration is to be anonymous, underscore registers
          // as a named module because, like jQuery, it is a base library that is
          // popular enough to be bundled in a third party lib, but not be part of
          // an AMD load request. Those cases could generate an error when an
          // anonymous define() is called outside of a loader request.
          if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
              return _;
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          }
        }.call(this));
    
    
    /***/ }),
    /* 125 */
    /***/ (function(module, exports) {
    
        (function(){var f=window.AmCharts;f.AmRectangularChart=f.Class({inherits:f.AmCoordinateChart,construct:function(a){f.AmRectangularChart.base.construct.call(this,a);this.theme=a;this.createEvents("zoomed","changed");this.marginRight=this.marginBottom=this.marginTop=this.marginLeft=20;this.depth3D=this.angle=0;this.plotAreaFillColors="#FFFFFF";this.plotAreaFillAlphas=0;this.plotAreaBorderColor="#000000";this.plotAreaBorderAlpha=0;this.maxZoomFactor=20;this.zoomOutButtonImageSize=19;this.zoomOutButtonImage=
        "lens";this.zoomOutText="Show all";this.zoomOutButtonColor="#e5e5e5";this.zoomOutButtonAlpha=0;this.zoomOutButtonRollOverAlpha=1;this.zoomOutButtonPadding=8;this.trendLines=[];this.autoMargins=!0;this.marginsUpdated=!1;this.autoMarginOffset=10;f.applyTheme(this,a,"AmRectangularChart")},initChart:function(){f.AmRectangularChart.base.initChart.call(this);this.updateDxy();!this.marginsUpdated&&this.autoMargins&&(this.resetMargins(),this.drawGraphs=!1);this.processScrollbars();this.updateMargins();this.updatePlotArea();
        this.updateScrollbars();this.updateTrendLines();this.updateChartCursor();this.updateValueAxes();this.scrollbarOnly||this.updateGraphs()},drawChart:function(){f.AmRectangularChart.base.drawChart.call(this);this.drawPlotArea();if(f.ifArray(this.chartData)){var a=this.chartCursor;a&&a.draw()}},resetMargins:function(){var a={},b;if("xy"==this.type){var c=this.xAxes,d=this.yAxes;for(b=0;b<c.length;b++){var g=c[b];g.ignoreAxisWidth||(g.setOrientation(!0),g.fixAxisPosition(),a[g.position]=!0)}for(b=0;b<
        d.length;b++)c=d[b],c.ignoreAxisWidth||(c.setOrientation(!1),c.fixAxisPosition(),a[c.position]=!0)}else{d=this.valueAxes;for(b=0;b<d.length;b++)c=d[b],c.ignoreAxisWidth||(c.setOrientation(this.rotate),c.fixAxisPosition(),a[c.position]=!0);(b=this.categoryAxis)&&!b.ignoreAxisWidth&&(b.setOrientation(!this.rotate),b.fixAxisPosition(),b.fixAxisPosition(),a[b.position]=!0)}a.left&&(this.marginLeft=0);a.right&&(this.marginRight=0);a.top&&(this.marginTop=0);a.bottom&&(this.marginBottom=0);this.fixMargins=
        a},measureMargins:function(){var a=this.valueAxes,b,c=this.autoMarginOffset,d=this.fixMargins,g=this.realWidth,h=this.realHeight,e=c,f=c,k=g;b=h;var m;for(m=0;m<a.length;m++)a[m].handleSynchronization(),b=this.getAxisBounds(a[m],e,k,f,b),e=Math.round(b.l),k=Math.round(b.r),f=Math.round(b.t),b=Math.round(b.b);if(a=this.categoryAxis)b=this.getAxisBounds(a,e,k,f,b),e=Math.round(b.l),k=Math.round(b.r),f=Math.round(b.t),b=Math.round(b.b);d.left&&e<c&&(this.marginLeft=Math.round(-e+c),!isNaN(this.minMarginLeft)&&
        this.marginLeft<this.minMarginLeft&&(this.marginLeft=this.minMarginLeft));d.right&&k>=g-c&&(this.marginRight=Math.round(k-g+c),!isNaN(this.minMarginRight)&&this.marginRight<this.minMarginRight&&(this.marginRight=this.minMarginRight));d.top&&f<c+this.titleHeight&&(this.marginTop=Math.round(this.marginTop-f+c+this.titleHeight),!isNaN(this.minMarginTop)&&this.marginTop<this.minMarginTop&&(this.marginTop=this.minMarginTop));d.bottom&&b>h-c&&(this.marginBottom=Math.round(this.marginBottom+b-h+c),!isNaN(this.minMarginBottom)&&
        this.marginBottom<this.minMarginBottom&&(this.marginBottom=this.minMarginBottom));this.initChart()},getAxisBounds:function(a,b,c,d,g){if(!a.ignoreAxisWidth){var h=a.labelsSet,e=a.tickLength;a.inside&&(e=0);if(h)switch(h=a.getBBox(),a.position){case "top":a=h.y;d>a&&(d=a);break;case "bottom":a=h.y+h.height;g<a&&(g=a);break;case "right":a=h.x+h.width+e+3;c<a&&(c=a);break;case "left":a=h.x-e,b>a&&(b=a)}}return{l:b,t:d,r:c,b:g}},drawZoomOutButton:function(){var a=this;if(!a.zbSet){var b=a.container.set();
        a.zoomButtonSet.push(b);var c=a.color,d=a.fontSize,g=a.zoomOutButtonImageSize,h=a.zoomOutButtonImage.replace(/\.[a-z]*$/i,""),e=a.langObj.zoomOutText||a.zoomOutText,l=a.zoomOutButtonColor,k=a.zoomOutButtonAlpha,m=a.zoomOutButtonFontSize,p=a.zoomOutButtonPadding;isNaN(m)||(d=m);(m=a.zoomOutButtonFontColor)&&(c=m);var m=a.zoomOutButton,n;m&&(m.fontSize&&(d=m.fontSize),m.color&&(c=m.color),m.backgroundColor&&(l=m.backgroundColor),isNaN(m.backgroundAlpha)||(a.zoomOutButtonRollOverAlpha=m.backgroundAlpha));
        var u=m=0,u=a.pathToImages;if(h){if(f.isAbsolute(h)||void 0===u)u="";n=a.container.image(u+h+a.extension,0,0,g,g);f.setCN(a,n,"zoom-out-image");b.push(n);n=n.getBBox();m=n.width+5}void 0!==e&&(c=f.text(a.container,e,c,a.fontFamily,d,"start"),f.setCN(a,c,"zoom-out-label"),d=c.getBBox(),u=n?n.height/2-3:d.height/2,c.translate(m,u),b.push(c));n=b.getBBox();c=1;f.isModern||(c=0);l=f.rect(a.container,n.width+2*p+5,n.height+2*p-2,l,1,1,l,c);l.setAttr("opacity",k);l.translate(-p,-p);f.setCN(a,l,"zoom-out-bg");
        b.push(l);l.toBack();a.zbBG=l;n=l.getBBox();b.translate(a.marginLeftReal+a.plotAreaWidth-n.width+p,a.marginTopReal+p);b.hide();b.mouseover(function(){a.rollOverZB()}).mouseout(function(){a.rollOutZB()}).click(function(){a.clickZB()}).touchstart(function(){a.rollOverZB()}).touchend(function(){a.rollOutZB();a.clickZB()});for(k=0;k<b.length;k++)b[k].attr({cursor:"pointer"});void 0!==a.zoomOutButtonTabIndex&&(b.setAttr("tabindex",a.zoomOutButtonTabIndex),b.setAttr("role","menuitem"),b.keyup(function(b){13==
        b.keyCode&&a.clickZB()}));a.zbSet=b}},rollOverZB:function(){this.rolledOverZB=!0;this.zbBG.setAttr("opacity",this.zoomOutButtonRollOverAlpha)},rollOutZB:function(){this.rolledOverZB=!1;this.zbBG.setAttr("opacity",this.zoomOutButtonAlpha)},clickZB:function(){this.rolledOverZB=!1;this.zoomOut()},zoomOut:function(){this.zoomOutValueAxes()},drawPlotArea:function(){var a=this.dx,b=this.dy,c=this.marginLeftReal,d=this.marginTopReal,g=this.plotAreaWidth-1,h=this.plotAreaHeight-1,e=this.plotAreaFillColors,
        l=this.plotAreaFillAlphas,k=this.plotAreaBorderColor,m=this.plotAreaBorderAlpha;"object"==typeof l&&(l=l[0]);e=f.polygon(this.container,[0,g,g,0,0],[0,0,h,h,0],e,l,1,k,m,this.plotAreaGradientAngle);f.setCN(this,e,"plot-area");e.translate(c+a,d+b);this.set.push(e);0!==a&&0!==b&&(e=this.plotAreaFillColors,"object"==typeof e&&(e=e[0]),e=f.adjustLuminosity(e,-.15),g=f.polygon(this.container,[0,a,g+a,g,0],[0,b,b,0,0],e,l,1,k,m),f.setCN(this,g,"plot-area-bottom"),g.translate(c,d+h),this.set.push(g),a=f.polygon(this.container,
        [0,0,a,a,0],[0,h,h+b,b,0],e,l,1,k,m),f.setCN(this,a,"plot-area-left"),a.translate(c,d),this.set.push(a));(c=this.bbset)&&this.scrollbarOnly&&c.remove()},updatePlotArea:function(){var a=this.updateWidth(),b=this.updateHeight(),c=this.container;this.realWidth=a;this.realWidth=b;c&&this.container.setSize(a,b);var c=this.marginLeftReal,d=this.marginTopReal,a=a-c-this.marginRightReal-this.dx,b=b-d-this.marginBottomReal;1>a&&(a=1);1>b&&(b=1);this.plotAreaWidth=Math.round(a);this.plotAreaHeight=Math.round(b);
        this.plotBalloonsSet.translate(c,d)},updateDxy:function(){this.dx=Math.round(this.depth3D*Math.cos(this.angle*Math.PI/180));this.dy=Math.round(-this.depth3D*Math.sin(this.angle*Math.PI/180));this.d3x=Math.round(this.columnSpacing3D*Math.cos(this.angle*Math.PI/180));this.d3y=Math.round(-this.columnSpacing3D*Math.sin(this.angle*Math.PI/180))},updateMargins:function(){var a=this.getTitleHeight();this.titleHeight=a;this.marginTopReal=this.marginTop-this.dy;this.fixMargins&&!this.fixMargins.top&&(this.marginTopReal+=
        a);this.marginBottomReal=this.marginBottom;this.marginLeftReal=this.marginLeft;this.marginRightReal=this.marginRight},updateValueAxes:function(){var a=this.valueAxes,b;for(b=0;b<a.length;b++){var c=a[b];this.setAxisRenderers(c);this.updateObjectSize(c)}},setAxisRenderers:function(a){a.axisRenderer=f.RecAxis;a.guideFillRenderer=f.RecFill;a.axisItemRenderer=f.RecItem;a.marginsChanged=!0},updateGraphs:function(){var a=this.graphs,b;for(b=0;b<a.length;b++){var c=a[b];c.index=b;c.rotate=this.rotate;this.updateObjectSize(c)}},
        updateObjectSize:function(a){a.width=this.plotAreaWidth-1;a.height=this.plotAreaHeight-1;a.x=this.marginLeftReal;a.y=this.marginTopReal;a.dx=this.dx;a.dy=this.dy},updateChartCursor:function(){var a=this.chartCursor;a&&(a=f.processObject(a,f.ChartCursor,this.theme),this.updateObjectSize(a),this.addChartCursor(a),a.chart=this)},processScrollbars:function(){var a=this.chartScrollbar;a&&(a=f.processObject(a,f.ChartScrollbar,this.theme),this.addChartScrollbar(a))},updateScrollbars:function(){},removeChartCursor:function(){f.callMethod("destroy",
        [this.chartCursor]);this.chartCursor=null},zoomTrendLines:function(){var a=this.trendLines,b;for(b=0;b<a.length;b++){var c=a[b];c.valueAxis.recalculateToPercents?c.set&&c.set.hide():(c.x=this.marginLeftReal,c.y=this.marginTopReal,c.draw())}},handleCursorValueZoom:function(){},addTrendLine:function(a){this.trendLines.push(a)},zoomOutValueAxes:function(){for(var a=this.valueAxes,b=0;b<a.length;b++)a[b].zoomOut()},removeTrendLine:function(a){var b=this.trendLines,c;for(c=b.length-1;0<=c;c--)b[c]==a&&
        b.splice(c,1)},adjustMargins:function(a,b){var c=a.position,d=a.scrollbarHeight+a.offset;a.enabled&&("top"==c?b?this.marginLeftReal+=d:this.marginTopReal+=d:b?this.marginRightReal+=d:this.marginBottomReal+=d)},getScrollbarPosition:function(a,b,c){var d="bottom",g="top";a.oppositeAxis||(g=d,d="top");a.position=b?"bottom"==c||"left"==c?d:g:"top"==c||"right"==c?d:g},updateChartScrollbar:function(a,b){if(a){a.rotate=b;var c=this.marginTopReal,d=this.marginLeftReal,g=a.scrollbarHeight,h=this.dx,e=this.dy,
        f=a.offset;"top"==a.position?b?(a.y=c,a.x=d-g-f):(a.y=c-g+e-f,a.x=d+h):b?(a.y=c+e,a.x=d+this.plotAreaWidth+h+f):(a.y=c+this.plotAreaHeight+f,a.x=this.marginLeftReal)}},showZB:function(a){var b=this.zbSet;a&&(b=this.zoomOutText,""!==b&&b&&this.drawZoomOutButton());if(b=this.zbSet)this.zoomButtonSet.push(b),a?b.show():b.hide(),this.rollOutZB()},handleReleaseOutside:function(a){f.AmRectangularChart.base.handleReleaseOutside.call(this,a);(a=this.chartCursor)&&a.handleReleaseOutside&&a.handleReleaseOutside()},
        handleMouseDown:function(a){f.AmRectangularChart.base.handleMouseDown.call(this,a);var b=this.chartCursor;b&&b.handleMouseDown&&!this.rolledOverZB&&b.handleMouseDown(a)},update:function(){f.AmRectangularChart.base.update.call(this);this.chartCursor&&this.chartCursor.update&&this.chartCursor.update()},handleScrollbarValueZoom:function(a){this.relativeZoomValueAxes(a.target.valueAxes,a.relativeStart,a.relativeEnd);this.zoomAxesAndGraphs()},zoomValueScrollbar:function(a){if(a&&a.enabled){var b=a.valueAxes[0],
        c=b.relativeStart,d=b.relativeEnd;b.reversed&&(d=1-c,c=1-b.relativeEnd);a.percentZoom(c,d)}},zoomAxesAndGraphs:function(){if(!this.scrollbarOnly){var a=this.valueAxes,b;for(b=0;b<a.length;b++)a[b].zoom(this.start,this.end);a=this.graphs;for(b=0;b<a.length;b++)a[b].zoom(this.start,this.end);(b=this.chartCursor)&&b.clearSelection();this.zoomTrendLines()}},handleValueAxisZoomReal:function(a,b){var c=a.relativeStart,d=a.relativeEnd;if(c>d)var g=c,c=d,d=g;this.relativeZoomValueAxes(b,c,d);this.updateAfterValueZoom()},
        updateAfterValueZoom:function(){this.zoomAxesAndGraphs();this.zoomScrollbar()},relativeZoomValueAxes:function(a,b,c){this.hideBalloonReal();b=f.fitToBounds(b,0,1);c=f.fitToBounds(c,0,1);if(b>c){var d=b;b=c;c=d}var d=1/this.maxZoomFactor,g=f.getDecimals(d)+4;c-b<d&&(c=b+(c-b)/2,b=c-d/2,c+=d/2,1<c&&(b-=c-1,c=1),0>b&&(b=0,c=d));b=f.roundTo(b,g);c=f.roundTo(c,g);d=!1;if(a){for(g=0;g<a.length;g++){var h=a[g].zoomToRelativeValues(b,c,!0);h&&(d=h)}this.showZB()}return d},addChartCursor:function(a){f.callMethod("destroy",
        [this.chartCursor]);a&&(this.listenTo(a,"moved",this.handleCursorMove),this.listenTo(a,"zoomed",this.handleCursorZoom),this.listenTo(a,"zoomStarted",this.handleCursorZoomStarted),this.listenTo(a,"panning",this.handleCursorPanning),this.listenTo(a,"onHideCursor",this.handleCursorHide));this.chartCursor=a},handleCursorChange:function(){},handleCursorMove:function(a){var b,c=this.valueAxes;for(b=0;b<c.length;b++)if(!a.panning){var d=c[b];d&&d.showBalloon&&d.showBalloon(a.x,a.y)}},handleCursorZoom:function(a){if(this.skipZoomed)this.skipZoomed=
        !1;else{var b=this.startX0,c=this.endX0,d=this.endY0,g=this.startY0,h=a.startX,e=a.endX,f=a.startY,k=a.endY;this.startX0=this.endX0=this.startY0=this.endY0=NaN;this.handleCursorZoomReal(b+h*(c-b),b+e*(c-b),g+f*(d-g),g+k*(d-g),a)}},handleCursorHide:function(){var a,b=this.valueAxes;for(a=0;a<b.length;a++)b[a].hideBalloon();b=this.graphs;for(a=0;a<b.length;a++)b[a].hideBalloonReal()}})})();(function(){var f=window.AmCharts;f.AmSerialChart=f.Class({inherits:f.AmRectangularChart,construct:function(a){this.type="serial";f.AmSerialChart.base.construct.call(this,a);this.cname="AmSerialChart";this.theme=a;this.columnSpacing=5;this.columnSpacing3D=0;this.columnWidth=.8;var b=new f.CategoryAxis(a);b.chart=this;this.categoryAxis=b;this.zoomOutOnDataUpdate=!0;this.mouseWheelZoomEnabled=this.mouseWheelScrollEnabled=this.rotate=this.skipZoom=!1;this.minSelectedTime=0;f.applyTheme(this,a,this.cname)},
        initChart:function(){f.AmSerialChart.base.initChart.call(this);this.updateCategoryAxis(this.categoryAxis,this.rotate,"categoryAxis");if(this.dataChanged)this.parseData();else this.onDataUpdated();this.drawGraphs=!0},onDataUpdated:function(){var a=this.countColumns(),b=this.chartData,c=this.graphs,d;for(d=0;d<c.length;d++){var g=c[d];g.data=b;g.columnCount=a}0<b.length&&(this.firstTime=this.getStartTime(b[0].time),this.lastTime=this.getEndTime(b[b.length-1].time));this.drawChart();this.autoMargins&&
        !this.marginsUpdated?(this.marginsUpdated=!0,this.measureMargins()):this.dispDUpd()},syncGrid:function(){if(this.synchronizeGrid){var a=this.valueAxes,b,c;if(0<a.length){var d=0;for(c=0;c<a.length;c++)b=a[c],d<b.gridCountReal&&(d=b.gridCountReal);var g=!1;for(c=0;c<a.length;c++)if(b=a[c],b.gridCountReal<d){var h=(d-b.gridCountReal)/2,e=g=h;0!==h-Math.round(h)&&(g-=.5,e+=.5);0<=b.min&&0>b.min-g*b.step&&(e+=g,g=0);0>=b.max&&0<b.max+e*b.step&&(g+=e,e=0);h=f.getDecimals(b.step);b.minimum=f.roundTo(b.min-
        g*b.step,h);b.maximum=f.roundTo(b.max+e*b.step,h);b.setStep=b.step;g=b.strictMinMax=!0}g&&this.updateAfterValueZoom();for(c=0;c<a.length;c++)b=a[c],b.minimum=NaN,b.maximum=NaN,b.setStep=NaN,b.strictMinMax=!1}}},handleWheelReal:function(a,b){if(!this.wheelBusy){var c=this.categoryAxis,d=c.parseDates,g=c.minDuration(),h=1,e=1;this.mouseWheelZoomEnabled?b||(h=-1):b&&(h=-1);var f=this.chartCursor;if(f){var k=f.mouseX,f=f.mouseY;h!=e&&(k=this.rotate?f/this.plotAreaHeight:k/this.plotAreaWidth,h*=k,e*=1-
        k);k=.05*(this.end-this.start);d&&(k=.05*(this.endTime-this.startTime)/g);1>k&&(k=1);h*=k;e*=k;if(!d||c.equalSpacing)h=Math.round(h),e=Math.round(e)}f=this.chartData.length;c=this.lastTime;k=this.firstTime;0>a?d?(f=this.endTime-this.startTime,d=this.startTime+h*g,g=this.endTime+e*g,0<e&&0<h&&g>=c&&(g=c,d=c-f),this.zoomToDates(new Date(d),new Date(g))):(0<e&&0<h&&this.end>=f-1&&(h=e=0),d=this.start+h,g=this.end+e,this.zoomToIndexes(d,g)):d?(f=this.endTime-this.startTime,d=this.startTime-h*g,g=this.endTime-
        e*g,0<e&&0<h&&d<=k&&(d=k,g=k+f),this.zoomToDates(new Date(d),new Date(g))):(0<e&&0<h&&1>this.start&&(h=e=0),d=this.start-h,g=this.end-e,this.zoomToIndexes(d,g))}},validateData:function(a){this.marginsUpdated=!1;this.zoomOutOnDataUpdate&&!a&&(this.endTime=this.end=this.startTime=this.start=NaN);var b=a=!1,c=!1,d=this.chartScrollbar;d&&(d.dragging&&(a=!0,d.handleDragStop()),d.resizingRight&&(c=!0,d.rightDragStop()),d.resizingLeft&&(b=!0,d.leftDragStop()));f.AmSerialChart.base.validateData.call(this);
        a&&d.handleDragStart();c&&d.rightDragStart();b&&d.leftDragStart()},drawChart:function(){if(0<this.realWidth&&0<this.realHeight){f.AmSerialChart.base.drawChart.call(this);var a=this.chartData;if(f.ifArray(a)){var b=this.chartScrollbar;!b||!this.marginsUpdated&&this.autoMargins||b.draw();(b=this.valueScrollbar)&&b.draw();var b=a.length-1,c,d;c=this.categoryAxis;if(c.parseDates&&!c.equalSpacing){if(c=this.startTime,d=this.endTime,isNaN(c)||isNaN(d))c=this.firstTime,d=this.lastTime}else{c=this.start;
        d=this.end;if(isNaN(c)||isNaN(d))d=c=NaN;isNaN(c)&&(isNaN(this.startTime)||(c=this.getClosestIndex(a,"time",this.startTime,!0,0,a.length)));isNaN(d)&&(isNaN(this.endTime)||(d=this.getClosestIndex(a,"time",this.endTime,!1,0,a.length)));if(isNaN(c)||isNaN(d))c=0,d=b}this.endTime=this.startTime=this.end=this.start=void 0;this.zoom(c,d)}}else this.cleanChart()},cleanChart:function(){f.callMethod("destroy",[this.valueAxes,this.graphs,this.categoryAxis,this.chartScrollbar,this.chartCursor,this.valueScrollbar])},
        updateCategoryAxis:function(a,b,c){a.chart=this;a.id=c;a.rotate=b;a.setOrientation(!this.rotate);a.init();this.setAxisRenderers(a);this.updateObjectSize(a)},updateValueAxes:function(){f.AmSerialChart.base.updateValueAxes.call(this);var a=this.valueAxes,b;for(b=0;b<a.length;b++){var c=a[b],d=this.rotate;c.rotate=d;c.setOrientation(d);d=this.categoryAxis;if(!d.startOnAxis||d.parseDates)c.expandMinMax=!0}},getStartTime:function(a){var b=this.categoryAxis;return f.resetDateToMin(new Date(a),b.minPeriod,
        1,b.firstDayOfWeek).getTime()},getEndTime:function(a){var b=f.extractPeriod(this.categoryAxis.minPeriod);return f.changeDate(new Date(a),b.period,b.count,!0).getTime()-1},updateMargins:function(){f.AmSerialChart.base.updateMargins.call(this);var a=this.chartScrollbar;a&&(this.getScrollbarPosition(a,this.rotate,this.categoryAxis.position),this.adjustMargins(a,this.rotate));if(a=this.valueScrollbar)this.getScrollbarPosition(a,!this.rotate,this.valueAxes[0].position),this.adjustMargins(a,!this.rotate)},
        updateScrollbars:function(){f.AmSerialChart.base.updateScrollbars.call(this);this.updateChartScrollbar(this.chartScrollbar,this.rotate);this.updateChartScrollbar(this.valueScrollbar,!this.rotate)},zoom:function(a,b){var c=this.categoryAxis;c.parseDates&&!c.equalSpacing?(this.timeZoom(a,b),isNaN(a)&&this.zoomOutValueAxes()):this.indexZoom(a,b);(c=this.chartCursor)&&(c.pan||c.hideCursorReal());this.updateLegendValues()},timeZoom:function(a,b){var c=this.maxSelectedTime;isNaN(c)||(b!=this.endTime&&b-
        a>c&&(a=b-c),a!=this.startTime&&b-a>c&&(b=a+c));var d=this.minSelectedTime;if(0<d&&b-a<d){var g=Math.round(a+(b-a)/2),d=Math.round(d/2);a=g-d;b=g+d}d=this.chartData;g=this.categoryAxis;if(f.ifArray(d)&&(a!=this.startTime||b!=this.endTime)){var h=g.minDuration(),e=this.firstTime,l=this.lastTime;a||(a=e,isNaN(c)||(a=l-c));b||(b=l);a>l&&(a=l);b<e&&(b=e);a<e&&(a=e);b>l&&(b=l);b<a&&(b=a+h);b-a<h/5&&(b<l?b=a+h/5:a=b-h/5);this.startTime=a;this.endTime=b;c=d.length-1;h=this.getClosestIndex(d,"time",a,!0,
        0,c);d=this.getClosestIndex(d,"time",b,!1,h,c);g.timeZoom(a,b);g.zoom(h,d);this.start=f.fitToBounds(h,0,c);this.end=f.fitToBounds(d,0,c);this.zoomAxesAndGraphs();this.zoomScrollbar();this.fixCursor();this.showZB();this.syncGrid();this.updateColumnsDepth();this.dispatchTimeZoomEvent()}},showZB:function(){var a,b=this.categoryAxis;b&&b.parseDates&&!b.equalSpacing&&(this.startTime>this.firstTime&&(a=!0),this.endTime<this.lastTime&&(a=!0));0<this.start&&(a=!0);this.end<this.chartData.length-1&&(a=!0);
        if(b=this.valueAxes)b=b[0],isNaN(b.relativeStart)||(0!==f.roundTo(b.relativeStart,3)&&(a=!0),1!=f.roundTo(b.relativeEnd,3)&&(a=!0));f.AmSerialChart.base.showZB.call(this,a)},updateAfterValueZoom:function(){f.AmSerialChart.base.updateAfterValueZoom.call(this);this.updateColumnsDepth()},indexZoom:function(a,b){var c=this.maxSelectedSeries,d=!1;isNaN(c)||(b!=this.end&&b-a>c&&(a=b-c,d=!0),a!=this.start&&b-a>c&&(b=a+c,d=!0));if(d&&(d=this.chartScrollbar)&&d.dragger){var g=d.dragger.getBBox();d.maxWidth=
        g.width;d.maxHeight=g.height}if(a!=this.start||b!=this.end)d=this.chartData.length-1,isNaN(a)&&(a=0,isNaN(c)||(a=d-c)),isNaN(b)&&(b=d),b<a&&(b=a),b>d&&(b=d),a>d&&(a=d-1),0>a&&(a=0),this.start=a,this.end=b,this.categoryAxis.zoom(a,b),this.zoomAxesAndGraphs(),this.zoomScrollbar(),this.fixCursor(),0!==a||b!=this.chartData.length-1?this.showZB(!0):this.showZB(!1),this.syncGrid(),this.updateColumnsDepth(),this.dispatchIndexZoomEvent()},updateGraphs:function(){f.AmSerialChart.base.updateGraphs.call(this);
        var a=this.graphs,b;for(b=0;b<a.length;b++){var c=a[b];c.columnWidthReal=this.columnWidth;c.categoryAxis=this.categoryAxis;f.isString(c.fillToGraph)&&(c.fillToGraph=this.graphsById[c.fillToGraph])}},zoomAxesAndGraphs:function(){f.AmSerialChart.base.zoomAxesAndGraphs.call(this);this.updateColumnsDepth()},updateColumnsDepth:function(){if(0!==this.depth3D||0!==this.angle){var a,b=this.graphs,c;this.columnsArray=[];for(a=0;a<b.length;a++){c=b[a];var d=c.columnsArray;if(d){var g;for(g=0;g<d.length;g++)this.columnsArray.push(d[g])}}this.columnsArray.sort(this.compareDepth);
        b=this.columnsSet;if(0<this.columnsArray.length){d=this.container.set();this.columnSet.push(d);for(a=0;a<this.columnsArray.length;a++)d.push(this.columnsArray[a].column.set);c&&d.translate(c.x,c.y);this.columnsSet=d}f.remove(b)}},compareDepth:function(a,b){return a.depth>b.depth?1:-1},zoomScrollbar:function(){var a=this.chartScrollbar,b=this.categoryAxis;if(a){if(!this.zoomedByScrollbar){var c=a.dragger;c&&c.stop()}this.zoomedByScrollbar=!1;b.parseDates&&!b.equalSpacing?a.timeZoom(this.startTime,
        this.endTime):a.zoom(this.start,this.end)}this.zoomValueScrollbar(this.valueScrollbar)},updateTrendLines:function(){var a=this.trendLines,b;for(b=0;b<a.length;b++){var c=a[b],c=f.processObject(c,f.TrendLine,this.theme);a[b]=c;c.chart=this;c.id||(c.id="trendLineAuto"+b+"_"+(new Date).getTime());f.isString(c.valueAxis)&&(c.valueAxis=this.getValueAxisById(c.valueAxis));c.valueAxis||(c.valueAxis=this.valueAxes[0]);c.categoryAxis=this.categoryAxis}},countColumns:function(){var a=0,b=this.valueAxes.length,
        c=this.graphs.length,d,g,f=!1,e,l;for(l=0;l<b;l++){g=this.valueAxes[l];var k=g.stackType,m=0;if("100%"==k||"regular"==k)for(f=!1,e=0;e<c;e++)d=this.graphs[e],d.tcc=1,d.valueAxis==g&&"column"==d.type&&(!f&&d.stackable&&(a++,f=!0),(!d.stackable&&d.clustered||d.newStack&&0!==m)&&a++,d.columnIndex=a-1,d.clustered||(d.columnIndex=0),m++);if("none"==k||"3d"==k){f=!1;for(e=0;e<c;e++)d=this.graphs[e],d.valueAxis==g&&"column"==d.type&&(d.clustered?(d.tcc=1,d.newStack&&(a=0),d.hidden||(d.columnIndex=a,a++)):
        d.hidden||(f=!0,d.tcc=1,d.columnIndex=0));f&&0===a&&(a=1)}if("3d"==k){g=1;for(l=0;l<c;l++)d=this.graphs[l],d.newStack&&g++,d.depthCount=g,d.tcc=a;a=g}}return a},parseData:function(){f.AmSerialChart.base.parseData.call(this);this.parseSerialData(this.dataProvider)},getCategoryIndexByValue:function(a){var b=this.chartData,c;for(c=0;c<b.length;c++)if(b[c].category==a)return c},handleScrollbarZoom:function(a){this.zoomedByScrollbar=!0;this.zoom(a.start,a.end)},dispatchTimeZoomEvent:function(){if(this.drawGraphs&&
        (this.prevStartTime!=this.startTime||this.prevEndTime!=this.endTime)){var a={type:"zoomed"};a.startDate=new Date(this.startTime);a.endDate=new Date(this.endTime);a.startIndex=this.start;a.endIndex=this.end;this.startIndex=this.start;this.endIndex=this.end;this.startDate=a.startDate;this.endDate=a.endDate;this.prevStartTime=this.startTime;this.prevEndTime=this.endTime;var b=this.categoryAxis,c=f.extractPeriod(b.minPeriod).period,b=b.dateFormatsObject[c];a.startValue=f.formatDate(a.startDate,b,this);
        a.endValue=f.formatDate(a.endDate,b,this);a.chart=this;a.target=this;this.fire(a)}},dispatchIndexZoomEvent:function(){if(this.drawGraphs&&(this.prevStartIndex!=this.start||this.prevEndIndex!=this.end)){this.startIndex=this.start;this.endIndex=this.end;var a=this.chartData;if(f.ifArray(a)&&!isNaN(this.start)&&!isNaN(this.end)){var b={chart:this,target:this,type:"zoomed"};b.startIndex=this.start;b.endIndex=this.end;b.startValue=a[this.start].category;b.endValue=a[this.end].category;this.categoryAxis.parseDates&&
        (this.startTime=a[this.start].time,this.endTime=a[this.end].time,b.startDate=new Date(this.startTime),b.endDate=new Date(this.endTime));this.prevStartIndex=this.start;this.prevEndIndex=this.end;this.fire(b)}}},updateLegendValues:function(){this.legend&&this.legend.updateValues()},getClosestIndex:function(a,b,c,d,g,f){0>g&&(g=0);f>a.length-1&&(f=a.length-1);var e=g+Math.round((f-g)/2),l=a[e][b];return c==l?e:1>=f-g?d?g:Math.abs(a[g][b]-c)<Math.abs(a[f][b]-c)?g:f:c==l?e:c<l?this.getClosestIndex(a,b,
        c,d,g,e):this.getClosestIndex(a,b,c,d,e,f)},zoomToIndexes:function(a,b){var c=this.chartData;if(c){var d=c.length;0<d&&(0>a&&(a=0),b>d-1&&(b=d-1),d=this.categoryAxis,d.parseDates&&!d.equalSpacing?this.zoom(c[a].time,this.getEndTime(c[b].time)):this.zoom(a,b))}},zoomToDates:function(a,b){var c=this.chartData;if(c)if(this.categoryAxis.equalSpacing){var d=this.getClosestIndex(c,"time",a.getTime(),!0,0,c.length);b=f.resetDateToMin(b,this.categoryAxis.minPeriod,1);c=this.getClosestIndex(c,"time",b.getTime(),
        !1,0,c.length);this.zoom(d,c)}else this.zoom(a.getTime(),b.getTime())},zoomToCategoryValues:function(a,b){this.chartData&&this.zoom(this.getCategoryIndexByValue(a),this.getCategoryIndexByValue(b))},formatPeriodString:function(a,b){if(b){b.periodDataItem={};b.periodPercentDataItem={};var c=["value","open","low","high","close"],d="value open low high close average sum count".split(" "),g=b.valueAxis,h=this.chartData,e=b.numberFormatter;e||(e=this.nf);for(var l=0;l<c.length;l++){for(var k=c[l],m=0,p=
        0,n=0,u=0,v,x,E,t,r,B,q,w,y,C,F=this.start;F<=this.end;F++){var D=h[F];if(D){var A=D.axes[g.id].graphs[b.id];if(A){if(A.values){var z=A.values[k],D=D.x.categoryAxis;if(this.rotate){if(0>D||D>A.graph.height)z=NaN}else if(0>D||D>A.graph.width)z=NaN;if(!isNaN(z)){isNaN(v)&&(v=z);x=z;if(isNaN(E)||E>z)E=z;if(isNaN(t)||t<z)t=z;r=f.getDecimals(m);D=f.getDecimals(z);m+=z;m=f.roundTo(m,Math.max(r,D));p++;r=m/p}}if(A.percents&&(A=A.percents[k],!isNaN(A))){isNaN(B)&&(B=A);q=A;if(isNaN(w)||w>A)w=A;if(isNaN(y)||
        y<A)y=A;C=f.getDecimals(n);z=f.getDecimals(A);n+=A;n=f.roundTo(n,Math.max(C,z));u++;C=n/u}}}}m={open:v,close:x,high:t,low:E,average:r,sum:m,count:p};n={open:B,close:q,high:y,low:w,average:C,sum:n,count:u};a=f.formatValue(a,m,d,e,k+"\\.",this.usePrefixes,this.prefixesOfSmallNumbers,this.prefixesOfBigNumbers);a=f.formatValue(a,n,d,this.pf,"percents\\."+k+"\\.");b.periodDataItem[k]=m;b.periodPercentDataItem[k]=n}}return a=f.cleanFromEmpty(a)},formatString:function(a,b,c){if(b){var d=b.graph;if(void 0!==
        a){if(-1!=a.indexOf("[[category]]")){var g=b.serialDataItem.category;if(this.categoryAxis.parseDates){var h=this.balloonDateFormat,e=this.chartCursor;e&&e.categoryBalloonDateFormat&&(h=e.categoryBalloonDateFormat);h=f.formatDate(g,h,this);-1!=h.indexOf("fff")&&(h=f.formatMilliseconds(h,g));g=h}a=a.replace(/\[\[category\]\]/g,String(g.replace("$","$$$")))}g=d.numberFormatter;g||(g=this.nf);h=b.graph.valueAxis;(e=h.duration)&&!isNaN(b.values.value)&&(e=f.formatDuration(b.values.value,e,"",h.durationUnits,
        h.maxInterval,g),a=a.replace(RegExp("\\[\\[value\\]\\]","g"),e));"date"==h.type&&(h=f.formatDate(new Date(b.values.value),d.dateFormat,this),e=RegExp("\\[\\[value\\]\\]","g"),a=a.replace(e,h),h=f.formatDate(new Date(b.values.open),d.dateFormat,this),e=RegExp("\\[\\[open\\]\\]","g"),a=a.replace(e,h));d="value open low high close total".split(" ");h=this.pf;a=f.formatValue(a,b.percents,d,h,"percents\\.");a=f.formatValue(a,b.values,d,g,"",this.usePrefixes,this.prefixesOfSmallNumbers,this.prefixesOfBigNumbers);
        a=f.formatValue(a,b.values,["percents"],h);-1!=a.indexOf("[[")&&(a=f.formatDataContextValue(a,b.dataContext));-1!=a.indexOf("[[")&&b.graph.customData&&(a=f.formatDataContextValue(a,b.graph.customData));a=f.AmSerialChart.base.formatString.call(this,a,b,c)}return a}},updateChartCursor:function(){f.AmSerialChart.base.updateChartCursor.call(this);var a=this.chartCursor,b=this.categoryAxis;if(a){var c=a.categoryBalloonAlpha,d=a.categoryBalloonColor,g=a.color;void 0===d&&(d=a.cursorColor);var h=a.valueZoomable,
        e=a.zoomable,l=a.valueLineEnabled;this.rotate?(a.vLineEnabled=l,a.hZoomEnabled=h,a.vZoomEnabled=e):(a.hLineEnabled=l,a.vZoomEnabled=h,a.hZoomEnabled=e);if(a.valueLineBalloonEnabled)for(l=0;l<this.valueAxes.length;l++)h=this.valueAxes[l],(e=h.balloon)||(e={}),e=f.extend(e,this.balloon,!0),e.fillColor=d,e.balloonColor=d,e.fillAlpha=c,e.borderColor=d,e.color=g,h.balloon=e;else for(e=0;e<this.valueAxes.length;e++)h=this.valueAxes[e],h.balloon&&(h.balloon=null);b&&(b.balloonTextFunction=a.categoryBalloonFunction,
        a.categoryLineAxis=b,b.balloonText=a.categoryBalloonText,a.categoryBalloonEnabled&&((e=b.balloon)||(e={}),e=f.extend(e,this.balloon,!0),e.fillColor=d,e.balloonColor=d,e.fillAlpha=c,e.borderColor=d,e.color=g,b.balloon=e),b.balloon&&(b.balloon.enabled=a.categoryBalloonEnabled))}},addChartScrollbar:function(a){f.callMethod("destroy",[this.chartScrollbar]);a&&(a.chart=this,this.listenTo(a,"zoomed",this.handleScrollbarZoom));this.rotate?void 0===a.width&&(a.width=a.scrollbarHeight):void 0===a.height&&
        (a.height=a.scrollbarHeight);a.gridAxis=this.categoryAxis;this.chartScrollbar=a},addValueScrollbar:function(a){f.callMethod("destroy",[this.valueScrollbar]);a&&(a.chart=this,this.listenTo(a,"zoomed",this.handleScrollbarValueZoom),this.listenTo(a,"zoomStarted",this.handleCursorZoomStarted));var b=a.scrollbarHeight;this.rotate?void 0===a.height&&(a.height=b):void 0===a.width&&(a.width=b);a.gridAxis||(a.gridAxis=this.valueAxes[0]);a.valueAxes=this.valueAxes;this.valueScrollbar=a},removeChartScrollbar:function(){f.callMethod("destroy",
        [this.chartScrollbar]);this.chartScrollbar=null},removeValueScrollbar:function(){f.callMethod("destroy",[this.valueScrollbar]);this.valueScrollbar=null},handleReleaseOutside:function(a){f.AmSerialChart.base.handleReleaseOutside.call(this,a);f.callMethod("handleReleaseOutside",[this.chartScrollbar,this.valueScrollbar])},update:function(){f.AmSerialChart.base.update.call(this);this.chartScrollbar&&this.chartScrollbar.update&&this.chartScrollbar.update();this.valueScrollbar&&this.valueScrollbar.update&&
        this.valueScrollbar.update()},processScrollbars:function(){f.AmSerialChart.base.processScrollbars.call(this);var a=this.valueScrollbar;a&&(a=f.processObject(a,f.ChartScrollbar,this.theme),a.id="valueScrollbar",this.addValueScrollbar(a))},handleValueAxisZoom:function(a){this.handleValueAxisZoomReal(a,this.valueAxes)},zoomOut:function(){f.AmSerialChart.base.zoomOut.call(this);this.zoom();this.syncGrid()},getNextItem:function(a){var b=a.index,c=this.chartData,d=a.graph;if(b+1<c.length)for(b+=1;b<c.length;b++)if(a=
        c[b])if(a=a.axes[d.valueAxis.id].graphs[d.id],!isNaN(a.y))return a},handleCursorZoomReal:function(a,b,c,d,g){var f=g.target,e,l;this.rotate?(isNaN(a)||isNaN(b)||this.relativeZoomValueAxes(this.valueAxes,a,b)&&this.updateAfterValueZoom(),f.vZoomEnabled&&(e=g.start,l=g.end)):(isNaN(c)||isNaN(d)||this.relativeZoomValueAxes(this.valueAxes,c,d)&&this.updateAfterValueZoom(),f.hZoomEnabled&&(e=g.start,l=g.end));isNaN(e)||isNaN(l)||(a=this.categoryAxis,a.parseDates&&!a.equalSpacing?this.zoomToDates(new Date(e),
        new Date(l)):this.zoomToIndexes(e,l))},handleCursorZoomStarted:function(){var a=this.valueAxes;if(a){var a=a[0],b=a.relativeStart,c=a.relativeEnd;a.reversed&&(b=1-a.relativeEnd,c=1-a.relativeStart);this.rotate?(this.startX0=b,this.endX0=c):(this.startY0=b,this.endY0=c)}this.categoryAxis&&(this.start0=this.start,this.end0=this.end,this.startTime0=this.startTime,this.endTime0=this.endTime)},fixCursor:function(){this.chartCursor&&this.chartCursor.fixPosition();this.prevCursorItem=null},handleCursorMove:function(a){f.AmSerialChart.base.handleCursorMove.call(this,
        a);var b=a.target,c=this.categoryAxis;if(a.panning)this.handleCursorHide(a);else if(this.chartData&&!b.isHidden){var d=this.graphs;if(d){var g;g=c.xToIndex(this.rotate?a.y:a.x);if(g=this.chartData[g]){var h,e,l,k;if(b.oneBalloonOnly&&b.valueBalloonsEnabled){var m=Infinity;for(h=d.length-1;0<=h;h--)if(e=d[h],e.balloon.enabled&&e.showBalloon&&!e.hidden){l=e.valueAxis.id;l=g.axes[l].graphs[e.id];if(b.showNextAvailable&&isNaN(l.y)&&(l=this.getNextItem(l),!l))continue;l=l.y;"top"==e.showBalloonAt&&(l=
        0);"bottom"==e.showBalloonAt&&(l=this.height);var p=b.mouseX,n=b.mouseY;l=this.rotate?Math.abs(p-l):Math.abs(n-l);l<m&&(m=l,k=e)}b.mostCloseGraph=k}if(this.prevCursorItem!=g||k!=this.prevMostCloseGraph){m=[];for(h=0;h<d.length;h++){e=d[h];l=e.valueAxis.id;l=g.axes[l].graphs[e.id];if(b.showNextAvailable&&isNaN(l.y)&&(l=this.getNextItem(l),!l&&e.balloon)){e.balloon.hide();continue}k&&e!=k?(e.showGraphBalloon(l,b.pointer,!1,b.graphBulletSize,b.graphBulletAlpha),e.balloon.hide(0)):b.valueBalloonsEnabled?
        (e.balloon.showBullet=b.bulletsEnabled,e.balloon.bulletSize=b.bulletSize/2,a.hideBalloons||(e.showGraphBalloon(l,b.pointer,!1,b.graphBulletSize,b.graphBulletAlpha),e.balloon.set&&m.push({balloon:e.balloon,y:e.balloon.pointToY}))):(e.currentDataItem=l,e.resizeBullet(l,b.graphBulletSize,b.graphBulletAlpha))}b.avoidBalloonOverlapping&&this.arrangeBalloons(m);this.prevCursorItem=g}this.prevMostCloseGraph=k}}c.showBalloon(a.x,a.y,b.categoryBalloonDateFormat,a.skip);this.updateLegendValues()}},handleCursorHide:function(a){f.AmSerialChart.base.handleCursorHide.call(this,
        a);a=this.categoryAxis;this.prevCursorItem=null;this.updateLegendValues();a&&a.hideBalloon();a=this.graphs;var b;for(b=0;b<a.length;b++)a[b].currentDataItem=null},handleCursorPanning:function(a){var b=a.target,c,d=a.deltaX,g=a.deltaY,h=a.delta2X,e=a.delta2Y;a=!1;if(this.rotate){isNaN(h)&&(h=d,a=!0);var l=this.endX0;c=this.startX0;var k=l-c,l=l-k*h,m=k;a||(m=0);a=f.fitToBounds(c-k*d,0,1-m)}else isNaN(e)&&(e=g,a=!0),l=this.endY0,c=this.startY0,k=l-c,l+=k*g,m=k,a||(m=0),a=f.fitToBounds(c+k*e,0,1-m);
        c=f.fitToBounds(l,m,1);var p;b.valueZoomable&&(p=this.relativeZoomValueAxes(this.valueAxes,a,c));var n;c=this.categoryAxis;this.rotate&&(d=g,h=e);a=!1;isNaN(h)&&(h=d,a=!0);if(b.zoomable&&(0<Math.abs(d)||0<Math.abs(h)))if(c.parseDates&&!c.equalSpacing){if(e=this.startTime0,g=this.endTime0,c=g-e,h*=c,k=this.firstTime,l=this.lastTime,m=c,a||(m=0),a=Math.round(f.fitToBounds(e-c*d,k,l-m)),h=Math.round(f.fitToBounds(g-h,k+m,l)),this.startTime!=a||this.endTime!=h)n={chart:this,target:b,type:"zoomed",start:a,
        end:h},this.skipZoomed=!0,b.fire(n),this.zoom(a,h),n=!0}else if(e=this.start0,g=this.end0,c=g-e,d=Math.round(c*d),h=Math.round(c*h),k=this.chartData.length-1,a||(c=0),a=f.fitToBounds(e-d,0,k-c),c=f.fitToBounds(g-h,c,k),this.start!=a||this.end!=c)this.skipZoomed=!0,b.fire({chart:this,target:b,type:"zoomed",start:a,end:c}),this.zoom(a,c),n=!0;!n&&p&&this.updateAfterValueZoom()},arrangeBalloons:function(a){var b=this.plotAreaHeight;a.sort(this.compareY);var c,d,f,h=this.plotAreaWidth,e=a.length;for(c=
        0;c<e;c++)d=a[c].balloon,d.setBounds(0,0,h,b),d.restorePrevious(),d.draw(),b=d.yPos-3;a.reverse();for(c=0;c<e;c++){d=a[c].balloon;var b=d.bottom,l=d.bottom-d.yPos;0<c&&b-l<f+3&&d.setBounds&&(d.setBounds(0,f+3,h,f+l+3),d.restorePrevious(),d.draw());d.set&&d.set.show();f=d.bottom}},compareY:function(a,b){return a.y<b.y?1:-1}})})();(function(){var f=window.AmCharts;f.Cuboid=f.Class({construct:function(a,b,c,d,f,h,e,l,k,m,p,n,u,v,x,E,t){this.set=a.set();this.container=a;this.h=Math.round(c);this.w=Math.round(b);this.dx=d;this.dy=f;this.colors=h;this.alpha=e;this.bwidth=l;this.bcolor=k;this.balpha=m;this.dashLength=v;this.topRadius=E;this.pattern=x;this.rotate=u;this.bcn=t;u?0>b&&0===p&&(p=180):0>c&&270==p&&(p=90);this.gradientRotation=p;0===d&&0===f&&(this.cornerRadius=n);this.draw()},draw:function(){var a=this.set;a.clear();
        var b=this.container,c=b.chart,d=this.w,g=this.h,h=this.dx,e=this.dy,l=this.colors,k=this.alpha,m=this.bwidth,p=this.bcolor,n=this.balpha,u=this.gradientRotation,v=this.cornerRadius,x=this.dashLength,E=this.pattern,t=this.topRadius,r=this.bcn,B=l,q=l;"object"==typeof l&&(B=l[0],q=l[l.length-1]);var w,y,C,F,D,A,z,L,M,Q=k;E&&(k=0);var G,H,I,J,K=this.rotate;if(0<Math.abs(h)||0<Math.abs(e))if(isNaN(t))z=q,q=f.adjustLuminosity(B,-.2),q=f.adjustLuminosity(B,-.2),w=f.polygon(b,[0,h,d+h,d,0],[0,e,e,0,0],
        q,k,1,p,0,u),0<n&&(M=f.line(b,[0,h,d+h],[0,e,e],p,n,m,x)),y=f.polygon(b,[0,0,d,d,0],[0,g,g,0,0],q,k,1,p,0,u),y.translate(h,e),0<n&&(C=f.line(b,[h,h],[e,e+g],p,n,m,x)),F=f.polygon(b,[0,0,h,h,0],[0,g,g+e,e,0],q,k,1,p,0,u),D=f.polygon(b,[d,d,d+h,d+h,d],[0,g,g+e,e,0],q,k,1,p,0,u),0<n&&(A=f.line(b,[d,d+h,d+h,d],[0,e,g+e,g],p,n,m,x)),q=f.adjustLuminosity(z,.2),z=f.polygon(b,[0,h,d+h,d,0],[g,g+e,g+e,g,g],q,k,1,p,0,u),0<n&&(L=f.line(b,[0,h,d+h],[g,g+e,g+e],p,n,m,x));else{var N,O,P;K?(N=g/2,q=h/2,P=g/2,O=
        d+h/2,H=Math.abs(g/2),G=Math.abs(h/2)):(q=d/2,N=e/2,O=d/2,P=g+e/2+1,G=Math.abs(d/2),H=Math.abs(e/2));I=G*t;J=H*t;.1<G&&.1<G&&(w=f.circle(b,G,B,k,m,p,n,!1,H),w.translate(q,N));.1<I&&.1<I&&(z=f.circle(b,I,f.adjustLuminosity(B,.5),k,m,p,n,!1,J),z.translate(O,P))}k=Q;1>Math.abs(g)&&(g=0);1>Math.abs(d)&&(d=0);!isNaN(t)&&(0<Math.abs(h)||0<Math.abs(e))?(l=[B],l={fill:l,stroke:p,"stroke-width":m,"stroke-opacity":n,"fill-opacity":k},K?(k="M0,0 L"+d+","+(g/2-g/2*t),m=" B",0<d&&(m=" A"),f.VML?(k+=m+Math.round(d-
        I)+","+Math.round(g/2-J)+","+Math.round(d+I)+","+Math.round(g/2+J)+","+d+",0,"+d+","+g,k=k+(" L0,"+g)+(m+Math.round(-G)+","+Math.round(g/2-H)+","+Math.round(G)+","+Math.round(g/2+H)+",0,"+g+",0,0")):(k+="A"+I+","+J+",0,0,0,"+d+","+(g-g/2*(1-t))+"L0,"+g,k+="A"+G+","+H+",0,0,1,0,0"),G=90):(m=d/2-d/2*t,k="M0,0 L"+m+","+g,f.VML?(k="M0,0 L"+m+","+g,m=" B",0>g&&(m=" A"),k+=m+Math.round(d/2-I)+","+Math.round(g-J)+","+Math.round(d/2+I)+","+Math.round(g+J)+",0,"+g+","+d+","+g,k+=" L"+d+",0",k+=m+Math.round(d/
        2+G)+","+Math.round(H)+","+Math.round(d/2-G)+","+Math.round(-H)+","+d+",0,0,0"):(k+="A"+I+","+J+",0,0,0,"+(d-d/2*(1-t))+","+g+"L"+d+",0",k+="A"+G+","+H+",0,0,1,0,0"),G=180),b=b.path(k).attr(l),b.gradient("linearGradient",[B,f.adjustLuminosity(B,-.3),f.adjustLuminosity(B,-.3),B],G),K?b.translate(h/2,0):b.translate(0,e/2)):b=0===g?f.line(b,[0,d],[0,0],p,n,m,x):0===d?f.line(b,[0,0],[0,g],p,n,m,x):0<v?f.rect(b,d,g,l,k,m,p,n,v,u,x):f.polygon(b,[0,0,d,d,0],[0,g,g,0,0],l,k,m,p,n,u,!1,x);d=isNaN(t)?0>g?[w,
        M,y,C,F,D,A,z,L,b]:[z,L,y,C,F,D,w,M,A,b]:K?0<d?[w,b,z]:[z,b,w]:0>g?[w,b,z]:[z,b,w];f.setCN(c,b,r+"front");f.setCN(c,y,r+"back");f.setCN(c,z,r+"top");f.setCN(c,w,r+"bottom");f.setCN(c,F,r+"left");f.setCN(c,D,r+"right");for(w=0;w<d.length;w++)if(y=d[w])a.push(y),f.setCN(c,y,r+"element");E&&b.pattern(E,NaN,c.path)},width:function(a){isNaN(a)&&(a=0);this.w=Math.round(a);this.draw()},height:function(a){isNaN(a)&&(a=0);this.h=Math.round(a);this.draw()},animateHeight:function(a,b){var c=this;c.animationFinished=
        !1;c.easing=b;c.totalFrames=a*f.updateRate;c.rh=c.h;c.frame=0;c.height(1);setTimeout(function(){c.updateHeight.call(c)},1E3/f.updateRate)},updateHeight:function(){var a=this;a.frame++;var b=a.totalFrames;a.frame<=b?(b=a.easing(0,a.frame,1,a.rh-1,b),a.height(b),window.requestAnimationFrame?window.requestAnimationFrame(function(){a.updateHeight.call(a)}):setTimeout(function(){a.updateHeight.call(a)},1E3/f.updateRate)):(a.height(a.rh),a.animationFinished=!0)},animateWidth:function(a,b){var c=this;c.animationFinished=
        !1;c.easing=b;c.totalFrames=a*f.updateRate;c.rw=c.w;c.frame=0;c.width(1);setTimeout(function(){c.updateWidth.call(c)},1E3/f.updateRate)},updateWidth:function(){var a=this;a.frame++;var b=a.totalFrames;a.frame<=b?(b=a.easing(0,a.frame,1,a.rw-1,b),a.width(b),window.requestAnimationFrame?window.requestAnimationFrame(function(){a.updateWidth.call(a)}):setTimeout(function(){a.updateWidth.call(a)},1E3/f.updateRate)):(a.width(a.rw),a.animationFinished=!0)}})})();(function(){var f=window.AmCharts;f.CategoryAxis=f.Class({inherits:f.AxisBase,construct:function(a){this.cname="CategoryAxis";f.CategoryAxis.base.construct.call(this,a);this.minPeriod="DD";this.equalSpacing=this.parseDates=!1;this.position="bottom";this.startOnAxis=!1;this.gridPosition="middle";this.safeDistance=30;this.stickBalloonToCategory=!1;f.applyTheme(this,a,this.cname)},draw:function(){f.CategoryAxis.base.draw.call(this);this.generateDFObject();var a=this.chart.chartData;this.data=a;this.labelRotationR=
        this.labelRotation;this.type=null;if(f.ifArray(a)){var b,c=this.chart;"scrollbar"!=this.id?(f.setCN(c,this.set,"category-axis"),f.setCN(c,this.labelsSet,"category-axis"),f.setCN(c,this.axisLine.axisSet,"category-axis")):this.bcn=this.id+"-";var d=this.start,g=this.labelFrequency,h=0,e=this.end-d+1,l=this.gridCountR,k=this.showFirstLabel,m=this.showLastLabel,p,n="",n=f.extractPeriod(this.minPeriod),u=f.getPeriodDuration(n.period,n.count),v,x,E,t,r,B=this.rotate,q=this.firstDayOfWeek,w=this.boldPeriodBeginning;
        b=f.resetDateToMin(new Date(a[a.length-1].time+1.05*u),this.minPeriod,1,q).getTime();this.firstTime=c.firstTime;this.endTime>b&&(this.endTime=b);r=this.minorGridEnabled;x=this.gridAlpha;var y=0,C=0;if(this.widthField)for(b=this.start;b<=this.end;b++)if(t=this.data[b]){var F=Number(this.data[b].dataContext[this.widthField]);isNaN(F)||(y+=F,t.widthValue=F)}if(this.parseDates&&!this.equalSpacing)this.lastTime=a[a.length-1].time,this.maxTime=f.resetDateToMin(new Date(this.lastTime+1.05*u),this.minPeriod,
        1,q).getTime(),this.timeDifference=this.endTime-this.startTime,this.parseDatesDraw();else if(!this.parseDates){if(this.cellWidth=this.getStepWidth(e),e<l&&(l=e),h+=this.start,this.stepWidth=this.getStepWidth(e),0<l)for(q=Math.floor(e/l),t=this.chooseMinorFrequency(q),e=h,e/2==Math.round(e/2)&&e--,0>e&&(e=0),w=0,this.widthField&&(e=this.start),this.end-e+1>=this.autoRotateCount&&(this.labelRotationR=this.autoRotateAngle),b=e;b<=this.end+2;b++){l=!1;0<=b&&b<this.data.length?(v=this.data[b],n=v.category,
        l=v.forceShow):n="";if(r&&!isNaN(t))if(b/t==Math.round(b/t)||l)b/q==Math.round(b/q)||l||(this.gridAlpha=this.minorGridAlpha,n=void 0);else continue;else if(b/q!=Math.round(b/q)&&!l)continue;e=this.getCoordinate(b-h);l=0;"start"==this.gridPosition&&(e-=this.cellWidth/2,l=this.cellWidth/2);p=!0;E=l;"start"==this.tickPosition&&(E=0,p=!1,l=0);if(b==d&&!k||b==this.end&&!m)n=void 0;Math.round(w/g)!=w/g&&(n=void 0);w++;a=this.cellWidth;B&&(a=NaN,this.ignoreAxisWidth||!c.autoMargins)&&(a="right"==this.position?
        c.marginRight:c.marginLeft,a-=this.tickLength+10);this.labelFunction&&v&&(n=this.labelFunction(n,v,this));n=f.fixBrakes(n);u=!1;this.boldLabels&&(u=!0);b>this.end&&"start"==this.tickPosition&&(n=" ");this.rotate&&this.inside&&(l-=2);isNaN(v.widthValue)||(v.percentWidthValue=v.widthValue/y*100,a=this.rotate?this.height*v.widthValue/y:this.width*v.widthValue/y,e=C,C+=a,E=l=a/2);p=new this.axisItemRenderer(this,e,n,p,a,l,void 0,u,E,!1,v.labelColor,v.className);p.serialDataItem=v;this.pushAxisItem(p);
        this.gridAlpha=x}}else if(this.parseDates&&this.equalSpacing){h=this.start;this.startTime=this.data[this.start].time;this.endTime=this.data[this.end].time;this.timeDifference=this.endTime-this.startTime;b=this.choosePeriod(0);g=b.period;v=b.count;b=f.getPeriodDuration(g,v);b<u&&(g=n.period,v=n.count,b=u);x=g;"WW"==x&&(x="DD");this.currentDateFormat=this.dateFormatsObject[x];this.stepWidth=this.getStepWidth(e);l=Math.ceil(this.timeDifference/b)+1;n=f.resetDateToMin(new Date(this.startTime-b),g,v,q).getTime();
        this.cellWidth=this.getStepWidth(e);e=Math.round(n/b);d=-1;e/2==Math.round(e/2)&&(d=-2,n-=b);e=this.start;e/2==Math.round(e/2)&&e--;0>e&&(e=0);C=this.end+2;C>=this.data.length&&(C=this.data.length);a=!1;a=!k;this.previousPos=-1E3;20<this.labelRotationR&&(this.safeDistance=5);F=e;if(this.data[e].time!=f.resetDateToMin(new Date(this.data[e].time),g,v,q).getTime()){var u=0,D=n;for(b=e;b<C;b++)t=this.data[b].time,this.checkPeriodChange(g,v,t,D)&&(u++,2<=u&&(F=b,b=C),D=t)}r&&1<v&&(t=this.chooseMinorFrequency(v),
        f.getPeriodDuration(g,t));if(0<this.gridCountR)for(b=e;b<C;b++)if(t=this.data[b].time,this.checkPeriodChange(g,v,t,n)&&b>=F){e=this.getCoordinate(b-this.start);r=!1;this.nextPeriod[x]&&(r=this.checkPeriodChange(this.nextPeriod[x],1,t,n,x))&&f.resetDateToMin(new Date(t),this.nextPeriod[x],1,q).getTime()!=t&&(r=!1);u=!1;r&&this.markPeriodChange?(r=this.dateFormatsObject[this.nextPeriod[x]],u=!0):r=this.dateFormatsObject[x];n=f.formatDate(new Date(t),r,c);if(b==d&&!k||b==l&&!m)n=" ";a?a=!1:(w||(u=!1),
        e-this.previousPos>this.safeDistance*Math.cos(this.labelRotationR*Math.PI/180)&&(this.labelFunction&&(n=this.labelFunction(n,new Date(t),this,g,v,E)),this.boldLabels&&(u=!0),p=new this.axisItemRenderer(this,e,n,void 0,void 0,void 0,void 0,u),r=p.graphics(),this.pushAxisItem(p),r=r.getBBox().width,f.isModern||(r-=e),this.previousPos=e+r));E=n=t}}for(b=k=0;b<this.data.length;b++)if(t=this.data[b])this.parseDates&&!this.equalSpacing?(m=t.time,d=this.cellWidth,"MM"==this.minPeriod&&(d=864E5*f.daysInMonth(new Date(m))*
        this.stepWidth,t.cellWidth=d),m=Math.round((m-this.startTime)*this.stepWidth+d/2)):m=this.getCoordinate(b-h),t.x[this.id]=m;if(this.widthField)for(b=this.start;b<=this.end;b++)t=this.data[b],d=t.widthValue,t.percentWidthValue=d/y*100,this.rotate?(m=this.height*d/y/2+k,k=this.height*d/y+k):(m=this.width*d/y/2+k,k=this.width*d/y+k),t.x[this.id]=m;y=this.guides.length;for(b=0;b<y;b++)if(k=this.guides[b],q=q=q=r=d=NaN,m=k.above,k.toCategory&&(q=c.getCategoryIndexByValue(k.toCategory),isNaN(q)||(d=this.getCoordinate(q-
        h),k.expand&&(d+=this.cellWidth/2),p=new this.axisItemRenderer(this,d,"",!0,NaN,NaN,k),this.pushAxisItem(p,m))),k.category&&(q=c.getCategoryIndexByValue(k.category),isNaN(q)||(r=this.getCoordinate(q-h),k.expand&&(r-=this.cellWidth/2),q=(d-r)/2,p=new this.axisItemRenderer(this,r,k.label,!0,NaN,q,k),this.pushAxisItem(p,m))),w=c.dataDateFormat,k.toDate&&(!w||k.toDate instanceof Date||(k.toDate=k.toDate.toString()+" |"),k.toDate=f.getDate(k.toDate,w),this.equalSpacing?(q=c.getClosestIndex(this.data,"time",
        k.toDate.getTime(),!1,0,this.data.length-1),isNaN(q)||(d=this.getCoordinate(q-h))):d=(k.toDate.getTime()-this.startTime)*this.stepWidth,p=new this.axisItemRenderer(this,d,"",!0,NaN,NaN,k),this.pushAxisItem(p,m)),k.date&&(!w||k.date instanceof Date||(k.date=k.date.toString()+" |"),k.date=f.getDate(k.date,w),this.equalSpacing?(q=c.getClosestIndex(this.data,"time",k.date.getTime(),!1,0,this.data.length-1),isNaN(q)||(r=this.getCoordinate(q-h))):r=(k.date.getTime()-this.startTime)*this.stepWidth,q=(d-
        r)/2,p=!0,k.toDate&&(p=!1),p="H"==this.orientation?new this.axisItemRenderer(this,r,k.label,p,2*q,NaN,k):new this.axisItemRenderer(this,r,k.label,!1,NaN,q,k),this.pushAxisItem(p,m)),p&&(q=p.label)&&this.addEventListeners(q,k),0<d||0<r){q=!1;if(this.rotate){if(d<this.height||r<this.height)q=!0}else if(d<this.width||r<this.width)q=!0;q&&(d=new this.guideFillRenderer(this,r,d,k),r=d.graphics(),this.pushAxisItem(d,m),k.graphics=r,r.index=b,this.addEventListeners(r,k))}if(c=c.chartCursor)B?c.fixHeight(this.cellWidth):
        (c.fixWidth(this.cellWidth),c.fullWidth&&this.balloon&&(this.balloon.minWidth=this.cellWidth));this.previousHeight=A}this.axisCreated=!0;this.set.translate(this.x,this.y);this.labelsSet.translate(this.x,this.y);this.labelsSet.show();this.positionTitle();(B=this.axisLine.set)&&B.toFront();var A=this.getBBox().height;2<A-this.previousHeight&&this.autoWrap&&!this.parseDates&&(this.axisCreated=this.chart.marginsUpdated=!1)},xToIndex:function(a){var b=this.data,c=this.chart,d=c.rotate,g=this.stepWidth,
        h;if(this.parseDates&&!this.equalSpacing)a=this.startTime+Math.round(a/g)-this.minDuration()/2,h=c.getClosestIndex(b,"time",a,!1,this.start,this.end+1);else if(this.widthField)for(c=Infinity,g=this.start;g<=this.end;g++){var e=this.data[g];e&&(e=Math.abs(e.x[this.id]-a),e<c&&(c=e,h=g))}else this.startOnAxis||(a-=g/2),h=this.start+Math.round(a/g);h=f.fitToBounds(h,0,b.length-1);var l;b[h]&&(l=b[h].x[this.id]);d?l>this.height+1&&h--:l>this.width+1&&h--;0>l&&h++;return h=f.fitToBounds(h,0,b.length-1)},
        dateToCoordinate:function(a){return this.parseDates&&!this.equalSpacing?(a.getTime()-this.startTime)*this.stepWidth:this.parseDates&&this.equalSpacing?(a=this.chart.getClosestIndex(this.data,"time",a.getTime(),!1,0,this.data.length-1),this.getCoordinate(a-this.start)):NaN},categoryToCoordinate:function(a){if(this.chart){if(this.parseDates)return this.dateToCoordinate(new Date(a));a=this.chart.getCategoryIndexByValue(a);if(!isNaN(a))return this.getCoordinate(a-this.start)}else return NaN},coordinateToDate:function(a){return this.equalSpacing?
        (a=this.xToIndex(a),new Date(this.data[a].time)):new Date(this.startTime+a/this.stepWidth)},coordinateToValue:function(a){a=this.xToIndex(a);if(a=this.data[a])return this.parseDates?a.time:a.category},getCoordinate:function(a){a*=this.stepWidth;this.startOnAxis||(a+=this.stepWidth/2);return Math.round(a)},formatValue:function(a,b){b||(b=this.currentDateFormat);this.parseDates&&(a=f.formatDate(new Date(a),b,this.chart));return a},showBalloonAt:function(a,b){void 0===b&&(b=this.parseDates?this.dateToCoordinate(new Date(a)):
        this.categoryToCoordinate(a));return this.adjustBalloonCoordinate(b)},formatBalloonText:function(a,b,c){var d="",g="",h=this.chart,e=this.data[b];if(e)if(this.parseDates)d=f.formatDate(e.category,c,h),b=f.changeDate(new Date(e.category),this.minPeriod,1),g=f.formatDate(b,c,h),-1!=d.indexOf("fff")&&(d=f.formatMilliseconds(d,e.category),g=f.formatMilliseconds(g,b));else{var l;this.data[b+1]&&(l=this.data[b+1]);d=f.fixNewLines(e.category);l&&(g=f.fixNewLines(l.category))}a=a.replace(/\[\[category\]\]/g,
        String(d));return a=a.replace(/\[\[toCategory\]\]/g,String(g))},adjustBalloonCoordinate:function(a,b){var c=this.xToIndex(a),d=this.chart.chartCursor;if(this.stickBalloonToCategory){var f=this.data[c];f&&(a=f.x[this.id]+1);this.stickBalloonToStart&&(a-=this.cellWidth/2);var h=0;if(d){var e=d.limitToGraph;if(e){var l=e.valueAxis.id;e.hidden||(h=f.axes[l].graphs[e.id].y)}this.rotate?("left"==this.position?(e&&(h-=d.width),0<h&&(h=0)):0>h&&(h=0),d.fixHLine(a,h)):("top"==this.position?(e&&(h-=d.height),
        0<h&&(h=0)):0>h&&(h=0),d.fixVLine(a,h))}}d&&!b&&(d.setIndex(c),this.parseDates&&d.setTimestamp(this.coordinateToDate(a).getTime()));return a}})})();
    
    
    /***/ }),
    /* 126 */
    /***/ (function(module, exports) {
    
        (function() {
            var b = window.AmCharts;
            b.AmGanttChart = b.Class({
                inherits: b.AmSerialChart,
                construct: function(a) {
                    this.type = "gantt";
                    b.AmGanttChart.base.construct.call(this, a);
                    this.cname = "AmGanttChart";
                    this.period = "ss";
                    this.maxZoomFactor = 1E6
                },
                initChart: function() {
                    this.dataChanged && this.processGanttData();
                    b.AmGanttChart.base.initChart.call(this)
                },
                parseData: function() {
                    b.AmSerialChart.base.parseData.call(this);
                    this.parseSerialData(this.ganttDataProvider)
                },
                processGanttData: function() {
                    var a;
                    this.graphs = [];
                    var v =
                        this.dataProvider;
                    this.ganttDataProvider = [];
                    var z = this.categoryField,
                        C = this.startField,
                        D = this.endField,
                        E = this.durationField,
                        F = this.startDateField,
                        G = this.endDateField,
                        w = this.colorField,
                        q = b.extractPeriod(this.period),
                        f = q.period,
                        q = q.count,
                        r = b.getDate(this.startDate, this.dataDateFormat, "fff");
                    this.categoryAxis.gridPosition = "start";
                    a = this.valueAxis;
                    this.valueAxes = [a];
                    var A;
                    "date" == a.type && (A = !0);
                    a.minimumDate && (a.minimumDate = b.getDate(a.minimumDate, u, f));
                    a.maximumDate && (a.maximumDate = b.getDate(a.maximumDate,
                        u, f));
                    isNaN(a.minimum) || (a.minimumDate = b.changeDate(new Date(r), f, a.minimum, !0, !0));
                    isNaN(a.maximum) || (a.maximumDate = b.changeDate(new Date(r), f, a.maximum, !0, !0));
                    var u = this.dataDateFormat;
                    if (v)
                        for (a = 0; a < v.length; a++) {
                            var e = v[a],
                                l = {};
                            l[z] = e[z];
                            var x = e[this.segmentsField],
                                t;
                            this.ganttDataProvider.push(l);
                            e = e[w];
                            this.colors[a] || (this.colors[a] = b.randomColor());
                            if (x)
                                for (var g = 0; g < x.length; g++) {
                                    var d = x[g],
                                        c = d[C],
                                        h = d[D],
                                        m = d[E];
                                    isNaN(c) && (c = t);
                                    isNaN(m) || (h = c + m);
                                    var m = "start_" + a + "_" + g,
                                        y = "end_" + a + "_" + g;
                                    l[m] =
                                        c;
                                    l[y] = h;
                                    var n = "lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern gap className".split(" "),
                                        k, p;
                                    for (p in n) k = n[p] + "Field", (t = this.graph[k]) && void 0 !== d[t] && (l[n[p] + "_" + a + "_" + g] = d[t]);
                                    t = h;
                                    if (A) {
                                        k = b.getDate(d[F], u, f);
                                        var B = b.getDate(d[G], u, f);
                                        r && (isNaN(c) || (k = b.changeDate(b.newDate(r, "fff"), f, c * q, !0, !0)), isNaN(h) || (B = b.changeDate(b.newDate(r, "fff"), f, h * q, !0, !0)));
                                        l[m] = k.getTime();
                                        l[y] = B.getTime()
                                    }
                                    h = {};
                                    b.copyProperties(d, h);
                                    c = {};
                                    b.copyProperties(this.graph, c, !0);
                                    for (p in n) k = n[p] + "Field", this.graph[k] && (c[k] = n[p] + "_" + a + "_" + g);
                                    c.customData = h;
                                    c.segmentData = d;
                                    c.labelFunction = this.graph.labelFunction;
                                    c.balloonFunction = this.graph.balloonFunction;
                                    c.customBullet = this.graph.customBullet;
                                    c.type = "column";
                                    c.openField = m;
                                    c.valueField = y;
                                    c.clustered = !1;
                                    d[w] && (e = d[w]);
                                    c.columnWidth = d[this.columnWidthField];
                                    void 0 === e && (e = this.colors[a]);
                                    (d = this.brightnessStep) && (e = b.adjustLuminosity(e, g * d / 100));
                                    void 0 === this.graph.lineColor && (c.lineColor =
                                        e);
                                    void 0 === this.graph.fillColors && (c.fillColors = e);
                                    this.graphs.push(c)
                                }
                        }
                }
            })
        })();
    
    /***/ }),
    /* 127 */
    /***/ (function(module, exports) {
    
        AmCharts.translations.export||(AmCharts.translations.export={}),AmCharts.translations.export.en||(AmCharts.translations.export.en={"fallback.save.text":"CTRL + C to copy the data into the clipboard.","fallback.save.image":"Rightclick -> Save picture as... to save the image.","capturing.delayed.menu.label":"{{duration}}","capturing.delayed.menu.title":"Click to cancel","menu.label.print":"Print","menu.label.undo":"Undo","menu.label.redo":"Redo","menu.label.cancel":"Cancel","menu.label.save.image":"Download as ...","menu.label.save.data":"Save as ...","menu.label.draw":"Annotate ...","menu.label.draw.change":"Change ...","menu.label.draw.add":"Add ...","menu.label.draw.shapes":"Shape ...","menu.label.draw.colors":"Color ...","menu.label.draw.widths":"Size ...","menu.label.draw.opacities":"Opacity ...","menu.label.draw.text":"Text","menu.label.draw.modes":"Mode ...","menu.label.draw.modes.pencil":"Pencil","menu.label.draw.modes.line":"Line","menu.label.draw.modes.arrow":"Arrow","label.saved.from":"Saved from: "}),function(){AmCharts.export=function(a,b){var c,d={name:"export",version:"1.4.66",libs:{async:!0,autoLoad:!0,reload:!1,resources:["fabric.js/fabric.min.js","FileSaver.js/FileSaver.min.js",{"jszip/jszip.min.js":["xlsx/xlsx.min.js"],"pdfmake/pdfmake.min.js":["pdfmake/vfs_fonts.js"]}],namespaces:{"pdfmake.min.js":"pdfMake","jszip.min.js":"JSZip","xlsx.min.js":"XLSX","fabric.min.js":"fabric","FileSaver.min.js":"saveAs"},loadTimeout:1e4},config:{},setup:{chart:a,hasBlob:!1,wrapper:!1,isIE:!!window.document.documentMode,IEversion:window.document.documentMode,hasTouch:"object"==typeof window.Touch,focusedMenuItem:void 0},drawing:{enabled:!1,undos:[],redos:[],buffer:{position:{x1:0,y1:0,x2:0,y2:0,xD:0,yD:0}},handler:{undo:function(a,b){var c=d.drawing.undos.pop();if(c){c.selectable=!0,d.drawing.redos.push(c),"added"==c.action&&d.setup.fabric.remove(c.target);var e=JSON.parse(c.state);c.target.set(e),c.target instanceof fabric.Group&&d.drawing.handler.change({color:e.cfg.color,width:e.cfg.width,opacity:e.cfg.opacity},!0,c.target),d.setup.fabric.renderAll(),c.state!=c.target.recentState||b||d.drawing.handler.undo(c,!0)}},redo:function(a,b){var c=d.drawing.redos.pop();if(c){c.selectable=!0,d.drawing.undos.push(c),"added"==c.action&&d.setup.fabric.add(c.target);var e=JSON.parse(c.state);c.target.recentState=c.state,c.target.set(e),c.target instanceof fabric.Group&&d.drawing.handler.change({color:e.cfg.color,width:e.cfg.width,opacity:e.cfg.opacity},!0,c.target),d.setup.fabric.renderAll(),"addified"==c.action&&d.drawing.handler.redo()}},done:function(a){d.drawing.enabled=!1,d.drawing.buffer.enabled=!1,d.drawing.undos=[],d.drawing.redos=[],d.createMenu(d.config.menu),d.setup.fabric.deactivateAll(),d.setup.wrapper&&(d.setup.chart.containerDiv.removeChild(d.setup.wrapper),d.setup.wrapper=!1)},add:function(a){var b=d.deepMerge({top:d.setup.fabric.height/2,left:d.setup.fabric.width/2},a||{});(-1!=b.url.indexOf(".svg")?fabric.loadSVGFromURL:fabric.Image.fromURL)(b.url,function(a,c){var e=void 0!==c?fabric.util.groupSVGElements(a,c):a,f=!1;(e.height>d.setup.fabric.height||e.width>d.setup.fabric.width)&&(f=d.setup.fabric.height/2/e.height),b.top>d.setup.fabric.height&&(b.top=d.setup.fabric.height/2),b.left>d.setup.fabric.width&&(b.left=d.setup.fabric.width/2),d.drawing.buffer.isDrawing=!0,e.set({originX:"center",originY:"center",top:b.top,left:b.left,width:f?e.width*f:e.width,height:f?e.height*f:e.height,fill:d.drawing.color}),d.setup.fabric.add(e)})},change:function(a,b,c){var f,g,h,e=d.deepMerge({},a||{}),i=c||d.drawing.buffer.target,j=i?i._objects?i._objects:[i]:null;if(e.mode&&(d.drawing.mode=e.mode),e.width&&(d.drawing.width=e.width,d.drawing.fontSize=e.fontSize=3*e.width,1==d.drawing.width&&(d.drawing.fontSize=e.fontSize=d.defaults.fabric.drawing.fontSize)),e.fontSize&&(d.drawing.fontSize=e.fontSize),e.color&&(d.drawing.color=e.color),e.opacity&&(d.drawing.opacity=e.opacity),h=d.getRGBA(d.drawing.color),h.pop(),h.push(d.drawing.opacity),d.drawing.color="rgba("+h.join()+")",d.setup.fabric.freeDrawingBrush.color=d.drawing.color,d.setup.fabric.freeDrawingBrush.width=d.drawing.width,i){for(f=JSON.parse(i.recentState).cfg,f&&(e.color=e.color||f.color,e.width=e.width||f.width,e.opacity=e.opacity||f.opacity,e.fontSize=e.fontSize||f.fontSize,h=d.getRGBA(e.color),h.pop(),h.push(e.opacity),e.color="rgba("+h.join()+")"),g=0;g<j.length;g++)j[g]instanceof fabric.Text||j[g]instanceof fabric.PathGroup||j[g]instanceof fabric.Triangle?((e.color||e.opacity)&&j[g].set({fill:e.color}),e.fontSize&&j[g].set({fontSize:e.fontSize})):(j[g]instanceof fabric.Path||j[g]instanceof fabric.Line)&&(i instanceof fabric.Group?(e.color||e.opacity)&&j[g].set({stroke:e.color}):((e.color||e.opacity)&&j[g].set({stroke:e.color}),e.width&&j[g].set({strokeWidth:e.width})));b||(f=JSON.stringify(d.deepMerge(i.saveState().originalState,{cfg:{color:e.color,width:e.width,opacity:e.opacity}})),i.recentState=f,d.drawing.redos=[],d.drawing.undos.push({action:"modified",target:i,state:f})),d.setup.fabric.renderAll()}},text:function(a){var b=d.deepMerge({text:d.i18l("menu.label.draw.text"),top:d.setup.fabric.height/2,left:d.setup.fabric.width/2,fontSize:d.drawing.fontSize,fontFamily:d.setup.chart.fontFamily||"Verdana",fill:d.drawing.color},a||{});b.click=function(){};var c=new fabric.IText(b.text,b);return d.drawing.buffer.isDrawing=!0,d.setup.fabric.add(c),d.setup.fabric.setActiveObject(c),c.selectAll(),c.enterEditing(),c},line:function(a){var c,e,f,g,b=d.deepMerge({x1:d.setup.fabric.width/2-d.setup.fabric.width/10,x2:d.setup.fabric.width/2+d.setup.fabric.width/10,y1:d.setup.fabric.height/2,y2:d.setup.fabric.height/2,angle:90,strokeLineCap:d.drawing.lineCap,arrow:d.drawing.arrow,color:d.drawing.color,width:d.drawing.width,group:[]},a||{}),h=new fabric.Line([b.x1,b.y1,b.x2,b.y2],{stroke:b.color,strokeWidth:b.width,strokeLineCap:b.strokeLineCap});if(b.group.push(h),b.arrow&&(b.angle=b.angle?b.angle:d.getAngle(b.x1,b.y1,b.x2,b.y2),"start"==b.arrow?(f=b.y1+b.width/2,g=b.x1+b.width/2):"middle"==b.arrow?(f=b.y2+b.width/2-(b.y2-b.y1)/2,g=b.x2+b.width/2-(b.x2-b.x1)/2):(f=b.y2+b.width/2,g=b.x2+b.width/2),e=new fabric.Triangle({top:f,left:g,fill:b.color,height:7*b.width,width:7*b.width,angle:b.angle,originX:"center",originY:"bottom"}),b.group.push(e)),d.drawing.buffer.isDrawing=!0,"config"!=b.action){if(b.arrow){var i=new fabric.Group(b.group);return i.set({cfg:b,fill:b.color,action:b.action,selectable:!0,known:"change"==b.action}),"change"==b.action&&d.setup.fabric.setActiveObject(i),d.setup.fabric.add(i),i}return d.setup.fabric.add(h),h}for(c=0;c<b.group.length;c++)d.setup.fabric.add(b.group[c]);return b}}},defaults:{position:"top-right",fileName:"amCharts",action:"download",overflow:!0,path:(a.path||"")+"plugins/export/",formats:{JPG:{mimeType:"image/jpg",extension:"jpg",capture:!0},PNG:{mimeType:"image/png",extension:"png",capture:!0},SVG:{mimeType:"text/xml",extension:"svg",capture:!0},PDF:{mimeType:"application/pdf",extension:"pdf",capture:!0},CSV:{mimeType:"text/plain",extension:"csv"},JSON:{mimeType:"text/plain",extension:"json"},XLSX:{mimeType:"application/octet-stream",extension:"xlsx"}},fabric:{backgroundColor:"#FFFFFF",removeImages:!0,forceRemoveImages:!1,selection:!1,loadTimeout:5e3,drawing:{enabled:!0,arrow:"end",lineCap:"butt",mode:"pencil",modes:["pencil","line","arrow"],color:"#000000",colors:["#000000","#FFFFFF","#FF0000","#00FF00","#0000FF"],shapes:["11.svg","14.svg","16.svg","17.svg","20.svg","27.svg"],width:1,fontSize:11,widths:[1,5,10,15],opacity:1,opacities:[1,.8,.6,.4,.2],menu:void 0,autoClose:!0},border:{fill:"",fillOpacity:0,stroke:"#000000",strokeWidth:1,strokeOpacity:1}},pdfMake:{images:{},pageOrientation:"portrait",pageMargins:40,pageOrigin:!0,pageSize:"A4",pageSizes:{"4A0":[4767.87,6740.79],"2A0":[3370.39,4767.87],A0:[2383.94,3370.39],A1:[1683.78,2383.94],A2:[1190.55,1683.78],A3:[841.89,1190.55],A4:[595.28,841.89],A5:[419.53,595.28],A6:[297.64,419.53],A7:[209.76,297.64],A8:[147.4,209.76],A9:[104.88,147.4],A10:[73.7,104.88],B0:[2834.65,4008.19],B1:[2004.09,2834.65],B2:[1417.32,2004.09],B3:[1000.63,1417.32],B4:[708.66,1000.63],B5:[498.9,708.66],B6:[354.33,498.9],B7:[249.45,354.33],B8:[175.75,249.45],B9:[124.72,175.75],B10:[87.87,124.72],C0:[2599.37,3676.54],C1:[1836.85,2599.37],C2:[1298.27,1836.85],C3:[918.43,1298.27],C4:[649.13,918.43],C5:[459.21,649.13],C6:[323.15,459.21],C7:[229.61,323.15],C8:[161.57,229.61],C9:[113.39,161.57],C10:[79.37,113.39],RA0:[2437.8,3458.27],RA1:[1729.13,2437.8],RA2:[1218.9,1729.13],RA3:[864.57,1218.9],RA4:[609.45,864.57],SRA0:[2551.18,3628.35],SRA1:[1814.17,2551.18],SRA2:[1275.59,1814.17],SRA3:[907.09,1275.59],SRA4:[637.8,907.09],EXECUTIVE:[521.86,756],FOLIO:[612,936],LEGAL:[612,1008],LETTER:[612,792],TABLOID:[792,1224]}},menu:void 0,divId:null,menuReviver:null,menuWalker:null,fallback:!0,keyListener:!0,fileListener:!0,compress:!0,debug:!1},i18l:function(a,b){var c=b||(d.setup.chart.language?d.setup.chart.language:"en");return(AmCharts.translations[d.name][c]||AmCharts.translations[d.name].en)[a]||a},download:function(a,b,c){if(window.saveAs&&d.setup.hasBlob){d.toBlob({data:a,type:b},function(a){saveAs(a,c)})}else if(d.config.fallback&&"text/plain"==b){var f=document.createElement("div"),g=document.createElement("div"),h=document.createElement("textarea");g.innerHTML=d.i18l("fallback.save.text"),f.appendChild(g),f.appendChild(h),g.setAttribute("class","amcharts-export-fallback-message"),f.setAttribute("class","amcharts-export-fallback"),d.setup.chart.containerDiv.appendChild(f),h.setAttribute("readonly",""),h.value=a,h.focus(),h.select(),d.createMenu([{class:"export-main export-close",label:"Done",click:function(){d.createMenu(d.config.menu),d.setup.chart.containerDiv.removeChild(f)}}])}else{if(!d.config.fallback||"image"!=b.split("/")[0])throw new Error("Unable to create file. Ensure saveAs (FileSaver.js) is supported.");var f=document.createElement("div"),g=document.createElement("div"),i=d.toImage({data:a});g.innerHTML=d.i18l("fallback.save.image"),f.appendChild(g),f.appendChild(i),g.setAttribute("class","amcharts-export-fallback-message"),f.setAttribute("class","amcharts-export-fallback"),d.setup.chart.containerDiv.appendChild(f),d.createMenu([{class:"export-main export-close",label:"Done",click:function(){d.createMenu(d.config.menu),d.setup.chart.containerDiv.removeChild(f)}}])}return a},loadResource:function(a,b){var c,e,f,g,h,j=-1!=a.indexOf("//")?a:[d.libs.path,a].join(""),k=function(){if(b)for(c=0;c<b.length;c++)d.loadResource(b[c])};for(-1!=a.indexOf(".js")?(f=document.createElement("script"),f.setAttribute("type","text/javascript"),f.setAttribute("src",j),d.libs.async&&f.setAttribute("async","")):-1!=a.indexOf(".css")&&(f=document.createElement("link"),f.setAttribute("type","text/css"),f.setAttribute("rel","stylesheet"),f.setAttribute("href",j)),c=0;c<document.head.childNodes.length;c++)if(g=document.head.childNodes[c],h=!!g&&(g.src||g.href),!!g&&g.tagName,g&&h&&-1!=h.indexOf(a)){d.libs.reload&&document.head.removeChild(g),e=!0;break}for(c in d.libs.namespaces){var l=d.libs.namespaces[c],h=a.toLowerCase(),g=c.toLowerCase();if(-1!=h.indexOf(g)&&void 0!==window[l]){e=!0;break}}e&&!d.libs.reload||(f.addEventListener("load",k),f.addEventListener("error",function(){d.handleLog(["amCharts[export]: Loading error on ",this.src||this.href].join(""))}),document.head.appendChild(f),d.listenersToRemove||(d.listenersToRemove=[]),d.listenersToRemove.push({node:f,method:k,event:"load"}))},loadDependencies:function(){var a,b;if(d.libs.autoLoad)for(a=0;a<d.libs.resources.length;a++)if(d.libs.resources[a]instanceof Object)for(b in d.libs.resources[a])d.loadResource(b,d.libs.resources[a][b]);else d.loadResource(d.libs.resources[a])},pxToNumber:function(a,b){if(a||!b)return Number(String(a).replace("px",""))||0},numberToPx:function(a){return String(a)+"px"},cloneObject:function(a){var b,c,e,f,g;b=Array.isArray(a)?[]:{};for(e in a)c=a[e],f="object"==typeof c,g=c instanceof Date,b[e]=f&&!g?d.cloneObject(c):c;return b},deepMerge:function(a,b,c){var e,f,g=b instanceof Array?"array":"object";if(!(a instanceof Object||a instanceof Array))return a;for(e in b)"array"==g&&isNaN(e)||(f=b[e],(a&&void 0==a[e]||c)&&(f instanceof Array?a[e]=new Array:f instanceof Function?a[e]=function(){}:f instanceof Date?a[e]=new Date:f instanceof Object?a[e]=new Object:f instanceof Number?a[e]=new Number:f instanceof String&&(a[e]=new String)),(f instanceof Object||f instanceof Array)&&!(f instanceof Function||f instanceof Date||d.isElement(f))&&"chart"!=e&&"scope"!=e?d.deepMerge(a[e],f,c):a instanceof Array&&!c?a.push(f):a&&(a[e]=f));return a},isElement:function(a){return a instanceof Object&&a&&1===a.nodeType},isHashbanged:function(a){var b=String(a).replace(/\"/g,"");return"url"==b.slice(0,3)&&b.slice(b.indexOf("#")+1,b.length-1)},isPressed:function(a){return"mousemove"==a.type&&1===a.which||("touchmove"==a.type||1===a.buttons||1===a.button||1===a.which?d.drawing.buffer.isPressed=!0:d.drawing.buffer.isPressed=!1),d.drawing.buffer.isPressed},removeImage:function(a){if(a){if(d.config.fabric.forceRemoveImages)return!0;if(d.config.fabric.removeImages&&d.isTainted(a))return!0;if(d.setup.isIE&&(10==d.setup.IEversion||11==d.setup.IEversion)&&-1!=a.toLowerCase().indexOf(".svg"))return!0}return!1},isTainted:function(a){var b=String(window.location.origin||window.location.protocol+"//"+window.location.hostname+(window.location.port?":"+window.location.port:""));if(a){if(-1!=b.indexOf(":\\")||-1!=a.indexOf(":\\")||-1!=b.indexOf("file://")||-1!=a.indexOf("file://"))return!0;if(-1!=a.indexOf("//")&&-1==a.indexOf(b.replace(/.*:/,"")))return!0}return!1},isSupported:function(){return!!d.config.enabled&&!(d.setup.isIE&&d.setup.IEversion<=9&&(!Array.prototype.indexOf||!document.head||!1===d.config.fallback))},getAngle:function(a,b,c,d){var e=c-a,f=d-b;return 180*(0==e?0==f?0:f>0?Math.PI/2:3*Math.PI/2:0==f?e>0?0:Math.PI:e<0?Math.atan(f/e)+Math.PI:f<0?Math.atan(f/e)+2*Math.PI:Math.atan(f/e))/Math.PI},gatherAttribute:function(a,b,c,e){var f,e=e||0,c=c||3;return a&&!(f=a.getAttribute(b))&&e<c?d.gatherAttribute(a.parentNode,b,c,e+1):f},gatherClassName:function(a,b,c,e){var f,e=e||0,c=c||3;if(d.isElement(a)){if(!(f=-1!=(a.getAttribute("class")||"").split(" ").indexOf(b))&&e<c)return d.gatherClassName(a.parentNode,b,c,e+1);f&&(f=a)}return f},gatherElements:function(a,b,c){var e,f;for(e=0;e<a.children.length;e++){var g=a.children[e];if("clipPath"==g.tagName){var h={},i=fabric.parseTransformAttribute(d.gatherAttribute(g,"transform"));for(f=0;f<g.childNodes.length;f++)g.childNodes[f].setAttribute("fill","transparent"),h={x:d.pxToNumber(g.childNodes[f].getAttribute("x")),y:d.pxToNumber(g.childNodes[f].getAttribute("y")),width:d.pxToNumber(g.childNodes[f].getAttribute("width")),height:d.pxToNumber(g.childNodes[f].getAttribute("height"))};a.clippings[g.id]={svg:g,bbox:h,transform:i}}else if("pattern"==g.tagName){var j={node:g,source:g.getAttribute("xlink:href"),width:Number(g.getAttribute("width")),height:Number(g.getAttribute("height")),repeat:"repeat",offsetX:0,offsetY:0};for(f=0;f<g.childNodes.length;f++)if("rect"==g.childNodes[f].tagName)j.fill=g.childNodes[f].getAttribute("fill");else if("image"==g.childNodes[f].tagName){var k=fabric.parseAttributes(g.childNodes[f],fabric.SHARED_ATTRIBUTES);k.transformMatrix&&(j.offsetX=k.transformMatrix[4],j.offsetY=k.transformMatrix[5])}d.removeImage(j.source)?a.patterns[g.id]=j.fill?j.fill:"transparent":a.patterns[j.node.id]=j}else if("image"==g.tagName)c.included++,fabric.Image.fromURL(g.getAttribute("xlink:href"),function(a){c.loaded++});else{var k=["fill","stroke"];for(f=0;f<k.length;f++){var l=k[f],m=g.getAttribute(l),n=d.getRGBA(m),o=d.isHashbanged(m);!m||n||o||(g.setAttribute(l,"none"),g.setAttribute(l+"-opacity","0"))}}}return a},getRGBA:function(a,b){return!("none"==a||"transparent"==a||d.isHashbanged(a)||(a=new fabric.Color(a),!a._source))&&(b?a:a.getSource())},gatherPosition:function(a,b){var f,c=d.drawing.buffer.position,e=fabric.util.invertTransform(d.setup.fabric.viewportTransform);return"touchmove"==a.type&&("touches"in a?a=a.touches[0]:"changedTouches"in a&&(a=a.changedTouches[0])),f=fabric.util.transformPoint(d.setup.fabric.getPointer(a,!0),e),1==b&&(c.x1=f.x,c.y1=f.y),c.x2=f.x,c.y2=f.y,c.xD=c.x1-c.x2<0?-1*(c.x1-c.x2):c.x1-c.x2,c.yD=c.y1-c.y2<0?-1*(c.y1-c.y2):c.y1-c.y2,c},modifyFabric:function(){fabric.ElementsParser.prototype.resolveGradient=function(a,b){var c=a.get(b);if(/^url\(/.test(c)){var e=c.slice(c.indexOf("#")+1,c.length-1);if(fabric.gradientDefs[this.svgUid][e]){var f=fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][e],a);f.coords.y1&&"pie"!=d.setup.chart.type&&(f.coords.y2=-1*f.coords.y1,f.coords.y1=0),a.set(b,f)}}},fabric.Text.fromElement=function(a,b){if(!a)return null;var c=fabric.parseAttributes(a,fabric.Text.ATTRIBUTE_NAMES);b=fabric.util.object.extend(b?fabric.util.object.clone(b):{},c),b.top=b.top||0,b.left=b.left||0,"dx"in c&&(b.left+=c.dx),"dy"in c&&(b.top+=c.dy),"fontSize"in b||(b.fontSize=fabric.Text.DEFAULT_SVG_FONT_SIZE),b.originX||(b.originX="left");var d="",e=[];if("textContent"in a)if(a.childNodes)for(var f=0;f<a.childNodes.length;f++)e.push(a.childNodes[f].textContent);else e.push(a.textContent);else"firstChild"in a&&null!==a.firstChild&&"data"in a.firstChild&&null!==a.firstChild.data&&e.push(a.firstChild.data);d=e.join("\n");var g=new fabric.Text(d,b),h=0;return"left"===g.originX&&(h=g.getWidth()/2),"right"===g.originX&&(h=-g.getWidth()/2),e.length>1?g.set({left:g.getLeft()+h,top:g.getTop()+g.fontSize*(e.length-1)*(.18+g._fontSizeFraction),textAlign:b.originX,lineHeight:e.length>1?.965:1.16}):g.set({left:g.getLeft()+h,top:g.getTop()-g.getHeight()/2+g.fontSize*(.18+g._fontSizeFraction)}),g}},capture:function(a,b){var c,e=d.deepMerge(d.deepMerge({},d.config.fabric),a||{}),f=[],g={x:0,y:0,pX:0,pY:0,lX:0,lY:0,width:d.setup.chart.divRealWidth,height:d.setup.chart.divRealHeight},h={loaded:0,included:0},i={items:[],width:0,height:0,maxWidth:0,maxHeight:0};if(!d.handleNamespace("fabric",{scope:this,cb:d.capture,args:arguments}))return!1;d.modifyFabric(),d.handleCallback(e.beforeCapture,e);var j=d.setup.chart.containerDiv.getElementsByTagName("svg");for(c=0;c<j.length;c++){var k={svg:j[c],parent:j[c].parentNode,children:j[c].getElementsByTagName("*"),offset:{x:0,y:0},patterns:{},clippings:{},has:{legend:!1,panel:!1,scrollbar:!1}};k.has.legend=d.gatherClassName(k.parent,d.setup.chart.classNamePrefix+"-legend-div",1),k.has.panel=d.gatherClassName(k.parent,d.setup.chart.classNamePrefix+"-stock-panel-div"),k.has.scrollbar=d.gatherClassName(k.parent,d.setup.chart.classNamePrefix+"-scrollbar-chart-div"),k=d.gatherElements(k,e,h),f.push(k)}if(d.config.legend){if("stock"==d.setup.chart.type)for(c=0;c<d.setup.chart.panels.length;c++)d.setup.chart.panels[c].stockLegend&&d.setup.chart.panels[c].stockLegend.divId&&i.items.push(d.setup.chart.panels[c].stockLegend);else d.setup.chart.legend&&d.setup.chart.legend.divId&&i.items.push(d.setup.chart.legend);for(c=0;c<i.items.length;c++){var l=i.items[c],k={svg:l.container.container,parent:l.container.container.parentNode,children:l.container.container.getElementsByTagName("*"),offset:{x:0,y:0},legend:{id:c,type:-1!=["top","left"].indexOf(d.config.legend.position)?"unshift":"push",position:d.config.legend.position,width:d.config.legend.width?d.config.legend.width:l.container.div.offsetWidth,height:d.config.legend.height?d.config.legend.height:l.container.div.offsetHeight},patterns:{},clippings:{},has:{legend:!1,panel:!1,scrollbar:!1}};i.width+=k.legend.width,i.height+=k.legend.height,i.maxWidth=k.legend.width>i.maxWidth?k.legend.width:i.maxWidth,i.maxHeight=k.legend.height>i.maxHeight?k.legend.height:i.maxHeight,k=d.gatherElements(k,e,h),f[k.legend.type](k)}-1!=["top","bottom"].indexOf(d.config.legend.position)?(g.width=i.maxWidth>g.width?i.maxWidth:g.width,g.height+=i.height):-1!=["left","right"].indexOf(d.config.legend.position)?(g.width+=i.maxWidth,g.height=i.height>g.height?i.height:g.height):(g.height+=i.height,g.width+=i.maxWidth)}if(d.drawing.enabled=e.drawing.enabled="draw"==e.action,d.drawing.buffer.enabled=d.drawing.enabled,d.setup.wrapper=document.createElement("div"),d.setup.wrapper.setAttribute("class",d.setup.chart.classNamePrefix+"-export-canvas"),d.setup.chart.containerDiv.appendChild(d.setup.wrapper),"stock"==d.setup.chart.type){var m={top:0,right:0,bottom:0,left:0};d.setup.chart.leftContainer&&(g.width-=d.setup.chart.leftContainer.offsetWidth,m.left=d.setup.chart.leftContainer.offsetWidth+2*d.setup.chart.panelsSettings.panelSpacing),d.setup.chart.rightContainer&&(g.width-=d.setup.chart.rightContainer.offsetWidth,m.right=d.setup.chart.rightContainer.offsetWidth+2*d.setup.chart.panelsSettings.panelSpacing),d.setup.chart.periodSelector&&-1!=["top","bottom"].indexOf(d.setup.chart.periodSelector.position)&&(g.height-=d.setup.chart.periodSelector.offsetHeight+d.setup.chart.panelsSettings.panelSpacing,m[d.setup.chart.periodSelector.position]+=d.setup.chart.periodSelector.offsetHeight+d.setup.chart.panelsSettings.panelSpacing),d.setup.chart.dataSetSelector&&-1!=["top","bottom"].indexOf(d.setup.chart.dataSetSelector.position)&&(g.height-=d.setup.chart.dataSetSelector.offsetHeight,m[d.setup.chart.dataSetSelector.position]+=d.setup.chart.dataSetSelector.offsetHeight),d.setup.wrapper.style.paddingTop=d.numberToPx(m.top),d.setup.wrapper.style.paddingRight=d.numberToPx(m.right),d.setup.wrapper.style.paddingBottom=d.numberToPx(m.bottom),d.setup.wrapper.style.paddingLeft=d.numberToPx(m.left)}for(d.setup.canvas=document.createElement("canvas"),d.setup.wrapper.appendChild(d.setup.canvas),d.setup.fabric=new fabric.Canvas(d.setup.canvas,d.deepMerge({width:g.width,height:g.height,isDrawingMode:!0},e)),d.deepMerge(d.setup.fabric,e),d.deepMerge(d.setup.fabric.freeDrawingBrush,e.drawing),d.deepMerge(d.drawing,e.drawing),d.drawing.handler.change(e.drawing),d.setup.fabric.on("mouse:down",function(a){d.gatherPosition(a.e,1);d.drawing.buffer.pressedTS=Number(new Date),d.isPressed(a.e),d.drawing.buffer.isDrawing=!1,d.drawing.buffer.isDrawingTimer=setTimeout(function(){d.drawing.buffer.isSelected||(d.drawing.buffer.isDrawing=!0)},200)}),d.setup.fabric.on("mouse:move",function(a){var b=d.gatherPosition(a.e,2);if(d.isPressed(a.e),d.drawing.buffer.isPressed&&!d.drawing.buffer.isSelected&&(d.drawing.buffer.isDrawing=!0,!d.drawing.buffer.line&&"pencil"!=d.drawing.mode&&(b.xD>5||b.yD>5)&&(d.setup.fabric.isDrawingMode=!1,d.setup.fabric._isCurrentlyDrawing=!1,d.setup.fabric.freeDrawingBrush.onMouseUp(),d.setup.fabric.remove(d.setup.fabric._objects.pop()),d.drawing.buffer.line=d.drawing.handler.line({x1:b.x1,y1:b.y1,x2:b.x2,y2:b.y2,arrow:"line"!=d.drawing.mode&&d.drawing.arrow,action:"config"}))),d.drawing.buffer.isSelected&&(d.setup.fabric.isDrawingMode=!1),d.drawing.buffer.line){var e,f,g,h=d.drawing.buffer.line;for(h.x2=b.x2,h.y2=b.y2,c=0;c<h.group.length;c++)e=h.group[c],e instanceof fabric.Line?e.set({x2:h.x2,y2:h.y2}):e instanceof fabric.Triangle&&(h.angle=d.getAngle(h.x1,h.y1,h.x2,h.y2)+90,"start"==h.arrow?(f=h.y1+h.width/2,g=h.x1+h.width/2):"middle"==h.arrow?(f=h.y2+h.width/2-(h.y2-h.y1)/2,g=h.x2+h.width/2-(h.x2-h.x1)/2):(f=h.y2+h.width/2,g=h.x2+h.width/2),e.set({top:f,left:g,angle:h.angle}));d.setup.fabric.renderAll()}}),d.setup.fabric.on("mouse:up",function(a){if(!d.drawing.buffer.isDrawing){var b=d.setup.fabric.findTarget(a.e);b&&b.selectable&&d.setup.fabric.setActiveObject(b)}if(d.drawing.buffer.line){for(c=0;c<d.drawing.buffer.line.group.length;c++)d.drawing.buffer.line.group[c].remove();delete d.drawing.buffer.line.action,delete d.drawing.buffer.line.group,d.drawing.handler.line(d.drawing.buffer.line)}d.drawing.buffer.line=!1,d.drawing.buffer.hasLine=!1,d.drawing.buffer.isPressed=!1,clearTimeout(d.drawing.buffer.isDrawingTimer),d.drawing.buffer.isDrawing=!1}),d.setup.fabric.on("object:selected",function(a){d.drawing.buffer.isSelected=!0,d.drawing.buffer.target=a.target,d.setup.fabric.isDrawingMode=!1}),d.setup.fabric.on("selection:cleared",function(a){d.drawing.buffer.target=!1,d.drawing.buffer.isSelected&&(d.setup.fabric._isCurrentlyDrawing=!1),d.drawing.buffer.isSelected=!1,d.setup.fabric.isDrawingMode=!0}),d.setup.fabric.on("path:created",function(a){var b=a.path;if(!d.drawing.buffer.isDrawing||d.drawing.buffer.hasLine)return d.setup.fabric.remove(b),void d.setup.fabric.renderAll()}),d.setup.fabric.on("object:added",function(a){var b=a.target,c=d.deepMerge(b.saveState().originalState,{cfg:{color:d.drawing.color,width:d.drawing.width,opacity:d.drawing.opacity,fontSize:d.drawing.fontSize}});c=JSON.stringify(c),b.recentState=c,b.selectable&&!b.known&&(b.isAnnotation=!0,d.drawing.undos.push({action:"added",target:b,state:c}),d.drawing.undos.push({action:"addified",target:b,state:c}),d.drawing.redos=[]),b.known=!0,d.setup.fabric.isDrawingMode=!0}),d.setup.fabric.on("object:modified",function(a){var b=a.target,c=JSON.parse(b.recentState),e=d.deepMerge(b.saveState().originalState,{cfg:c.cfg});e=JSON.stringify(e),b.recentState=e,d.drawing.undos.push({action:"modified",target:b,state:e}),d.drawing.redos=[]}),d.setup.fabric.on("text:changed",function(a){var b=a.target;clearTimeout(b.timer),b.timer=setTimeout(function(){var a=JSON.stringify(b.saveState().originalState);b.recentState=a,d.drawing.redos=[],d.drawing.undos.push({action:"modified",target:b,state:a})},250)}),d.drawing.enabled?(d.setup.wrapper.setAttribute("class",d.setup.chart.classNamePrefix+"-export-canvas active"),d.setup.wrapper.style.backgroundColor=e.backgroundColor,d.setup.wrapper.style.display="block"):(d.setup.wrapper.setAttribute("class",d.setup.chart.classNamePrefix+"-export-canvas"),d.setup.wrapper.style.display="none"),c=0;c<f.length;c++){var k=f[c];"stock"==d.setup.chart.type&&d.setup.chart.legendSettings.position?-1!=["top","bottom"].indexOf(d.setup.chart.legendSettings.position)?k.parent.style.top&&k.parent.style.left?(k.offset.y=d.pxToNumber(k.parent.style.top),k.offset.x=d.pxToNumber(k.parent.style.left)):(k.offset.x=g.x,k.offset.y=g.y,g.y+=d.pxToNumber(k.parent.style.height),k.has.panel?(g.pY=d.pxToNumber(k.has.panel.style.marginTop),k.offset.y+=g.pY):k.has.scrollbar&&(k.offset.y+=g.pY)):-1!=["left","right"].indexOf(d.setup.chart.legendSettings.position)&&(k.offset.y=d.pxToNumber(k.parent.style.top)+g.pY,k.offset.x=d.pxToNumber(k.parent.style.left)+g.pX,k.has.legend?g.pY+=d.pxToNumber(k.has.panel.style.height)+d.setup.chart.panelsSettings.panelSpacing:k.has.scrollbar&&(k.offset.y-=d.setup.chart.panelsSettings.panelSpacing)):("absolute"==k.parent.style.position?(k.offset.absolute=!0,k.offset.top=d.pxToNumber(k.parent.style.top),k.offset.right=d.pxToNumber(k.parent.style.right,!0),k.offset.bottom=d.pxToNumber(k.parent.style.bottom,!0),k.offset.left=d.pxToNumber(k.parent.style.left),k.offset.width=d.pxToNumber(k.parent.style.width),k.offset.height=d.pxToNumber(k.parent.style.height)):k.parent.style.top&&k.parent.style.left?(k.offset.y=d.pxToNumber(k.parent.style.top),k.offset.x=d.pxToNumber(k.parent.style.left)):k.legend?("left"==k.legend.position?g.x=i.maxWidth:"right"==k.legend.position?k.offset.x=g.width-i.maxWidth:"top"==k.legend.position?g.y+=k.legend.height:"bottom"==k.legend.position&&(k.offset.y=g.height-i.height),k.offset.y+=g.lY,g.lY+=k.legend.height):(k.offset.x=g.x,k.offset.y=g.y+g.pY,g.y+=d.pxToNumber(k.parent.style.height)),k.has.legend&&k.has.panel&&k.has.panel.style.marginTop?(g.y+=d.pxToNumber(k.has.panel.style.marginTop),k.offset.y+=d.pxToNumber(k.has.panel.style.marginTop)):d.setup.chart.legend&&-1!=["left","right"].indexOf(d.setup.chart.legend.position)&&(k.offset.y=d.pxToNumber(k.parent.style.top),k.offset.x=d.pxToNumber(k.parent.style.left))),fabric.parseSVGDocument(k.svg,function(a){return function(c,i){var j,l=fabric.util.groupSVGElements(c,i),m=[],n={selectable:!1,isCoreElement:!0};for(a.offset.absolute?(void 0!==a.offset.bottom?n.top=g.height-a.offset.height-a.offset.bottom:n.top=a.offset.top,void 0!==a.offset.right?n.left=g.width-a.offset.width-a.offset.right:n.left=a.offset.left):(n.top=a.offset.y,n.left=a.offset.x),j=0;j<l.paths.length;j++){var o=null;if(l.paths[j]){if(d.removeImage(l.paths[j]["xlink:href"]))continue;if(l.paths[j].fill instanceof Object)"radial"==l.paths[j].fill.type&&-1==["pie","gauge"].indexOf(d.setup.chart.type)&&(l.paths[j].fill.coords.r2=-1*l.paths[j].fill.coords.r1,l.paths[j].fill.coords.r1=0,l.paths[j].set({opacity:l.paths[j].fillOpacity}));else if((o=d.isHashbanged(l.paths[j].fill))&&a.patterns&&a.patterns[o]){var p=a.patterns[o];h.included++,fabric.Image.fromURL(p.source,function(a,b){return function(c){h.loaded++,c.set({top:a.offsetY,left:a.offsetX,width:a.width,height:a.height}),d.setup.fabric._isRetinaScaling()&&c.set({top:a.offsetY/2,left:a.offsetX/2,scaleX:.5,scaleY:.5});var e=new fabric.StaticCanvas(void 0,{backgroundColor:a.fill,width:c.getWidth(),height:c.getHeight()});e.add(c);var f=new fabric.Pattern({source:e.getElement(),offsetX:l.paths[b].width/2,offsetY:l.paths[b].height/2,repeat:"repeat"});l.paths[b].set({fill:f,opacity:l.paths[b].fillOpacity})}}(p,j))}(o=d.isHashbanged(l.paths[j].clipPath))&&a.clippings&&a.clippings[o]&&(!function(b,c){var d=l.paths[b].toSVG;l.paths[b].toSVG=function(b){return d.apply(this,[function(d){return b(d,a.clippings[c])}])}}(j,o),l.paths[j].set({clipTo:function(b,c){return function(e){var f=a.clippings[c],g=this.transformMatrix||[1,0,0,1,0,0],h={top:f.bbox.y,left:f.bbox.x,width:f.bbox.width,height:f.bbox.height};"map"==d.setup.chart.type&&(h.top+=f.transform[5],h.left+=f.transform[4]),f.bbox.x&&g[4]&&f.bbox.y&&g[5]&&(h.top-=g[5],h.left-=g[4]),void 0!==d.setup.chart.smoothCustomBullets&&this.className==d.setup.chart.classNamePrefix+"-graph-bullet"&&"image"==l.paths[b].svg.tagName?(radius=f.svg.firstChild.rx.baseVal.value/2+2,e.beginPath(),e.moveTo(h.left+radius,h.top),e.lineTo(h.left+h.width-radius,h.top),e.quadraticCurveTo(h.left+h.width,h.top,h.left+h.width,h.top+radius),e.lineTo(h.left+h.width,h.top+h.height-radius),e.quadraticCurveTo(h.left+h.width,h.top+h.height,h.left+h.width-radius,h.top+h.height),e.lineTo(h.left+radius,h.top+h.height),e.quadraticCurveTo(h.left,h.top+h.height,h.left,h.top+h.height-radius),e.lineTo(h.left,h.top+radius),e.quadraticCurveTo(h.left,h.top,h.left+radius,h.top),e.closePath()):e.rect(h.left,h.top,h.width,h.height)}}(j,o)}))}m.push(l.paths[j])}if(l.paths=m,n.top+=.5,n.left+=.5,l.set(n),d.setup.fabric.add(l),a.svg.parentNode&&a.svg.parentNode.getElementsByTagName){var q=a.svg.parentNode.getElementsByClassName(d.setup.chart.classNamePrefix+"-balloon-div");for(j=0;j<q.length;j++)if(e.balloonFunction instanceof Function)e.balloonFunction.apply(d,[q[j],a]);else{var r=q[j],s=fabric.parseStyleAttribute(r),t=fabric.parseStyleAttribute(r.childNodes[0]),u=new fabric.Text(r.innerText||r.textContent||r.innerHTML,{selectable:!1,top:s.top+a.offset.y,left:s.left+a.offset.x,fill:t.color,fontSize:t.fontSize,fontFamily:t.fontFamily,textAlign:t["text-align"],isCoreElement:!0});d.setup.fabric.add(u)}}if(a.svg.nextSibling&&"A"==a.svg.nextSibling.tagName){var r=a.svg.nextSibling,s=fabric.parseStyleAttribute(r),u=new fabric.Text(r.innerText||r.textContent||r.innerHTML,{selectable:!1,top:s.top+a.offset.y,left:s.left+a.offset.x,fill:s.color,fontSize:s.fontSize,fontFamily:s.fontFamily,opacity:s.opacity,isCoreElement:!0});a.has.scrollbar||d.setup.fabric.add(u)}if(f.pop(),!f.length)var v=Number(new Date),w=setInterval(function(){var a=Number(new Date);(h.loaded==h.included||a-v>d.config.fabric.loadTimeout)&&(clearTimeout(w),d.handleBorder(e),d.handleCallback(e.afterCapture,e),d.setup.fabric.renderAll(),d.handleCallback(b,e))},AmCharts.updateRate)}}(k),function(a,b){var c,f=d.gatherAttribute(a,"class"),g=d.gatherAttribute(a,"visibility"),h=d.gatherAttribute(a,"clip-path");b.className=String(f),b.classList=String(f).split(" "),b.clipPath=h,b.svg=a;var i=["fill","stroke"];for(c=0;c<i.length;c++){var j=i[c],k=String(a.getAttribute(j)||"none"),l=Number(a.getAttribute(j+"-opacity")||"1"),m=d.getRGBA(k);"hidden"==g&&(b.opacity=0,l=0),m&&(m.pop(),m.push(l),b[j]="rgba("+m.join()+")",b[j+d.capitalize("opacity")]=l)}d.handleCallback(e.reviver,b,a)})}},toCanvas:function(a,b){var c=d.deepMerge({},a||{}),e=d.setup.canvas;return d.handleCallback(b,e,c),e},toImage:function(a,b){var c=d.deepMerge({format:"png",quality:1,multiplier:d.config.multiplier},a||{}),e=c.data,f=document.createElement("img");return!!d.handleNamespace("fabric",{scope:this,cb:d.toImage,args:arguments})&&(c.data||(e=c.lossless||"svg"==c.format?d.toSVG(d.deepMerge(c,{getBase64:!0})):d.setup.fabric.toDataURL(c)),f.setAttribute("src",e),d.handleCallback(b,f,c),f)},toBlob:function(a,b){var e,c=d.deepMerge({data:"empty",type:"text/plain"},a||{}),f=/^data:.+;base64,(.*)$/.exec(c.data);return f&&(c.data=f[0],c.type=c.data.slice(5,c.data.indexOf(",")-7),c.data=d.toByteArray({data:c.data.slice(c.data.indexOf(",")+1,c.data.length)})),e=c.getByteArray?c.data:new Blob([c.data],{type:c.type}),d.handleCallback(b,e,c),e},toJPG:function(a,b){var c=d.deepMerge({format:"jpeg",quality:1,multiplier:d.config.multiplier},a||{});c.format=c.format.toLowerCase();var e;return!!d.handleNamespace("fabric",{scope:this,cb:d.toJPG,args:arguments})&&(e=d.setup.fabric.toDataURL(c),d.handleCallback(b,e,c),e)},toPNG:function(a,b){var e,c=d.deepMerge({format:"png",quality:1,multiplier:d.config.multiplier},a||{});return!!d.handleNamespace("fabric",{scope:this,cb:d.toPNG,args:arguments})&&(e=d.setup.fabric.toDataURL(c),d.handleCallback(b,e,c),e)},toSVG:function(a,b){var g,c=[],e=[],f=d.deepMerge({compress:d.config.compress,reviver:function(a,b){var f=new RegExp(/\bstyle=(['"])(.*?)\1/),g=f.exec(a)[0].slice(7,-1),h=g.split(";"),i=[];for(i1=0;i1<h.length;i1++)if(h[i1]){var j=h[i1].replace(/\s/g,"").split(":"),k=j[0],l=j[1];if(-1!=["fill","stroke"].indexOf(k))if(l=d.getRGBA(l,!0)){var m="#"+l.toHex(),n=l._source[3];i.push([k,m].join(":")),i.push([k+"-opacity",n].join(":"))}else i.push(h[i1]);else"opactiy"!=k&&i.push(h[i1])}if(a=a.replace(g,i.join(";")),b&&b.svg){var o=b.svg.id,p=2,q=a.slice(-p);"/>"!=q&&(p=3,q=a.slice(-p));var r=a.slice(0,a.length-p),s=' clip-path="url(#'+o+')" ',t=d.gatherAttribute(b.svg,"class");if(t=t?t.split(" "):[],a=-1!=t.indexOf(d.setup.chart.classNamePrefix+"-graph-line")?r+s+q:"<g "+s+">"+a+"</g>",-1==e.indexOf(o)){var u=(new XMLSerializer).serializeToString(b.svg);c.push(u),e.push(o)}}return a}},a||{});if(!d.handleNamespace("fabric",{scope:this,cb:d.toSVG,args:arguments}))return!1;if(g=d.setup.fabric.toSVG(f,f.reviver),c.length){var h=g.slice(0,g.length-6),i=g.slice(-6);g=h+c.join("")+i}return f.compress&&(g=g.replace(/[\t\r\n]+/g,"")),f.getBase64&&(g="data:image/svg+xml;base64,"+btoa(g)),d.handleCallback(b,g,f),g},toPDF:function(a,b){function f(a){if("number"==typeof a||a instanceof Number)a={left:a,right:a,top:a,bottom:a};else if(a instanceof Array)if(2===a.length)a={left:a[0],top:a[1],right:a[0],bottom:a[1]};else{if(4!==a.length)throw"Invalid pageMargins definition";a={left:a[0],top:a[1],right:a[2],bottom:a[3]}}else a={left:d.defaults.pdfMake.pageMargins,top:d.defaults.pdfMake.pageMargins,right:d.defaults.pdfMake.pageMargins,bottom:d.defaults.pdfMake.pageMargins};return a}function g(a,b){var c=d.defaults.pdfMake.pageSizes[String(a).toUpperCase()].slice();if(!c)throw new Error('The given pageSize "'+a+'" does not exist!');return"landscape"==b&&c.reverse(),c}var e,c=d.deepMerge(d.deepMerge({multiplier:d.config.multiplier||2,pageOrigin:void 0===d.config.pageOrigin},d.config.pdfMake),a||{},!0);if(!d.handleNamespace("pdfMake",{scope:this,cb:d.toPDF,args:arguments}))return!1;if(e=new pdfMake.createPdf(c),c.images.reference=d.toPNG(c),!c.content){var h=[],i=g(c.pageSize,c.pageOrientation),j=f(c.pageMargins);i[0]-=j.left+j.right,i[1]-=j.top+j.bottom,c.pageOrigin&&(h.push(d.i18l("label.saved.from")),h.push(window.location.href),i[1]-=28.128),h.push({image:"reference",fit:i}),c.content=h}return b&&e.getDataUrl(function(a){return function(b){a.apply(d,arguments)}}(b)),e},toPRINT:function(a,b){var c,e=d.deepMerge({delay:.01,lossless:!1},a||{}),f=d.toImage(e),g=[],h=document.body.childNodes,i=document.documentElement.scrollTop||document.body.scrollTop;for(f.setAttribute("style","width: 100%; max-height: 100%;"),c=0;c<h.length;c++)d.isElement(h[c])&&(g[c]=h[c].style.display,h[c].style.display="none");return document.body.appendChild(f),setTimeout(function(){window.print(),e.delay*=1e3,/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&e.delay<1e3&&(e.delay=1e3),setTimeout(function(){for(c=0;c<h.length;c++)d.isElement(h[c])&&(h[c].style.display=g[c]);document.body.removeChild(f),document.documentElement.scrollTop=document.body.scrollTop=i,d.handleCallback(b,f,e)},e.delay)},1),f},toJSON:function(a,b){var c=d.deepMerge({dateFormat:d.config.dateFormat||"dateObject"},a||{},!0),e={};return!!d.handleNamespace("JSON",{scope:this,cb:d.toJSON,args:arguments})&&(c.data=void 0!==c.data?c.data:d.getChartData(c),e=JSON.stringify(c.data,void 0,"\t"),d.handleCallback(b,e,c),e)},toCSV:function(a,b){var c,f=d.deepMerge({delimiter:",",quotes:!0,escape:!0,withHeader:!0},a||{},!0),g=[],h="";g=d.toArray(f);for(c in g)isNaN(c)||(h+=g[c].join(f.delimiter)+"\n");return d.handleCallback(b,h,f),h},toXLSX:function(a,b){function h(a,b){return b&&(a+=1462),(Date.parse(a)-60*a.getTimezoneOffset()*1e3-new Date(Date.UTC(1899,11,30)))/864e5}function i(a,b){for(var c={},d={s:{c:1e7,r:1e7},e:{c:0,r:0}},e=0;e!=a.length;++e)for(var f=0;f!=a[e].length;++f){d.s.r>e&&(d.s.r=e),d.s.c>f&&(d.s.c=f),d.e.r<e&&(d.e.r=e),d.e.c<f&&(d.e.c=f);var g={v:a[e][f]};if(null!=g.v){var i=XLSX.utils.encode_cell({c:f,r:e});"number"==typeof g.v?g.t="n":"boolean"==typeof g.v?g.t="b":g.v instanceof Date?(g.t="n",g.z=XLSX.SSF._table[14],g.v=h(g.v)):g.v instanceof Object?(g.t="s",g.v=JSON.stringify(g.v)):g.t="s",c[i]=g}}return d.s.c<1e7&&(c["!ref"]=XLSX.utils.encode_range(d)),c}var c=d.deepMerge({name:"amCharts",dateFormat:d.config.dateFormat||"dateObject",withHeader:!0,stringify:!1},a||{},!0),e=[],f="",g={SheetNames:[],Sheets:{}};return!!d.handleNamespace("XLSX",{scope:this,cb:d.toXLSX,args:arguments})&&(e=d.toArray(c),g.SheetNames.push(c.name),g.Sheets[c.name]=i(e),f=XLSX.write(g,{bookType:"xlsx",bookSST:!0,type:"base64"}),f="data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,"+f,d.handleCallback(b,f,c),f)},toArray:function(a,b){function k(a,b){var c=b.exportFields||Object.keys(b.dataFieldsMap);for(e=0;e<c.length;e++){var f=c[e],g=b.dataFieldsTitlesMap[f];h.push(g)}return j?d.handleCallback(j,a,b):a}function l(a){return"string"==typeof a&&(f.escape&&(a=a.replace('"','""')),f.quotes&&(a=['"',a,'"'].join(""))),a}var c,e,f=d.deepMerge({withHeader:!1,stringify:!0,escape:!1,quotes:!1},a||{},!0),g=[],h=[],i=[],j=d.config.processData;if(f.processData=k,f.data=void 0!==f.data?d.processData(f):d.getChartData(f),f.withHeader){i=[];for(e in h)isNaN(e)||i.push(l(h[e]));g.push(i)}for(c in f.data)if(i=[],!isNaN(c)){for(e in h)if(!isNaN(e)){var e=h[e],m=f.data[c][e];m=null==m?"":f.stringify?String(m):m,i.push(l(m))}g.push(i)}return d.handleCallback(b,g,f),g},toByteArray:function(a,b){function l(a){var b=a.charCodeAt(0);return b===f?62:b===g?63:b<h?-1:b<h+10?b-h+26+26:b<j+26?b-j:b<i+26?b-i+26:void 0}function m(a){function k(a){h[j++]=a}var b,c,d,f,g,h;if(a.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=a.length;g="="===a.charAt(i-2)?2:"="===a.charAt(i-1)?1:0,h=new e(3*a.length/4-g),d=g>0?a.length-4:a.length;var j=0;for(b=0,c=0;b<d;b+=4,c+=3)f=l(a.charAt(b))<<18|l(a.charAt(b+1))<<12|l(a.charAt(b+2))<<6|l(a.charAt(b+3)),k((16711680&f)>>16),k((65280&f)>>8),k(255&f);return 2===g?(f=l(a.charAt(b))<<2|l(a.charAt(b+1))>>4,k(255&f)):1===g&&(f=l(a.charAt(b))<<10|l(a.charAt(b+1))<<4|l(a.charAt(b+2))>>2,k(f>>8&255),k(255&f)),h}var c=d.deepMerge({},a||{}),e="undefined"!=typeof Uint8Array?Uint8Array:Array,f="+".charCodeAt(0),g="/".charCodeAt(0),h="0".charCodeAt(0),i="a".charCodeAt(0),j="A".charCodeAt(0),k=m(c.data);return d.handleCallback(b,k,c),k},handleCallback:function(a){var b,c=Array();if(a&&a instanceof Function){for(b=0;b<arguments.length;b++)b>0&&c.push(arguments[b]);return a.apply(d,c)}},handleLog:function(a){!0===d.config.debug&&console.log(a)},handleNamespace:function(a,b){function h(){var i=Number(new Date);e=!!(a in c),"pdfMake"==a&&e&&(e=c.pdfMake.vfs),e?(clearTimeout(g),b.cb.apply(b.scope,b.args),d.handleLog(['AmCharts [export]: Namespace "',a,'" showed up in: ',String(c)].join(""))):i-f<d.libs.loadTimeout?g=setTimeout(h,250):d.handleLog(['AmCharts [export]: Gave up waiting for "',a,'" in: ',String(c)].join(""))}var g,c=d.config.scope||window,e=!1,f=Number(new Date);return e=!!(a in c),e||(d.handleLog(['AmCharts [export]: Could not find "',a,'" in: ',String(c)].join("")),h()),e},handleBorder:function(a){if(d.config.border instanceof Object){var b=d.deepMerge(d.defaults.fabric.border,a.border||{},!0),c=new fabric.Rect;b.width=d.setup.fabric.width-b.strokeWidth,b.height=d.setup.fabric.height-b.strokeWidth,c.set(b),d.setup.fabric.add(c)}},handleDropbox:function(a){if(d.drawing.enabled)if(a.preventDefault(),a.stopPropagation(),"dragover"==a.type)d.setup.wrapper.setAttribute("class",d.setup.chart.classNamePrefix+"-export-canvas active dropbox");else if(d.setup.wrapper.setAttribute("class",d.setup.chart.classNamePrefix+"-export-canvas active"),"drop"==a.type&&a.dataTransfer.files.length)for(var b=0;b<a.dataTransfer.files.length;b++){var c=new FileReader;c.onloadend=function(b){return function(){d.drawing.handler.add({url:c.result,top:a.layerY-10*b,left:a.layerX-10*b})}}(b),c.readAsDataURL(a.dataTransfer.files[b])}},handleReady:function(a){var d=this,e=Number(new Date);d.handleCallback(a,"data",!1);for(filename in d.libs.namespaces){var f=d.libs.namespaces[filename];!function(b){var c=setInterval(function(){var f=Number(new Date);(f-e>d.libs.loadTimeout||b in window)&&(clearTimeout(c),d.handleCallback(a,b,f-e>d.libs.loadTimeout))},AmCharts.updateRate)}(f)}},getChartData:function(a){function j(a,e,f){function g(a,c){return-1!=b.dataFields.indexOf(a)?g([a,".",c].join("")):a}a&&b.exportTitles&&"gantt"!=d.setup.chart.type&&(c=g(a,f),b.dataFieldsMap[c]=a,b.dataFields.push(c),b.titles[c]=e||c)}var c,e,f,g,i,b=d.deepMerge({data:[],titles:{},dateFields:[],dataFields:[],dataFieldsMap:{},exportTitles:d.config.exportTitles,exportFields:d.config.exportFields,exportSelection:d.config.exportSelection,columnNames:d.config.columnNames},a||{},!0),h=["valueField","openField","closeField","highField","lowField","xField","yField"];if(0==b.data.length)if("stock"==d.setup.chart.type){for(b.data=d.cloneObject(d.setup.chart.mainDataSet.dataProvider),j(d.setup.chart.mainDataSet.categoryField),b.dateFields.push(d.setup.chart.mainDataSet.categoryField),e=0;e<d.setup.chart.mainDataSet.fieldMappings.length;e++){var k=d.setup.chart.mainDataSet.fieldMappings[e];for(f=0;f<d.setup.chart.panels.length;f++){var l=d.setup.chart.panels[f];for(g=0;g<l.stockGraphs.length;g++){var m=l.stockGraphs[g];for(i4=0;i4<h.length;i4++)m[h[i4]]==k.toField&&j(k.fromField,m.title,h[i4])}}}if(d.setup.chart.comparedGraphs.length){for(i=[],e=0;e<b.data.length;e++)i.push(b.data[e][d.setup.chart.mainDataSet.categoryField]);for(e=0;e<d.setup.chart.comparedGraphs.length;e++){var m=d.setup.chart.comparedGraphs[e];for(f=0;f<m.dataSet.dataProvider.length;f++){var n=m.dataSet.categoryField,o=m.dataSet.dataProvider[f][n],p=i.indexOf(o);if(-1!=p)for(g=0;g<m.dataSet.fieldMappings.length;g++){var k=m.dataSet.fieldMappings[g],c=m.dataSet.id+"_"+k.toField;b.data[p][c]=m.dataSet.dataProvider[f][k.fromField],b.titles[c]||j(c,m.dataSet.title)}}}}}else if("gantt"==d.setup.chart.type){j(d.setup.chart.categoryField);var q=d.setup.chart.segmentsField;for(e=0;e<d.setup.chart.dataProvider.length;e++){var r=d.setup.chart.dataProvider[e];if(r[q])for(f=0;f<r[q].length;f++)r[q][f][d.setup.chart.categoryField]=r[d.setup.chart.categoryField],b.data.push(r[q][f])}for(e=0;e<d.setup.chart.graphs.length;e++){var m=d.setup.chart.graphs[e];for(f=0;f<h.length;f++){var s=h[f],t=m[s];m.title;j(t,m.title,s)}}}else if(-1!=["pie","funnel"].indexOf(d.setup.chart.type))b.data=d.setup.chart.dataProvider,j(d.setup.chart.titleField),b.dateFields.push(d.setup.chart.titleField),j(d.setup.chart.valueField);else if("map"!=d.setup.chart.type)for(b.data=d.setup.chart.dataProvider,d.setup.chart.categoryAxis&&(j(d.setup.chart.categoryField,d.setup.chart.categoryAxis.title),!1!==d.setup.chart.categoryAxis.parseDates&&b.dateFields.push(d.setup.chart.categoryField)),e=0;e<d.setup.chart.graphs.length;e++){var m=d.setup.chart.graphs[e];for(f=0;f<h.length;f++){var s=h[f],t=m[s];j(t,m.title,s)}}return d.processData(b)},getAnnotations:function(a,b){var e,c=d.deepMerge({},a||{},!0),f=[];for(e=0;e<d.setup.fabric._objects.length;e++)if(!d.setup.fabric._objects[e].isCoreElement){var g=d.setup.fabric._objects[e].toJSON();d.handleCallback(c.reviver,g,e),f.push(g)}return d.handleCallback(b,f),f},setAnnotations:function(a,b){var c=d.deepMerge({data:[]},a||{},!0);return fabric.util.enlivenObjects(c.data,function(a){a.forEach(function(a,b){d.handleCallback(c.reviver,a,b),d.setup.fabric.add(a)}),d.handleCallback(b,c)}),c.data},processData:function(b){var e,f,c=d.deepMerge({data:[],titles:{},dateFields:[],dataFields:[],dataFieldsMap:{},dataFieldsTitlesMap:{},dataDateFormat:d.setup.chart.dataDateFormat,dateFormat:d.config.dateFormat||d.setup.chart.dataDateFormat||"YYYY-MM-DD",exportTitles:d.config.exportTitles,exportFields:d.config.exportFields,exportSelection:d.config.exportSelection,columnNames:d.config.columnNames,processData:d.config.processData},b||{},!0);if(c.data.length){for(e=0;e<c.data.length;e++)for(f in c.data[e])-1==c.dataFields.indexOf(f)&&(c.dataFields.push(f),c.dataFieldsMap[f]=f);void 0!==c.exportFields&&(c.dataFields=c.exportFields.filter(function(a){return-1!=c.dataFields.indexOf(a)}));var g=[];for(e=0;e<c.data.length;e++){var h={},i=!1;for(f=0;f<c.dataFields.length;f++){var j=c.dataFields[f],k=c.dataFieldsMap[j],l=c.columnNames&&c.columnNames[j]||c.titles[j]||j,m=c.data[e][k];null==m&&(m=void 0),c.exportTitles&&"gantt"!=d.setup.chart.type&&l in h&&(l+=["( ",j," )"].join("")),-1!=c.dateFields.indexOf(k)&&(c.dataDateFormat&&(m instanceof String||"string"==typeof m)?m=AmCharts.stringToDate(m,c.dataDateFormat):c.dateFormat&&(m instanceof Number||"number"==typeof m)&&(m=new Date(m)),c.exportSelection&&(m instanceof Date?(m<a.startDate||m>a.endDate)&&(i=!0):(e<a.startIndex||e>a.endIndex)&&(i=!0)),c.dateFormat&&"dateObject"!=c.dateFormat&&m instanceof Date&&(m=AmCharts.formatDate(m,c.dateFormat))),c.dataFieldsTitlesMap[k]=l,h[l]=m}i||g.push(h)}c.data=g}return void 0!==c.processData&&(c.data=d.handleCallback(c.processData,c.data,c)),c.data},capitalize:function(a){return a.charAt(0).toUpperCase()+a.slice(1).toLowerCase()},createMenu:function(b,c){function g(b,c){var e,h,i=document.createElement("ul");for(e=0;e<b.length;e++){var j="string"==typeof b[e]?{format:b[e]}:b[e],k=document.createElement("li"),l=document.createElement("a"),m=document.createElement("img"),n=document.createElement("span"),o=String(j.action?j.action:j.format).toLowerCase();if(j.format=String(j.format).toUpperCase(),k.addEventListener("mouseleave",function(a){this.classList.remove("active")}),l.addEventListener("focus",function(a){if(!d.setup.hasTouch){d.setup.focusedMenuItem=this;var b=this.parentNode;"UL"!=b.tagName&&(b=b.parentNode);var c=b.getElementsByTagName("li");for(e=0;e<c.length;e++)c[e].classList.remove("active");this.parentNode.classList.add("active"),this.parentNode.parentNode.parentNode.classList.add("active")}}),d.config.formats[j.format]?j=d.deepMerge({label:j.icon?"":j.format,format:j.format,mimeType:d.config.formats[j.format].mimeType,extension:d.config.formats[j.format].extension,capture:d.config.formats[j.format].capture,action:d.config.action,fileName:d.config.fileName},j):j.label||(j.label=j.label?j.label:d.i18l("menu.label."+o)),(-1==["CSV","JSON","XLSX"].indexOf(j.format)||-1==["map","gauge"].indexOf(d.setup.chart.type))&&(d.setup.hasBlob||"UNDEFINED"==j.format||!j.mimeType||"image"==j.mimeType.split("/")[0]||"text/plain"==j.mimeType)){if("draw"==j.action)d.config.fabric.drawing.enabled?(j.menu=j.menu?j.menu:d.config.fabric.drawing.menu,j.click=function(a){return function(){this.capture(a,function(){this.createMenu(a.menu)})}}(j)):j.menu=[];else if(!j.populated&&j.action&&-1!=j.action.indexOf("draw.")){var p=j.action.split(".")[1],q=j[p]||d.config.fabric.drawing[p]||[];for(j.menu=[],j.populated=!0,h=0;h<q.length;h++){var r={label:q[h]};if("shapes"==p){var s=-1==q[h].indexOf("//"),t=(s?d.config.path+"shapes/":"")+q[h];r.action="add",r.url=t,r.icon=t,r.ignore=s,r.class="export-drawing-shape"}else"colors"==p?(r.style="background-color: "+q[h],r.action="change",r.color=q[h],r.class="export-drawing-color"):"widths"==p?(r.action="change",r.width=q[h],r.label=document.createElement("span"),r.label.style.width=d.numberToPx(q[h]),r.label.style.height=d.numberToPx(q[h]),r.class="export-drawing-width"):"opacities"==p?(r.style="opacity: "+q[h],r.action="change",r.opacity=q[h],r.label=100*q[h]+"%",r.class="export-drawing-opacity"):"modes"==p&&(r.label=d.i18l("menu.label.draw.modes."+q[h]),r.click=function(a){return function(){d.drawing.mode=a}}(q[h]),r.class="export-drawing-mode");j.menu.push(r)}}else j.click||j.menu||j.items||(d.drawing.handler[o]instanceof Function?(j.action=o,j.click=function(a){return function(){this.drawing.handler[a.action](a),"cancel"!=a.action&&this.createMenu(this.config.fabric.drawing.menu)}}(j)):d.drawing.enabled?j.click=function(a){return function(){this.config.drawing.autoClose&&this.drawing.handler.done(),this["to"+a.format](a,function(b){"download"==a.action&&this.download(b,a.mimeType,[a.fileName,a.extension].join("."))})}}(j):"UNDEFINED"!=j.format&&(j.click=function(a){return function(){if(a.capture||"print"==a.action||"PRINT"==a.format)this.capture(a,function(){this.drawing.handler.done(),this["to"+a.format](a,function(b){"download"==a.action&&(this.download(b,a.mimeType,[a.fileName,a.extension].join(".")),this.createMenu(this.config.menu))})});else{if(!this["to"+a.format])throw new Error("Invalid format. Could not determine output type.");this["to"+a.format](a,function(b){this.download(b,a.mimeType,[a.fileName,a.extension].join(".")),this.createMenu(this.config.menu)})}}}(j)));(void 0===j.menu||j.menu.length)&&(l.setAttribute("href","#"),l.addEventListener("click",function(a,b){return function(c){c.preventDefault();var e=[c,b];if(("draw"==b.action||"PRINT"==b.format||"UNDEFINED"!=b.format&&b.capture)&&!d.drawing.enabled&&(!isNaN(b.delay)||!isNaN(d.config.delay)))return b.delay=isNaN(b.delay)?d.config.delay:b.delay,void d.delay(b,a);a.apply(d,e)}}(j.click||function(a){a.preventDefault()},j)),d.setup.hasTouch&&k.classList&&l.addEventListener("click",function(a){return function(b){function j(a){var b=a.parentNode.parentNode,c=b.classList;return!("LI"!=b.tagName||!c.contains("active"))}function k(a){var b=a.parentNode.children;for(e=0;e<b.length;e++){var c=b[e],d=c.classList;if(c!==a&&d.contains("active"))return d.remove("active"),!0}return!1}function l(a){return a.getElementsByTagName("ul").length>0}function m(a){return a.classList.contains("export-main")||a.classList.contains("export-drawing")}b.preventDefault();var c=a.elements.li,g=j(c),i=(k(c),l(c));if(!m(c)&&i||d.setup.menu.classList.toggle("active"),!g||!i)for(;f.length;){var n=f.pop(),o=m(n),p=n!==c;o?i||n.classList.remove("active"):p&&n.classList.remove("active")}f.push(c),i&&c.classList.toggle("active")}}(j)),k.appendChild(l),d.isElement(j.label)?n.appendChild(j.label):n.innerHTML=j.label,j.class&&(k.className=j.class),j.style&&k.setAttribute("style",j.style),j.icon&&(m.setAttribute("src",(j.ignore||-1!=j.icon.slice(0,10).indexOf("//")?"":a.pathToImages)+j.icon),l.appendChild(m)),j.label&&l.appendChild(n),j.title&&l.setAttribute("title",j.title),d.config.menuReviver&&(k=d.config.menuReviver.apply(d,[j,k])),j.elements={li:k,a:l,img:m,span:n},(j.menu||j.items)&&"draw"!=j.action?g(j.menu||j.items,k).childNodes.length&&i.appendChild(k):i.appendChild(k))}}return i.childNodes.length&&c.appendChild(i),i}var f=[];return c||("string"==typeof d.config.divId?d.config.divId=c=document.getElementById(d.config.divId):c=d.isElement(d.config.divId)?d.config.divId:d.setup.chart.containerDiv),d.isElement(d.setup.menu)?d.setup.menu.innerHTML="":d.setup.menu=document.createElement("div"),d.setup.menu.setAttribute("class",d.setup.chart.classNamePrefix+"-export-menu "+d.setup.chart.classNamePrefix+"-export-menu-"+d.config.position+" amExportButton"),d.config.menuWalker&&(g=d.config.menuWalker),g.apply(this,[b,d.setup.menu]),d.setup.menu.childNodes.length&&c.appendChild(d.setup.menu),d.setup.menu},delay:function(a,b){var e,f,c=d.deepMerge({delay:3,precision:2},a||{}),g=Number(new Date),h=d.createMenu([{label:d.i18l("capturing.delayed.menu.label").replace("{{duration}}",AmCharts.toFixed(c.delay,c.precision)),title:d.i18l("capturing.delayed.menu.title"),class:"export-delayed-capturing",click:function(){clearTimeout(e),clearTimeout(f),d.createMenu(d.config.menu)}}]),i=h.getElementsByTagName("a")[0];e=setInterval(function(){var a=c.delay-(Number(new Date)-g)/1e3;a<=0?(clearTimeout(e),"draw"!=c.action&&d.createMenu(d.config.menu)):i&&(i.innerHTML=d.i18l("capturing.delayed.menu.label").replace("{{duration}}",AmCharts.toFixed(a,2)))},AmCharts.updateRate),f=setTimeout(function(){b.apply(d,arguments)},1e3*c.delay)},migrateSetup:function(a){function c(a){var d;for(d in a){var e=a[d];"export"==d.slice(0,6)&&e?b.menu.push(d.slice(6)):"userCFG"==d?c(e):"menuItems"==d?b.menu=e:"libs"==d?b.libs=e:"string"==typeof d&&(b[d]=e)}}var b={enabled:!0,migrated:!0,libs:{autoLoad:!0},menu:[]};return c(a),b},clear:function(){d.setup=void 0,d.docListener&&document.removeEventListener("keydown",d.docListener);var a=d.listenersToRemove;if(a)for(var b=0;b<a.length;b++){var c=a[b];c.node.removeEventListener(c.event,c.method)}d.listenersToRemove=[]},loadListeners:function(){function a(a){a&&(a.set({top:a.top+10,left:a.left+10}),d.setup.fabric.add(a))}d.config.keyListener&&"attached"!=d.config.keyListener&&(d.docListener=function(b){function h(a,b){for(i1=0;i1<a.length;i1++){var c=a[i1];c.parentNode.classList.remove("active"),0!=i1||b||c.focus()}}function i(a){d.setup.focusedMenuItem&&d.setup.focusedMenuItem.nextSibling&&(d.setup.focusedMenuItem.parentNode.classList.add("active"),h(d.setup.focusedMenuItem.nextSibling.getElementsByTagName("a"),a))}function j(a){d.setup.focusedMenuItem&&d.setup.focusedMenuItem.parentNode.parentNode.parentNode&&(d.setup.focusedMenuItem.parentNode.classList.add("active"),h(d.setup.focusedMenuItem.parentNode.parentNode.parentNode.getElementsByTagName("a"),a))}function k(a){d.setup.focusedMenuItem&&d.setup.focusedMenuItem.parentNode.nextSibling&&(d.setup.focusedMenuItem.parentNode.classList.remove("active"),h(d.setup.focusedMenuItem.parentNode.nextSibling.getElementsByTagName("a"),a))}function l(a){d.setup.focusedMenuItem&&d.setup.focusedMenuItem.parentNode.previousSibling&&(d.setup.focusedMenuItem.parentNode.classList.remove("active"),h(d.setup.focusedMenuItem.parentNode.previousSibling.getElementsByTagName("a"),a))}function m(){function a(b){d.isElement(b)&&(b.blur(),b.parentNode&&b.parentNode.classList.remove("active"),b.classList.contains("amExportButton")||a(b.parentNode))}d.setup.focusedMenuItem&&(a(d.setup.focusedMenuItem),d.setup.focusedMenuItem=void 0)}var c=d.drawing.buffer.target,e=[37,38,39,40,13,9,27],g=(["top-left","bottom-left"].indexOf(d.config.position),-1!=["top-right","bottom-right"].indexOf(d.config.position));if(d.setup.focusedMenuItem&&-1!=e.indexOf(b.keyCode)){if(9==b.keyCode)return void(d.setup.focusedMenuItem.nextSibling?b.shiftKey&&d.setup.focusedMenuItem.parentNode.classList.remove("active"):(d.setup.focusedMenuItem.parentNode.classList.remove("active"),d.setup.focusedMenuItem.parentNode.nextSibling||(d.setup.focusedMenuItem.parentNode.classList.remove("active"),d.setup.focusedMenuItem.parentNode.parentNode.parentNode.classList.remove("active"))));13==b.keyCode&&d.setup.focusedMenuItem.nextSibling&&i(),37==b.keyCode&&(g?i():j()),39==b.keyCode&&(g?j():i()),40==b.keyCode&&k(),38==b.keyCode&&l(),27==b.keyCode&&m()}8!=b.keyCode&&46!=b.keyCode||!c?27==b.keyCode&&d.drawing.enabled?(b.preventDefault(),d.drawing.buffer.isSelected?d.setup.fabric.discardActiveObject():d.drawing.handler.done()):67==b.keyCode&&(b.metaKey||b.ctrlKey)&&c?d.drawing.buffer.copy=c:88==b.keyCode&&(b.metaKey||b.ctrlKey)&&c?(d.drawing.buffer.copy=c,d.setup.fabric.remove(c)):86==b.keyCode&&(b.metaKey||b.ctrlKey)?d.drawing.buffer.copy&&a(d.drawing.buffer.copy.clone(a)):90==b.keyCode&&(b.metaKey||b.ctrlKey)&&(b.preventDefault(),b.shiftKey?d.drawing.handler.redo():d.drawing.handler.undo()):(b.preventDefault(),d.setup.fabric.remove(c))},d.config.keyListener="attached",document.addEventListener("keydown",d.docListener)),d.config.fileListener&&(d.setup.chart.containerDiv.addEventListener("dragover",d.handleDropbox),d.setup.chart.containerDiv.addEventListener("dragleave",d.handleDropbox),d.setup.chart.containerDiv.addEventListener("drop",d.handleDropbox))},init:function(){clearTimeout(c),c=setInterval(function(){d.setup&&d.setup.chart.containerDiv&&(clearTimeout(c),d.config.enabled&&(d.setup.chart.AmExport=d,d.config.overflow&&(d.setup.chart.div.style.overflow="visible"),d.loadListeners(),d.createMenu(d.config.menu),d.handleReady(d.config.onReady)))},AmCharts.updateRate)},construct:function(){d.drawing.handler.cancel=d.drawing.handler.done;try{d.setup.hasBlob=!!new Blob}catch(a){}window.safari=window.safari?window.safari:{},d.defaults.fabric.drawing.fontSize=d.setup.chart.fontSize||11,d.config.drawing=d.deepMerge(d.defaults.fabric.drawing,d.config.drawing||{},!0),d.config.border&&(d.config.border=d.deepMerge(d.defaults.fabric.border,d.config.border||{},!0)),d.deepMerge(d.defaults.fabric,d.config,!0),d.deepMerge(d.defaults.fabric,d.config.fabric||{},!0),d.deepMerge(d.defaults.pdfMake,d.config,!0),d.deepMerge(d.defaults.pdfMake,d.config.pdfMake||{},!0),d.deepMerge(d.libs,d.config.libs||{},!0),d.config.drawing=d.defaults.fabric.drawing,d.config.fabric=d.defaults.fabric,d.config.pdfMake=d.defaults.pdfMake,d.config=d.deepMerge(d.defaults,d.config,!0),d.config.fabric.drawing.enabled&&void 0===d.config.fabric.drawing.menu&&(d.config.fabric.drawing.menu=[],d.deepMerge(d.config.fabric.drawing.menu,[{class:"export-drawing",menu:[{label:d.i18l("menu.label.draw.add"),menu:[{label:d.i18l("menu.label.draw.shapes"),action:"draw.shapes"},{label:d.i18l("menu.label.draw.text"),action:"text"}]},{label:d.i18l("menu.label.draw.change"),menu:[{label:d.i18l("menu.label.draw.modes"),action:"draw.modes"},{label:d.i18l("menu.label.draw.colors"),action:"draw.colors"},{label:d.i18l("menu.label.draw.widths"),action:"draw.widths"},{label:d.i18l("menu.label.draw.opacities"),action:"draw.opacities"},"UNDO","REDO"]},{label:d.i18l("menu.label.save.image"),menu:["PNG","JPG","SVG","PDF"]},"PRINT","CANCEL"]}])),void 0===d.config.menu&&(d.config.menu=[],d.deepMerge(d.config,{menu:[{class:"export-main",menu:[{label:d.i18l("menu.label.save.image"),menu:["PNG","JPG","SVG","PDF"]},{label:d.i18l("menu.label.save.data"),menu:["CSV","XLSX","JSON"]},{label:d.i18l("menu.label.draw"),action:"draw",menu:d.config.fabric.drawing.menu},{format:"PRINT",label:d.i18l("menu.label.print")}]}]})),d.libs.path||(d.libs.path=d.config.path+"libs/"),d.isSupported()&&(d.loadDependencies(d.libs.resources,d.libs.reload),d.setup.chart.addClassNames=!0,d.setup.chart[d.name]=d,d.init())}};if(b)d.config=b;else if(d.setup.chart[d.name])d.config=d.setup.chart[d.name];else{if(!d.setup.chart.amExport&&!d.setup.chart.exportConfig)return;d.config=d.migrateSetup(d.setup.chart.amExport||d.setup.chart.exportConfig)}return d.construct(),d.deepMerge(this,d)}}(),AmCharts.addInitHandler(function(a){new AmCharts.export(a)},["pie","serial","xy","funnel","radar","gauge","stock","map","gantt"]);
    
    /***/ }),
    /* 128 */
    /***/ (function(module, exports) {
    
        AmCharts.addInitHandler(function(n){"use strict";var u,t;if(n.responsive!==undefined&&n.responsive.ready!==!0&&n.responsive.enabled===!0&&(u=n.version.split("."),!(u.length<2)&&!(Number(u[0])<3)&&(Number(u[0])!==3||!(Number(u[1])<13)))){t=n.responsive;t.ready=!0;t.currentRules={};t.overridden=[];var e={pie:[{maxWidth:550,legendPosition:"left",overrides:{legend:{enabled:!1}}},{maxWidth:550,legendPosition:"right",overrides:{legend:{enabled:!1}}},{maxWidth:150,overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"top",overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"bottom",overrides:{legend:{enabled:!1}}},{maxHeight:150,overrides:{legend:{enabled:!1}}},{maxWidth:400,overrides:{labelsEnabled:!1}},{maxWidth:100,overrides:{legend:{enabled:!1}}},{maxHeight:350,overrides:{pullOutRadius:0}},{maxHeight:200,overrides:{titles:{enabled:!1},labelsEnabled:!1}},{maxWidth:60,overrides:{autoMargins:!1,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,radius:"50%",innerRadius:0,balloon:{enabled:!1},legend:{enabled:!1}}},{maxHeight:60,overrides:{marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,radius:"50%",innerRadius:0,balloon:{enabled:!1},legend:{enabled:!1}}}],funnel:[{maxWidth:550,legendPosition:"left",overrides:{legend:{enabled:!1}}},{maxWidth:550,legendPosition:"right",overrides:{legend:{enabled:!1}}},{maxWidth:150,overrides:{legend:{enabled:!1}}},{maxHeight:500,legendPosition:"top",overrides:{legend:{enabled:!1}}},{maxHeight:500,legendPosition:"bottom",overrides:{legend:{enabled:!1}}},{maxHeight:150,overrides:{legend:{enabled:!1}}},{maxWidth:400,overrides:{labelsEnabled:!1,marginLeft:10,marginRight:10,legend:{enabled:!1}}},{maxHeight:350,overrides:{pullOutRadius:0,legend:{enabled:!1}}},{maxHeight:300,overrides:{titles:{enabled:!1}}}],radar:[{maxWidth:550,legendPosition:"left",overrides:{legend:{enabled:!1}}},{maxWidth:550,legendPosition:"right",overrides:{legend:{enabled:!1}}},{maxWidth:150,overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"top",overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"bottom",overrides:{legend:{enabled:!1}}},{maxHeight:150,overrides:{legend:{enabled:!1}}},{maxWidth:300,overrides:{labelsEnabled:!1}},{maxWidth:200,overrides:{autoMargins:!1,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,radius:"50%",titles:{enabled:!1},valueAxes:{labelsEnabled:!1,radarCategoriesEnabled:!1}}},{maxHeight:300,overrides:{labelsEnabled:!1}},{maxHeight:200,overrides:{autoMargins:!1,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,radius:"50%",titles:{enabled:!1},valueAxes:{radarCategoriesEnabled:!1}}},{maxHeight:100,overrides:{valueAxes:{labelsEnabled:!1}}}],gauge:[{maxWidth:550,legendPosition:"left",overrides:{legend:{enabled:!1}}},{maxWidth:550,legendPosition:"right",overrides:{legend:{enabled:!1}}},{maxWidth:150,overrides:{legend:{enabled:!1}}},{maxHeight:500,legendPosition:"top",overrides:{legend:{enabled:!1}}},{maxHeight:500,legendPosition:"bottom",overrides:{legend:{enabled:!1}}},{maxHeight:150,overrides:{legend:{enabled:!1}}},{maxWidth:200,overrides:{titles:{enabled:!1},allLabels:{enabled:!1},axes:{labelsEnabled:!1}}},{maxHeight:200,overrides:{titles:{enabled:!1},allLabels:{enabled:!1},axes:{labelsEnabled:!1}}}],serial:[{maxWidth:550,legendPosition:"left",overrides:{legend:{enabled:!1}}},{maxWidth:550,legendPosition:"right",overrides:{legend:{enabled:!1}}},{maxWidth:100,overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"top",overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"bottom",overrides:{legend:{enabled:!1}}},{maxHeight:100,overrides:{legend:{enabled:!1}}},{maxWidth:350,overrides:{autoMarginOffset:0,graphs:{hideBulletsCount:10}}},{maxWidth:350,rotate:!1,overrides:{marginLeft:10,marginRight:10,valueAxes:{ignoreAxisWidth:!0,inside:!0,title:"",showFirstLabel:!1,showLastLabel:!1},graphs:{bullet:"none"}}},{maxWidth:350,rotate:!0,overrides:{marginLeft:10,marginRight:10,categoryAxis:{ignoreAxisWidth:!0,inside:!0,title:""}}},{maxWidth:200,rotate:!1,overrides:{marginLeft:10,marginRight:10,marginTop:10,marginBottom:10,categoryAxis:{ignoreAxisWidth:!0,labelsEnabled:!1,inside:!0,title:"",guides:{inside:!0}},valueAxes:{ignoreAxisWidth:!0,labelsEnabled:!1,axisAlpha:0,guides:{label:""}},legend:{enabled:!1}}},{maxWidth:200,rotate:!0,overrides:{chartScrollbar:{scrollbarHeight:4,graph:"",resizeEnabled:!1},categoryAxis:{labelsEnabled:!1,axisAlpha:0,guides:{label:""}},legend:{enabled:!1}}},{maxWidth:100,rotate:!1,overrides:{valueAxes:{gridAlpha:0}}},{maxWidth:100,rotate:!0,overrides:{categoryAxis:{gridAlpha:0}}},{maxHeight:300,overrides:{autoMarginOffset:0,graphs:{hideBulletsCount:10}}},{maxHeight:200,rotate:!1,overrides:{marginTop:10,marginBottom:10,categoryAxis:{ignoreAxisWidth:!0,inside:!0,title:"",showFirstLabel:!1,showLastLabel:!1}}},{maxHeight:200,rotate:!0,overrides:{marginTop:10,marginBottom:10,valueAxes:{ignoreAxisWidth:!0,inside:!0,title:"",showFirstLabel:!1,showLastLabel:!1},graphs:{bullet:"none"}}},{maxHeight:150,rotate:!1,overrides:{titles:{enabled:!1},chartScrollbar:{scrollbarHeight:4,graph:"",resizeEnabled:!1},categoryAxis:{labelsEnabled:!1,ignoreAxisWidth:!0,axisAlpha:0,guides:{label:""}}}},{maxHeight:150,rotate:!0,overrides:{titles:{enabled:!1},valueAxes:{labelsEnabled:!1,ignoreAxisWidth:!0,axisAlpha:0,guides:{label:""}}}},{maxHeight:100,rotate:!1,overrides:{valueAxes:{labelsEnabled:!1,ignoreAxisWidth:!0,axisAlpha:0,gridAlpha:0,guides:{label:""}}}},{maxHeight:100,rotate:!0,overrides:{categoryAxis:{labelsEnabled:!1,ignoreAxisWidth:!0,axisAlpha:0,gridAlpha:0,guides:{label:""}}}},{maxWidth:100,overrides:{autoMargins:!1,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,categoryAxis:{labelsEnabled:!1},valueAxes:{labelsEnabled:!1}}},{maxHeight:100,overrides:{autoMargins:!1,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,categoryAxis:{labelsEnabled:!1},valueAxes:{labelsEnabled:!1}}}],xy:[{maxWidth:550,legendPosition:"left",overrides:{legend:{enabled:!1}}},{maxWidth:550,legendPosition:"right",overrides:{legend:{enabled:!1}}},{maxWidth:100,overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"top",overrides:{legend:{enabled:!1}}},{maxHeight:350,legendPosition:"bottom",overrides:{legend:{enabled:!1}}},{maxHeight:100,overrides:{legend:{enabled:!1}}},{maxWidth:250,overrides:{autoMarginOffset:0,autoMargins:!1,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,valueAxes:{inside:!0,title:"",showFirstLabel:!1,showLastLabel:!1},legend:{enabled:!1}}},{maxWidth:150,overrides:{valueyAxes:{labelsEnabled:!1,axisAlpha:0,gridAlpha:0,guides:{label:""}}}},{maxHeight:250,overrides:{autoMarginOffset:0,autoMargins:!1,marginTop:0,marginBottom:0,marginLeft:0,marginRight:0,valueAxes:{inside:!0,title:"",showFirstLabel:!1,showLastLabel:!1},legend:{enabled:!1}}},{maxWidth:150,overrides:{valueyAxes:{labelsEnabled:!1,axisAlpha:0,gridAlpha:0,guides:{label:""}}}}],stock:[{maxWidth:500,overrides:{dataSetSelector:{position:"top"},periodSelector:{position:"bottom"}}},{maxWidth:400,overrides:{dataSetSelector:{selectText:"",compareText:""},periodSelector:{periodsText:"",inputFieldsEnabled:!1}}}],map:[{maxWidth:200,overrides:{zoomControl:{zoomControlEnabled:!1},smallMap:{enabled:!1},valueLegend:{enabled:!1},dataProvider:{areas:{descriptionWindowWidth:160,descriptionWindowRight:10,descriptionWindowTop:10},images:{descriptionWindowWidth:160,descriptionWindowRight:10,descriptionWindowTop:10},lines:{descriptionWindowWidth:160,descriptionWindowRight:10,descriptionWindowTop:10}}}},{maxWidth:150,overrides:{dataProvider:{areas:{descriptionWindowWidth:110,descriptionWindowRight:10,descriptionWindowTop:10},images:{descriptionWindowWidth:110,descriptionWindowRight:10,descriptionWindowTop:10},lines:{descriptionWindowWidth:110,descriptionWindowLeft:10,descriptionWindowRight:10}}}},{maxHeight:200,overrides:{zoomControl:{zoomControlEnabled:!1},smallMap:{enabled:!1},valueLegend:{enabled:!1},dataProvider:{areas:{descriptionWindowHeight:160,descriptionWindowRight:10,descriptionWindowTop:10},images:{descriptionWindowHeight:160,descriptionWindowRight:10,descriptionWindowTop:10},lines:{descriptionWindowHeight:160,descriptionWindowRight:10,descriptionWindowTop:10}}}},{maxHeight:150,overrides:{dataProvider:{areas:{descriptionWindowHeight:110,descriptionWindowRight:10,descriptionWindowTop:10},images:{descriptionWindowHeight:110,descriptionWindowRight:10,descriptionWindowTop:10},lines:{descriptionWindowHeight:110,descriptionWindowLeft:10,descriptionWindowRight:10}}}}]},i=function(n){return n===null||n===undefined},o=function(n){return!i(n)&&Object.prototype.toString.call(n)==="[object Array]"},r=function(n){return n!==null&&typeof n=="object"},y=function(n,t){for(var i=0;i<n.length;i++)if(r(n[i])&&n[i].id===t)return n[i];return undefined},h=function(n){var i,t;if(!r(n))return n;if(o(n))return n.slice();i={};for(t in n)Object.prototype.hasOwnProperty.call(n,t)&&(i[t]=h(n[t]));return i},c="{F0578839-A214-4E2D-8D1B-44941ECE8332}_",l={},s=function(n,i,r){var u=c+i;u in n||(n[u]=i in n?n[i]:l);n[i]=h(r);t.overridden.push({object:n,property:i})},a=function(n,t){var i=n[c+t];i===l?delete n[t]:n[t]=i},p=function(){while(t.overridden.length>0){var n=t.overridden.pop();a(n.object,n.property)}},w=function(){n.dataChanged=!0;n.type!=="xy"&&(n.marginsUpdated=!1);n.zoomOutOnDataUpdate=!1;n.validateNow(!0);a(n,"zoomOutOnDataUpdate")},f=function(n,t){var h,e,u,p,l,c,w,a,v;if(!i(t))for(h in t)if(Object.prototype.hasOwnProperty.call(t,h)){if(e=n[h],u=t[h],i(e)){s(n,h,u);continue}if(o(e)){if(o(u)){if(e.length>0&&!r(e[0])||u.length>0&&!r(u[0])){s(n,h,u);continue}for(p=!0,l=0;l<u.length;l++)if(i(u[l])||i(u[l].id)){p=!1;break}if(p){for(c=0;c<u.length;c++){if(w=y(e,u[c].id),w===undefined)throw'could not find element to override in "'+h+'" with ID: '+u[c].id;f(w,u[c])}continue}if(u.length<=e.length){for(a=0;a<u.length;a++)f(e[a],u[a]);continue}throw"too many index-based overrides specified for object array property: "+h;}if(r(u)){for(v=0;v<e.length;v++)f(e[v],u);continue}throw"non-object override detected for array property: "+h;}if(r(e)){f(e,u);continue}s(n,h,u)}},v=function(){for(var r,c,e,s=n.divRealWidth,h=n.divRealHeight,o=!1,u=0;u<t.rules.length;u++)r=t.rules[u],c=(r.minWidth===undefined||r.minWidth<=s)&&(r.maxWidth===undefined||r.maxWidth>=s)&&(r.minHeight===undefined||r.minHeight<=h)&&(r.maxHeight===undefined||r.maxHeight>=h)&&(r.rotate===undefined||r.rotate===!0&&n.rotate===!0||r.rotate===!1&&(n.rotate===undefined||n.rotate===!1))&&(r.legendPosition===undefined||n.legend!==undefined&&n.legend.position!==undefined&&n.legend.position===r.legendPosition),c?t.currentRules[u]===undefined&&(t.currentRules[u]=!0,o=!0):t.currentRules[u]!==undefined&&(t.currentRules[u]=undefined,o=!0);if(o){p();for(e in t.currentRules)if(Object.prototype.hasOwnProperty.call(t.currentRules,e)&&t.currentRules[e]!==undefined){if(i(t.rules[e]))throw"null or undefined rule in index: "+e;f(n,t.rules[e].overrides)}w()}};e.gantt=e.serial;o(t.rules)?t.addDefaultRules!==!1&&(t.rules=e[n.type].concat(t.rules)):t.rules=e[n.type];s(n,"zoomOutOnDataUpdate",n.zoomOutOnDataUpdate);n.addListener("resized",v);n.addListener("init",v)}},["pie","serial","xy","funnel","radar","gauge","gantt","stock","map"]);
        //# sourceMappingURL=responsive.min.js.map
    
    
    /***/ }),
    /* 129 */
    /***/ (function(module, exports) {
    
        AmCharts.themes.light = {
    
            themeName:"light",
    
            AmChart: {
                color: "#000000", backgroundColor: "#FFFFFF"
            },
    
            AmCoordinateChart: {
                colors: ["#67b7dc", "#fdd400", "#84b761", "#cc4748", "#cd82ad", "#2f4074", "#448e4d", "#b7b83f", "#b9783f", "#b93e3d", "#913167"]
            },
    
            AmStockChart: {
                colors: ["#67b7dc", "#fdd400", "#84b761", "#cc4748", "#cd82ad", "#2f4074", "#448e4d", "#b7b83f", "#b9783f", "#b93e3d", "#913167"]
            },
    
            AmSlicedChart: {
                colors: ["#67b7dc", "#fdd400", "#84b761", "#cc4748", "#cd82ad", "#2f4074", "#448e4d", "#b7b83f", "#b9783f", "#b93e3d", "#913167"],
                outlineAlpha: 1,
                outlineThickness: 2,
                labelTickColor: "#000000",
                labelTickAlpha: 0.3
            },
    
            AmRectangularChart: {
                zoomOutButtonColor: '#000000',
                zoomOutButtonRollOverAlpha: 0.15,
                zoomOutButtonImage: "lens.png"
            },
    
            AxisBase: {
                axisColor: "#000000",
                axisAlpha: 0.3,
                gridAlpha: 0.1,
                gridColor: "#000000"
            },
    
            ChartScrollbar: {
                backgroundColor: "#000000",
                backgroundAlpha: 0.12,
                graphFillAlpha: 0.5,
                graphLineAlpha: 0,
                selectedBackgroundColor: "#FFFFFF",
                selectedBackgroundAlpha: 0.4,
                gridAlpha: 0.15
            },
    
            ChartCursor: {
                cursorColor: "#000000",
                color: "#FFFFFF",
                cursorAlpha: 0.5
            },
    
            AmLegend: {
                color: "#000000"
            },
    
            AmGraph: {
                lineAlpha: 0.9
            },
            GaugeArrow: {
                color: "#000000",
                alpha: 0.8,
                nailAlpha: 0,
                innerRadius: "40%",
                nailRadius: 15,
                startWidth: 15,
                borderAlpha: 0.8,
                nailBorderAlpha: 0
            },
    
            GaugeAxis: {
                tickColor: "#000000",
                tickAlpha: 1,
                tickLength: 15,
                minorTickLength: 8,
                axisThickness: 3,
                axisColor: '#000000',
                axisAlpha: 1,
                bandAlpha: 0.8
            },
    
            TrendLine: {
                lineColor: "#c03246",
                lineAlpha: 0.8
            },
    
            // ammap
            AreasSettings: {
                alpha: 0.8,
                color: "#67b7dc",
                colorSolid: "#003767",
                unlistedAreasAlpha: 0.4,
                unlistedAreasColor: "#000000",
                outlineColor: "#FFFFFF",
                outlineAlpha: 0.5,
                outlineThickness: 0.5,
                rollOverColor: "#3c5bdc",
                rollOverOutlineColor: "#FFFFFF",
                selectedOutlineColor: "#FFFFFF",
                selectedColor: "#f15135",
                unlistedAreasOutlineColor: "#FFFFFF",
                unlistedAreasOutlineAlpha: 0.5
            },
    
            LinesSettings: {
                color: "#000000",
                alpha: 0.8
            },
    
            ImagesSettings: {
                alpha: 0.8,
                labelColor: "#000000",
                color: "#000000",
                labelRollOverColor: "#3c5bdc"
            },
    
            ZoomControl: {
                buttonRollOverColor: "#3c5bdc",
                buttonFillColor: "#3994e2",
                buttonBorderColor: "#3994e2",
                buttonFillAlpha: 0.8,
                gridBackgroundColor: "#FFFFFF",
                buttonBorderAlpha:0,
                buttonCornerRadius:2,
                gridColor:"#FFFFFF",
                gridBackgroundColor:"#000000",
                buttonIconAlpha:0.6,
                gridAlpha: 0.6,
                buttonSize:20
            },
    
            SmallMap: {
                mapColor: "#000000",
                rectangleColor: "#f15135",
                backgroundColor: "#FFFFFF",
                backgroundAlpha: 0.7,
                borderThickness: 1,
                borderAlpha: 0.8
            },
    
            // the defaults below are set using CSS syntax, you can use any existing css property
            // if you don't use Stock chart, you can delete lines below
            PeriodSelector: {
                color: "#000000"
            },
    
            PeriodButton: {
                color: "#000000",
                background: "transparent",
                opacity: 0.7,
                border: "1px solid rgba(0, 0, 0, .3)",
                MozBorderRadius: "5px",
                borderRadius: "5px",
                margin: "1px",
                outline: "none",
                boxSizing: "border-box"
            },
    
            PeriodButtonSelected: {
                color: "#000000",
                backgroundColor: "#b9cdf5",
                border: "1px solid rgba(0, 0, 0, .3)",
                MozBorderRadius: "5px",
                borderRadius: "5px",
                margin: "1px",
                outline: "none",
                opacity: 1,
                boxSizing: "border-box"
            },
    
            PeriodInputField: {
                color: "#000000",
                background: "transparent",
                border: "1px solid rgba(0, 0, 0, .3)",
                outline: "none"
            },
    
            DataSetSelector: {
    
                color: "#000000",
                selectedBackgroundColor: "#b9cdf5",
                rollOverBackgroundColor: "#a8b0e4"
            },
    
            DataSetCompareList: {
                color: "#000000",
                lineHeight: "100%",
                boxSizing: "initial",
                webkitBoxSizing: "initial",
                border: "1px solid rgba(0, 0, 0, .3)"
            },
    
            DataSetSelect: {
                border: "1px solid rgba(0, 0, 0, .3)",
                outline: "none"
            }
    
        };
    
    }),
    /* 130 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 * The MIT License

	Copyright (c) 2013 by Sveinn Steinarsson

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
	*/

	"use strict";
    
        !(module.exports = {
            initDownsample: function initDownsample(H) {
    
                if (!Array.isArray) {
                    Array.isArray = function (vArg) {
                        return Object.prototype.toString.call(vArg) === "[object Array]";
                    };
                }
    
                var floor = Math.floor,
                    abs = Math.abs;
    
                function largestTriangleThreeBuckets(data, threshold) {
    
                    var data_length = data.length;
                    if (threshold >= data_length || threshold === 0) {
                        return data; // Nothing to do
                    }
    
                    var sampled = [],
                        sampled_index = 0;
    
                    // Bucket size. Leave room for start and end data points
                    var every = (data_length - 2) / (threshold - 2);
    
                    var a = 0,
                        // Initially a is the first point in the triangle
                    max_area_point,
                        max_area,
                        area,
                        next_a;
    
                    sampled[sampled_index++] = data[a]; // Always add the first point
    
                    for (var i = 0; i < threshold - 2; i++) {
    
                        // Calculate point average for next bucket (containing c)
                        var avg_x = 0,
                            avg_y = 0,
                            avg_range_start = floor((i + 1) * every) + 1,
                            avg_range_end = floor((i + 2) * every) + 1;
                        avg_range_end = avg_range_end < data_length ? avg_range_end : data_length;
    
                        var avg_range_length = avg_range_end - avg_range_start;
    
                        for (; avg_range_start < avg_range_end; avg_range_start++) {
                            avg_x += data[avg_range_start][0] * 1; // * 1 enforces Number (value may be Date)
                            avg_y += data[avg_range_start][1] * 1;
                        }
                        avg_x /= avg_range_length;
                        avg_y /= avg_range_length;
    
                        // Get the range for this bucket
                        var range_offs = floor((i + 0) * every) + 1,
                            range_to = floor((i + 1) * every) + 1;
    
                        // Point a
                        var point_a_x = data[a][0] * 1,
                            // Enforce Number (value may be Date)
                        point_a_y = data[a][1] * 1;
    
                        max_area = area = -1;
    
                        for (; range_offs < range_to; range_offs++) {
                            // Calculate triangle area over three buckets
                            area = abs((point_a_x - avg_x) * (data[range_offs][1] - point_a_y) - (point_a_x - data[range_offs][0]) * (avg_y - point_a_y)) * 0.5;
                            if (area > max_area) {
                                max_area = area;
                                max_area_point = data[range_offs];
                                next_a = range_offs; // Next a is this b
                            }
                        }
    
                        sampled[sampled_index++] = max_area_point; // Pick this point from the bucket
                        a = next_a; // This a is the next a (chosen b)
                    }
    
                    sampled[sampled_index++] = data[data_length - 1]; // Always add last
    
                    return sampled;
                }
    
                H.wrap(H.Series.prototype, 'setData', function (proceed) {
                    var opt = this.options;
                    if (opt.hasOwnProperty('downsample')) {
                        console.log('ARGUMENTS', arguments);
                        console.log('This', this);
                        console.log('This.options', this.options);
                        if (Array.isArray(arguments[1][0]) && arguments[1][0].length == 2) {
                            // Data is array of arrays with two values
                            arguments[1] = largestTriangleThreeBuckets(arguments[1], opt.downsample.threshold);
                        } else if (!isNaN(parseFloat(arguments[1][0])) && isFinite(arguments[1][0])) {
                            // Data is array of numerical values.
                            var point_x = typeof opt.pointStart != 'undefined' ? opt.pointStart : 0; // First X
                            var pointInterval = typeof opt.pointInterval != 'undefined' ? opt.pointInterval : 1;
                            // Turn it into array of arrays with two values.
                            for (var i = 0, len = arguments[1].length; i < len; i++) {
                                arguments[1][i] = [point_x, arguments[1][i]];
                                point_x += pointInterval;
                            }
                            arguments[1] = largestTriangleThreeBuckets(arguments[1], opt.downsample.threshold);
                        } else {
                            console.log("Downsample Error: Invalid data format! Note: Array of objects and Range Series are not supported");
                        }
                    }
                    proceed.apply(this, Array.prototype.slice.call(arguments, 1));
                });
            } 
        })
    }),
    /******/ ])});;
    